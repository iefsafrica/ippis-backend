// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/"
type AppRouteHandlerRoutes = "/api/accounts" | "/api/accounts/[id]" | "/api/accounts/balance" | "/api/admin/activities" | "/api/admin/auth/login" | "/api/admin/auth/logout" | "/api/admin/auth/me" | "/api/admin/auth/reset-password" | "/api/admin/backup" | "/api/admin/backup/[id]/delete" | "/api/admin/backup/[id]/download" | "/api/admin/backup/[id]/restore" | "/api/admin/backup/schedule" | "/api/admin/clear-all-data" | "/api/admin/clear-pending-employees" | "/api/admin/dashboard/chart" | "/api/admin/dashboard/recent" | "/api/admin/dashboard/stats" | "/api/admin/db-health" | "/api/admin/db-setup" | "/api/admin/debug/pending" | "/api/admin/debug/table-structure" | "/api/admin/diagnostics/db-connection" | "/api/admin/diagnostics/pending-employees" | "/api/admin/diagnostics/pending-table" | "/api/admin/diagnostics/tables" | "/api/admin/documents" | "/api/admin/documents/[id]" | "/api/admin/documents/[id]/reject" | "/api/admin/documents/all" | "/api/admin/documents/employee/[employeeId]/reject-all" | "/api/admin/documents/employee/[employeeId]/verify-all" | "/api/admin/documents/pending" | "/api/admin/documents/pending/count" | "/api/admin/documents/upload" | "/api/admin/documents/verify/[id]" | "/api/admin/employees" | "/api/admin/employees/[id]" | "/api/admin/execute-clear-script" | "/api/admin/import" | "/api/admin/import/mock" | "/api/admin/import/validate" | "/api/admin/init" | "/api/admin/migrate-pending-table" | "/api/admin/migrate-remove-name-column" | "/api/admin/notifications" | "/api/admin/notifications/[id]" | "/api/admin/notifications/read" | "/api/admin/pending" | "/api/admin/pending/[id]/approve" | "/api/admin/pending/[id]/reject" | "/api/admin/pending/clear" | "/api/admin/pending/mock" | "/api/admin/permissions-setup" | "/api/admin/rearrange-columns" | "/api/admin/reports" | "/api/admin/reports/export" | "/api/admin/seed-pending-employees" | "/api/admin/seed-test-employees" | "/api/admin/settings" | "/api/admin/setup-dashboard-tables" | "/api/admin/setup-db" | "/api/admin/setup-pending-table" | "/api/admin/setup-tables" | "/api/admin/system-setup" | "/api/admin/test-email" | "/api/admin/users-setup" | "/api/admin/users/[id]/password" | "/api/admin/users/[id]/profile" | "/api/admin/users/create" | "/api/auth/[...nextauth]" | "/api/clear-service-workers" | "/api/db-setup" | "/api/db-test" | "/api/disable-sw" | "/api/health" | "/api/payments" | "/api/payments/etranzact" | "/api/payments/etranzact/callback" | "/api/register" | "/api/register/documents" | "/api/register/employment-info" | "/api/register/init" | "/api/register/personal-info" | "/api/register/prefill" | "/api/register/status/[id]" | "/api/register/submit" | "/api/register/verification" | "/api/sw-blocker" | "/api/track" | "/api/verify/bvn" | "/api/verify/nin"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/accounts": {}
  "/api/accounts/[id]": { "id": string; }
  "/api/accounts/balance": {}
  "/api/admin/activities": {}
  "/api/admin/auth/login": {}
  "/api/admin/auth/logout": {}
  "/api/admin/auth/me": {}
  "/api/admin/auth/reset-password": {}
  "/api/admin/backup": {}
  "/api/admin/backup/[id]/delete": { "id": string; }
  "/api/admin/backup/[id]/download": { "id": string; }
  "/api/admin/backup/[id]/restore": { "id": string; }
  "/api/admin/backup/schedule": {}
  "/api/admin/clear-all-data": {}
  "/api/admin/clear-pending-employees": {}
  "/api/admin/dashboard/chart": {}
  "/api/admin/dashboard/recent": {}
  "/api/admin/dashboard/stats": {}
  "/api/admin/db-health": {}
  "/api/admin/db-setup": {}
  "/api/admin/debug/pending": {}
  "/api/admin/debug/table-structure": {}
  "/api/admin/diagnostics/db-connection": {}
  "/api/admin/diagnostics/pending-employees": {}
  "/api/admin/diagnostics/pending-table": {}
  "/api/admin/diagnostics/tables": {}
  "/api/admin/documents": {}
  "/api/admin/documents/[id]": { "id": string; }
  "/api/admin/documents/[id]/reject": { "id": string; }
  "/api/admin/documents/all": {}
  "/api/admin/documents/employee/[employeeId]/reject-all": { "employeeId": string; }
  "/api/admin/documents/employee/[employeeId]/verify-all": { "employeeId": string; }
  "/api/admin/documents/pending": {}
  "/api/admin/documents/pending/count": {}
  "/api/admin/documents/upload": {}
  "/api/admin/documents/verify/[id]": { "id": string; }
  "/api/admin/employees": {}
  "/api/admin/employees/[id]": { "id": string; }
  "/api/admin/execute-clear-script": {}
  "/api/admin/import": {}
  "/api/admin/import/mock": {}
  "/api/admin/import/validate": {}
  "/api/admin/init": {}
  "/api/admin/migrate-pending-table": {}
  "/api/admin/migrate-remove-name-column": {}
  "/api/admin/notifications": {}
  "/api/admin/notifications/[id]": { "id": string; }
  "/api/admin/notifications/read": {}
  "/api/admin/pending": {}
  "/api/admin/pending/[id]/approve": { "id": string; }
  "/api/admin/pending/[id]/reject": { "id": string; }
  "/api/admin/pending/clear": {}
  "/api/admin/pending/mock": {}
  "/api/admin/permissions-setup": {}
  "/api/admin/rearrange-columns": {}
  "/api/admin/reports": {}
  "/api/admin/reports/export": {}
  "/api/admin/seed-pending-employees": {}
  "/api/admin/seed-test-employees": {}
  "/api/admin/settings": {}
  "/api/admin/setup-dashboard-tables": {}
  "/api/admin/setup-db": {}
  "/api/admin/setup-pending-table": {}
  "/api/admin/setup-tables": {}
  "/api/admin/system-setup": {}
  "/api/admin/test-email": {}
  "/api/admin/users-setup": {}
  "/api/admin/users/[id]/password": { "id": string; }
  "/api/admin/users/[id]/profile": { "id": string; }
  "/api/admin/users/create": {}
  "/api/auth/[...nextauth]": { "nextauth": string[]; }
  "/api/clear-service-workers": {}
  "/api/db-setup": {}
  "/api/db-test": {}
  "/api/disable-sw": {}
  "/api/health": {}
  "/api/payments": {}
  "/api/payments/etranzact": {}
  "/api/payments/etranzact/callback": {}
  "/api/register": {}
  "/api/register/documents": {}
  "/api/register/employment-info": {}
  "/api/register/init": {}
  "/api/register/personal-info": {}
  "/api/register/prefill": {}
  "/api/register/status/[id]": { "id": string; }
  "/api/register/submit": {}
  "/api/register/verification": {}
  "/api/sw-blocker": {}
  "/api/track": {}
  "/api/verify/bvn": {}
  "/api/verify/nin": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
