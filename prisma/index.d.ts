
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model admin_permissions
 * 
 */
export type admin_permissions = $Result.DefaultSelection<Prisma.$admin_permissionsPayload>
/**
 * Model admin_sessions
 * 
 */
export type admin_sessions = $Result.DefaultSelection<Prisma.$admin_sessionsPayload>
/**
 * Model admin_users
 * 
 */
export type admin_users = $Result.DefaultSelection<Prisma.$admin_usersPayload>
/**
 * Model dashboard_notifications
 * 
 */
export type dashboard_notifications = $Result.DefaultSelection<Prisma.$dashboard_notificationsPayload>
/**
 * Model dashboard_widgets
 * 
 */
export type dashboard_widgets = $Result.DefaultSelection<Prisma.$dashboard_widgetsPayload>
/**
 * Model document_uploads
 * 
 */
export type document_uploads = $Result.DefaultSelection<Prisma.$document_uploadsPayload>
/**
 * Model employees
 * 
 */
export type employees = $Result.DefaultSelection<Prisma.$employeesPayload>
/**
 * Model employment_info
 * 
 */
export type employment_info = $Result.DefaultSelection<Prisma.$employment_infoPayload>
/**
 * Model password_reset_tokens
 * 
 */
export type password_reset_tokens = $Result.DefaultSelection<Prisma.$password_reset_tokensPayload>
/**
 * Model pending_employees
 * 
 */
export type pending_employees = $Result.DefaultSelection<Prisma.$pending_employeesPayload>
/**
 * Model personal_info
 * 
 */
export type personal_info = $Result.DefaultSelection<Prisma.$personal_infoPayload>
/**
 * Model registration_comments
 * 
 */
export type registration_comments = $Result.DefaultSelection<Prisma.$registration_commentsPayload>
/**
 * Model registration_history
 * 
 */
export type registration_history = $Result.DefaultSelection<Prisma.$registration_historyPayload>
/**
 * Model registrations
 * 
 */
export type registrations = $Result.DefaultSelection<Prisma.$registrationsPayload>
/**
 * Model VerificationData
 * 
 */
export type VerificationData = $Result.DefaultSelection<Prisma.$VerificationDataPayload>
/**
 * Model Account
 * 
 */
export type Account = $Result.DefaultSelection<Prisma.$AccountPayload>
/**
 * Model employee_payments
 * 
 */
export type employee_payments = $Result.DefaultSelection<Prisma.$employee_paymentsPayload>
/**
 * Model salary_budget
 * 
 */
export type salary_budget = $Result.DefaultSelection<Prisma.$salary_budgetPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Admin_permissions
 * const admin_permissions = await prisma.admin_permissions.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Admin_permissions
   * const admin_permissions = await prisma.admin_permissions.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.admin_permissions`: Exposes CRUD operations for the **admin_permissions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Admin_permissions
    * const admin_permissions = await prisma.admin_permissions.findMany()
    * ```
    */
  get admin_permissions(): Prisma.admin_permissionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.admin_sessions`: Exposes CRUD operations for the **admin_sessions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Admin_sessions
    * const admin_sessions = await prisma.admin_sessions.findMany()
    * ```
    */
  get admin_sessions(): Prisma.admin_sessionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.admin_users`: Exposes CRUD operations for the **admin_users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Admin_users
    * const admin_users = await prisma.admin_users.findMany()
    * ```
    */
  get admin_users(): Prisma.admin_usersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.dashboard_notifications`: Exposes CRUD operations for the **dashboard_notifications** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Dashboard_notifications
    * const dashboard_notifications = await prisma.dashboard_notifications.findMany()
    * ```
    */
  get dashboard_notifications(): Prisma.dashboard_notificationsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.dashboard_widgets`: Exposes CRUD operations for the **dashboard_widgets** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Dashboard_widgets
    * const dashboard_widgets = await prisma.dashboard_widgets.findMany()
    * ```
    */
  get dashboard_widgets(): Prisma.dashboard_widgetsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.document_uploads`: Exposes CRUD operations for the **document_uploads** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Document_uploads
    * const document_uploads = await prisma.document_uploads.findMany()
    * ```
    */
  get document_uploads(): Prisma.document_uploadsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.employees`: Exposes CRUD operations for the **employees** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Employees
    * const employees = await prisma.employees.findMany()
    * ```
    */
  get employees(): Prisma.employeesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.employment_info`: Exposes CRUD operations for the **employment_info** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Employment_infos
    * const employment_infos = await prisma.employment_info.findMany()
    * ```
    */
  get employment_info(): Prisma.employment_infoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.password_reset_tokens`: Exposes CRUD operations for the **password_reset_tokens** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Password_reset_tokens
    * const password_reset_tokens = await prisma.password_reset_tokens.findMany()
    * ```
    */
  get password_reset_tokens(): Prisma.password_reset_tokensDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.pending_employees`: Exposes CRUD operations for the **pending_employees** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pending_employees
    * const pending_employees = await prisma.pending_employees.findMany()
    * ```
    */
  get pending_employees(): Prisma.pending_employeesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.personal_info`: Exposes CRUD operations for the **personal_info** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Personal_infos
    * const personal_infos = await prisma.personal_info.findMany()
    * ```
    */
  get personal_info(): Prisma.personal_infoDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.registration_comments`: Exposes CRUD operations for the **registration_comments** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Registration_comments
    * const registration_comments = await prisma.registration_comments.findMany()
    * ```
    */
  get registration_comments(): Prisma.registration_commentsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.registration_history`: Exposes CRUD operations for the **registration_history** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Registration_histories
    * const registration_histories = await prisma.registration_history.findMany()
    * ```
    */
  get registration_history(): Prisma.registration_historyDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.registrations`: Exposes CRUD operations for the **registrations** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Registrations
    * const registrations = await prisma.registrations.findMany()
    * ```
    */
  get registrations(): Prisma.registrationsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.verificationData`: Exposes CRUD operations for the **VerificationData** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more VerificationData
    * const verificationData = await prisma.verificationData.findMany()
    * ```
    */
  get verificationData(): Prisma.VerificationDataDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.account`: Exposes CRUD operations for the **Account** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Accounts
    * const accounts = await prisma.account.findMany()
    * ```
    */
  get account(): Prisma.AccountDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.employee_payments`: Exposes CRUD operations for the **employee_payments** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Employee_payments
    * const employee_payments = await prisma.employee_payments.findMany()
    * ```
    */
  get employee_payments(): Prisma.employee_paymentsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.salary_budget`: Exposes CRUD operations for the **salary_budget** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Salary_budgets
    * const salary_budgets = await prisma.salary_budget.findMany()
    * ```
    */
  get salary_budget(): Prisma.salary_budgetDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.17.1
   * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    admin_permissions: 'admin_permissions',
    admin_sessions: 'admin_sessions',
    admin_users: 'admin_users',
    dashboard_notifications: 'dashboard_notifications',
    dashboard_widgets: 'dashboard_widgets',
    document_uploads: 'document_uploads',
    employees: 'employees',
    employment_info: 'employment_info',
    password_reset_tokens: 'password_reset_tokens',
    pending_employees: 'pending_employees',
    personal_info: 'personal_info',
    registration_comments: 'registration_comments',
    registration_history: 'registration_history',
    registrations: 'registrations',
    VerificationData: 'VerificationData',
    Account: 'Account',
    employee_payments: 'employee_payments',
    salary_budget: 'salary_budget'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "admin_permissions" | "admin_sessions" | "admin_users" | "dashboard_notifications" | "dashboard_widgets" | "document_uploads" | "employees" | "employment_info" | "password_reset_tokens" | "pending_employees" | "personal_info" | "registration_comments" | "registration_history" | "registrations" | "verificationData" | "account" | "employee_payments" | "salary_budget"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      admin_permissions: {
        payload: Prisma.$admin_permissionsPayload<ExtArgs>
        fields: Prisma.admin_permissionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.admin_permissionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_permissionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.admin_permissionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_permissionsPayload>
          }
          findFirst: {
            args: Prisma.admin_permissionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_permissionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.admin_permissionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_permissionsPayload>
          }
          findMany: {
            args: Prisma.admin_permissionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_permissionsPayload>[]
          }
          create: {
            args: Prisma.admin_permissionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_permissionsPayload>
          }
          createMany: {
            args: Prisma.admin_permissionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.admin_permissionsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_permissionsPayload>[]
          }
          delete: {
            args: Prisma.admin_permissionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_permissionsPayload>
          }
          update: {
            args: Prisma.admin_permissionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_permissionsPayload>
          }
          deleteMany: {
            args: Prisma.admin_permissionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.admin_permissionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.admin_permissionsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_permissionsPayload>[]
          }
          upsert: {
            args: Prisma.admin_permissionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_permissionsPayload>
          }
          aggregate: {
            args: Prisma.Admin_permissionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAdmin_permissions>
          }
          groupBy: {
            args: Prisma.admin_permissionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Admin_permissionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.admin_permissionsCountArgs<ExtArgs>
            result: $Utils.Optional<Admin_permissionsCountAggregateOutputType> | number
          }
        }
      }
      admin_sessions: {
        payload: Prisma.$admin_sessionsPayload<ExtArgs>
        fields: Prisma.admin_sessionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.admin_sessionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_sessionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.admin_sessionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_sessionsPayload>
          }
          findFirst: {
            args: Prisma.admin_sessionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_sessionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.admin_sessionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_sessionsPayload>
          }
          findMany: {
            args: Prisma.admin_sessionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_sessionsPayload>[]
          }
          create: {
            args: Prisma.admin_sessionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_sessionsPayload>
          }
          createMany: {
            args: Prisma.admin_sessionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.admin_sessionsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_sessionsPayload>[]
          }
          delete: {
            args: Prisma.admin_sessionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_sessionsPayload>
          }
          update: {
            args: Prisma.admin_sessionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_sessionsPayload>
          }
          deleteMany: {
            args: Prisma.admin_sessionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.admin_sessionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.admin_sessionsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_sessionsPayload>[]
          }
          upsert: {
            args: Prisma.admin_sessionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_sessionsPayload>
          }
          aggregate: {
            args: Prisma.Admin_sessionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAdmin_sessions>
          }
          groupBy: {
            args: Prisma.admin_sessionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Admin_sessionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.admin_sessionsCountArgs<ExtArgs>
            result: $Utils.Optional<Admin_sessionsCountAggregateOutputType> | number
          }
        }
      }
      admin_users: {
        payload: Prisma.$admin_usersPayload<ExtArgs>
        fields: Prisma.admin_usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.admin_usersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.admin_usersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_usersPayload>
          }
          findFirst: {
            args: Prisma.admin_usersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.admin_usersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_usersPayload>
          }
          findMany: {
            args: Prisma.admin_usersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_usersPayload>[]
          }
          create: {
            args: Prisma.admin_usersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_usersPayload>
          }
          createMany: {
            args: Prisma.admin_usersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.admin_usersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_usersPayload>[]
          }
          delete: {
            args: Prisma.admin_usersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_usersPayload>
          }
          update: {
            args: Prisma.admin_usersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_usersPayload>
          }
          deleteMany: {
            args: Prisma.admin_usersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.admin_usersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.admin_usersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_usersPayload>[]
          }
          upsert: {
            args: Prisma.admin_usersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$admin_usersPayload>
          }
          aggregate: {
            args: Prisma.Admin_usersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAdmin_users>
          }
          groupBy: {
            args: Prisma.admin_usersGroupByArgs<ExtArgs>
            result: $Utils.Optional<Admin_usersGroupByOutputType>[]
          }
          count: {
            args: Prisma.admin_usersCountArgs<ExtArgs>
            result: $Utils.Optional<Admin_usersCountAggregateOutputType> | number
          }
        }
      }
      dashboard_notifications: {
        payload: Prisma.$dashboard_notificationsPayload<ExtArgs>
        fields: Prisma.dashboard_notificationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.dashboard_notificationsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dashboard_notificationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.dashboard_notificationsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dashboard_notificationsPayload>
          }
          findFirst: {
            args: Prisma.dashboard_notificationsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dashboard_notificationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.dashboard_notificationsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dashboard_notificationsPayload>
          }
          findMany: {
            args: Prisma.dashboard_notificationsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dashboard_notificationsPayload>[]
          }
          create: {
            args: Prisma.dashboard_notificationsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dashboard_notificationsPayload>
          }
          createMany: {
            args: Prisma.dashboard_notificationsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.dashboard_notificationsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dashboard_notificationsPayload>[]
          }
          delete: {
            args: Prisma.dashboard_notificationsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dashboard_notificationsPayload>
          }
          update: {
            args: Prisma.dashboard_notificationsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dashboard_notificationsPayload>
          }
          deleteMany: {
            args: Prisma.dashboard_notificationsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.dashboard_notificationsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.dashboard_notificationsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dashboard_notificationsPayload>[]
          }
          upsert: {
            args: Prisma.dashboard_notificationsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dashboard_notificationsPayload>
          }
          aggregate: {
            args: Prisma.Dashboard_notificationsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDashboard_notifications>
          }
          groupBy: {
            args: Prisma.dashboard_notificationsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Dashboard_notificationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.dashboard_notificationsCountArgs<ExtArgs>
            result: $Utils.Optional<Dashboard_notificationsCountAggregateOutputType> | number
          }
        }
      }
      dashboard_widgets: {
        payload: Prisma.$dashboard_widgetsPayload<ExtArgs>
        fields: Prisma.dashboard_widgetsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.dashboard_widgetsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dashboard_widgetsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.dashboard_widgetsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dashboard_widgetsPayload>
          }
          findFirst: {
            args: Prisma.dashboard_widgetsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dashboard_widgetsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.dashboard_widgetsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dashboard_widgetsPayload>
          }
          findMany: {
            args: Prisma.dashboard_widgetsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dashboard_widgetsPayload>[]
          }
          create: {
            args: Prisma.dashboard_widgetsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dashboard_widgetsPayload>
          }
          createMany: {
            args: Prisma.dashboard_widgetsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.dashboard_widgetsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dashboard_widgetsPayload>[]
          }
          delete: {
            args: Prisma.dashboard_widgetsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dashboard_widgetsPayload>
          }
          update: {
            args: Prisma.dashboard_widgetsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dashboard_widgetsPayload>
          }
          deleteMany: {
            args: Prisma.dashboard_widgetsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.dashboard_widgetsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.dashboard_widgetsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dashboard_widgetsPayload>[]
          }
          upsert: {
            args: Prisma.dashboard_widgetsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$dashboard_widgetsPayload>
          }
          aggregate: {
            args: Prisma.Dashboard_widgetsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDashboard_widgets>
          }
          groupBy: {
            args: Prisma.dashboard_widgetsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Dashboard_widgetsGroupByOutputType>[]
          }
          count: {
            args: Prisma.dashboard_widgetsCountArgs<ExtArgs>
            result: $Utils.Optional<Dashboard_widgetsCountAggregateOutputType> | number
          }
        }
      }
      document_uploads: {
        payload: Prisma.$document_uploadsPayload<ExtArgs>
        fields: Prisma.document_uploadsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.document_uploadsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$document_uploadsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.document_uploadsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$document_uploadsPayload>
          }
          findFirst: {
            args: Prisma.document_uploadsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$document_uploadsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.document_uploadsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$document_uploadsPayload>
          }
          findMany: {
            args: Prisma.document_uploadsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$document_uploadsPayload>[]
          }
          create: {
            args: Prisma.document_uploadsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$document_uploadsPayload>
          }
          createMany: {
            args: Prisma.document_uploadsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.document_uploadsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$document_uploadsPayload>[]
          }
          delete: {
            args: Prisma.document_uploadsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$document_uploadsPayload>
          }
          update: {
            args: Prisma.document_uploadsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$document_uploadsPayload>
          }
          deleteMany: {
            args: Prisma.document_uploadsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.document_uploadsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.document_uploadsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$document_uploadsPayload>[]
          }
          upsert: {
            args: Prisma.document_uploadsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$document_uploadsPayload>
          }
          aggregate: {
            args: Prisma.Document_uploadsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDocument_uploads>
          }
          groupBy: {
            args: Prisma.document_uploadsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Document_uploadsGroupByOutputType>[]
          }
          count: {
            args: Prisma.document_uploadsCountArgs<ExtArgs>
            result: $Utils.Optional<Document_uploadsCountAggregateOutputType> | number
          }
        }
      }
      employees: {
        payload: Prisma.$employeesPayload<ExtArgs>
        fields: Prisma.employeesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.employeesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.employeesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeesPayload>
          }
          findFirst: {
            args: Prisma.employeesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.employeesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeesPayload>
          }
          findMany: {
            args: Prisma.employeesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeesPayload>[]
          }
          create: {
            args: Prisma.employeesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeesPayload>
          }
          createMany: {
            args: Prisma.employeesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.employeesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeesPayload>[]
          }
          delete: {
            args: Prisma.employeesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeesPayload>
          }
          update: {
            args: Prisma.employeesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeesPayload>
          }
          deleteMany: {
            args: Prisma.employeesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.employeesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.employeesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeesPayload>[]
          }
          upsert: {
            args: Prisma.employeesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employeesPayload>
          }
          aggregate: {
            args: Prisma.EmployeesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmployees>
          }
          groupBy: {
            args: Prisma.employeesGroupByArgs<ExtArgs>
            result: $Utils.Optional<EmployeesGroupByOutputType>[]
          }
          count: {
            args: Prisma.employeesCountArgs<ExtArgs>
            result: $Utils.Optional<EmployeesCountAggregateOutputType> | number
          }
        }
      }
      employment_info: {
        payload: Prisma.$employment_infoPayload<ExtArgs>
        fields: Prisma.employment_infoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.employment_infoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employment_infoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.employment_infoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employment_infoPayload>
          }
          findFirst: {
            args: Prisma.employment_infoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employment_infoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.employment_infoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employment_infoPayload>
          }
          findMany: {
            args: Prisma.employment_infoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employment_infoPayload>[]
          }
          create: {
            args: Prisma.employment_infoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employment_infoPayload>
          }
          createMany: {
            args: Prisma.employment_infoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.employment_infoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employment_infoPayload>[]
          }
          delete: {
            args: Prisma.employment_infoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employment_infoPayload>
          }
          update: {
            args: Prisma.employment_infoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employment_infoPayload>
          }
          deleteMany: {
            args: Prisma.employment_infoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.employment_infoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.employment_infoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employment_infoPayload>[]
          }
          upsert: {
            args: Prisma.employment_infoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employment_infoPayload>
          }
          aggregate: {
            args: Prisma.Employment_infoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmployment_info>
          }
          groupBy: {
            args: Prisma.employment_infoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Employment_infoGroupByOutputType>[]
          }
          count: {
            args: Prisma.employment_infoCountArgs<ExtArgs>
            result: $Utils.Optional<Employment_infoCountAggregateOutputType> | number
          }
        }
      }
      password_reset_tokens: {
        payload: Prisma.$password_reset_tokensPayload<ExtArgs>
        fields: Prisma.password_reset_tokensFieldRefs
        operations: {
          findUnique: {
            args: Prisma.password_reset_tokensFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.password_reset_tokensFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload>
          }
          findFirst: {
            args: Prisma.password_reset_tokensFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.password_reset_tokensFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload>
          }
          findMany: {
            args: Prisma.password_reset_tokensFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload>[]
          }
          create: {
            args: Prisma.password_reset_tokensCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload>
          }
          createMany: {
            args: Prisma.password_reset_tokensCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.password_reset_tokensCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload>[]
          }
          delete: {
            args: Prisma.password_reset_tokensDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload>
          }
          update: {
            args: Prisma.password_reset_tokensUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload>
          }
          deleteMany: {
            args: Prisma.password_reset_tokensDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.password_reset_tokensUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.password_reset_tokensUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload>[]
          }
          upsert: {
            args: Prisma.password_reset_tokensUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$password_reset_tokensPayload>
          }
          aggregate: {
            args: Prisma.Password_reset_tokensAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePassword_reset_tokens>
          }
          groupBy: {
            args: Prisma.password_reset_tokensGroupByArgs<ExtArgs>
            result: $Utils.Optional<Password_reset_tokensGroupByOutputType>[]
          }
          count: {
            args: Prisma.password_reset_tokensCountArgs<ExtArgs>
            result: $Utils.Optional<Password_reset_tokensCountAggregateOutputType> | number
          }
        }
      }
      pending_employees: {
        payload: Prisma.$pending_employeesPayload<ExtArgs>
        fields: Prisma.pending_employeesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.pending_employeesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pending_employeesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.pending_employeesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pending_employeesPayload>
          }
          findFirst: {
            args: Prisma.pending_employeesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pending_employeesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.pending_employeesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pending_employeesPayload>
          }
          findMany: {
            args: Prisma.pending_employeesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pending_employeesPayload>[]
          }
          create: {
            args: Prisma.pending_employeesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pending_employeesPayload>
          }
          createMany: {
            args: Prisma.pending_employeesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.pending_employeesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pending_employeesPayload>[]
          }
          delete: {
            args: Prisma.pending_employeesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pending_employeesPayload>
          }
          update: {
            args: Prisma.pending_employeesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pending_employeesPayload>
          }
          deleteMany: {
            args: Prisma.pending_employeesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.pending_employeesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.pending_employeesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pending_employeesPayload>[]
          }
          upsert: {
            args: Prisma.pending_employeesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$pending_employeesPayload>
          }
          aggregate: {
            args: Prisma.Pending_employeesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePending_employees>
          }
          groupBy: {
            args: Prisma.pending_employeesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Pending_employeesGroupByOutputType>[]
          }
          count: {
            args: Prisma.pending_employeesCountArgs<ExtArgs>
            result: $Utils.Optional<Pending_employeesCountAggregateOutputType> | number
          }
        }
      }
      personal_info: {
        payload: Prisma.$personal_infoPayload<ExtArgs>
        fields: Prisma.personal_infoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.personal_infoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personal_infoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.personal_infoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personal_infoPayload>
          }
          findFirst: {
            args: Prisma.personal_infoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personal_infoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.personal_infoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personal_infoPayload>
          }
          findMany: {
            args: Prisma.personal_infoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personal_infoPayload>[]
          }
          create: {
            args: Prisma.personal_infoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personal_infoPayload>
          }
          createMany: {
            args: Prisma.personal_infoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.personal_infoCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personal_infoPayload>[]
          }
          delete: {
            args: Prisma.personal_infoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personal_infoPayload>
          }
          update: {
            args: Prisma.personal_infoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personal_infoPayload>
          }
          deleteMany: {
            args: Prisma.personal_infoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.personal_infoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.personal_infoUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personal_infoPayload>[]
          }
          upsert: {
            args: Prisma.personal_infoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$personal_infoPayload>
          }
          aggregate: {
            args: Prisma.Personal_infoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePersonal_info>
          }
          groupBy: {
            args: Prisma.personal_infoGroupByArgs<ExtArgs>
            result: $Utils.Optional<Personal_infoGroupByOutputType>[]
          }
          count: {
            args: Prisma.personal_infoCountArgs<ExtArgs>
            result: $Utils.Optional<Personal_infoCountAggregateOutputType> | number
          }
        }
      }
      registration_comments: {
        payload: Prisma.$registration_commentsPayload<ExtArgs>
        fields: Prisma.registration_commentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.registration_commentsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_commentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.registration_commentsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_commentsPayload>
          }
          findFirst: {
            args: Prisma.registration_commentsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_commentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.registration_commentsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_commentsPayload>
          }
          findMany: {
            args: Prisma.registration_commentsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_commentsPayload>[]
          }
          create: {
            args: Prisma.registration_commentsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_commentsPayload>
          }
          createMany: {
            args: Prisma.registration_commentsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.registration_commentsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_commentsPayload>[]
          }
          delete: {
            args: Prisma.registration_commentsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_commentsPayload>
          }
          update: {
            args: Prisma.registration_commentsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_commentsPayload>
          }
          deleteMany: {
            args: Prisma.registration_commentsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.registration_commentsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.registration_commentsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_commentsPayload>[]
          }
          upsert: {
            args: Prisma.registration_commentsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_commentsPayload>
          }
          aggregate: {
            args: Prisma.Registration_commentsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRegistration_comments>
          }
          groupBy: {
            args: Prisma.registration_commentsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Registration_commentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.registration_commentsCountArgs<ExtArgs>
            result: $Utils.Optional<Registration_commentsCountAggregateOutputType> | number
          }
        }
      }
      registration_history: {
        payload: Prisma.$registration_historyPayload<ExtArgs>
        fields: Prisma.registration_historyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.registration_historyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_historyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.registration_historyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_historyPayload>
          }
          findFirst: {
            args: Prisma.registration_historyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_historyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.registration_historyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_historyPayload>
          }
          findMany: {
            args: Prisma.registration_historyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_historyPayload>[]
          }
          create: {
            args: Prisma.registration_historyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_historyPayload>
          }
          createMany: {
            args: Prisma.registration_historyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.registration_historyCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_historyPayload>[]
          }
          delete: {
            args: Prisma.registration_historyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_historyPayload>
          }
          update: {
            args: Prisma.registration_historyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_historyPayload>
          }
          deleteMany: {
            args: Prisma.registration_historyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.registration_historyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.registration_historyUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_historyPayload>[]
          }
          upsert: {
            args: Prisma.registration_historyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_historyPayload>
          }
          aggregate: {
            args: Prisma.Registration_historyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRegistration_history>
          }
          groupBy: {
            args: Prisma.registration_historyGroupByArgs<ExtArgs>
            result: $Utils.Optional<Registration_historyGroupByOutputType>[]
          }
          count: {
            args: Prisma.registration_historyCountArgs<ExtArgs>
            result: $Utils.Optional<Registration_historyCountAggregateOutputType> | number
          }
        }
      }
      registrations: {
        payload: Prisma.$registrationsPayload<ExtArgs>
        fields: Prisma.registrationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.registrationsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registrationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.registrationsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registrationsPayload>
          }
          findFirst: {
            args: Prisma.registrationsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registrationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.registrationsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registrationsPayload>
          }
          findMany: {
            args: Prisma.registrationsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registrationsPayload>[]
          }
          create: {
            args: Prisma.registrationsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registrationsPayload>
          }
          createMany: {
            args: Prisma.registrationsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.registrationsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registrationsPayload>[]
          }
          delete: {
            args: Prisma.registrationsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registrationsPayload>
          }
          update: {
            args: Prisma.registrationsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registrationsPayload>
          }
          deleteMany: {
            args: Prisma.registrationsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.registrationsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.registrationsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registrationsPayload>[]
          }
          upsert: {
            args: Prisma.registrationsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registrationsPayload>
          }
          aggregate: {
            args: Prisma.RegistrationsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRegistrations>
          }
          groupBy: {
            args: Prisma.registrationsGroupByArgs<ExtArgs>
            result: $Utils.Optional<RegistrationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.registrationsCountArgs<ExtArgs>
            result: $Utils.Optional<RegistrationsCountAggregateOutputType> | number
          }
        }
      }
      VerificationData: {
        payload: Prisma.$VerificationDataPayload<ExtArgs>
        fields: Prisma.VerificationDataFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VerificationDataFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationDataPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VerificationDataFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationDataPayload>
          }
          findFirst: {
            args: Prisma.VerificationDataFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationDataPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VerificationDataFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationDataPayload>
          }
          findMany: {
            args: Prisma.VerificationDataFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationDataPayload>[]
          }
          create: {
            args: Prisma.VerificationDataCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationDataPayload>
          }
          createMany: {
            args: Prisma.VerificationDataCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VerificationDataCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationDataPayload>[]
          }
          delete: {
            args: Prisma.VerificationDataDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationDataPayload>
          }
          update: {
            args: Prisma.VerificationDataUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationDataPayload>
          }
          deleteMany: {
            args: Prisma.VerificationDataDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VerificationDataUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.VerificationDataUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationDataPayload>[]
          }
          upsert: {
            args: Prisma.VerificationDataUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationDataPayload>
          }
          aggregate: {
            args: Prisma.VerificationDataAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVerificationData>
          }
          groupBy: {
            args: Prisma.VerificationDataGroupByArgs<ExtArgs>
            result: $Utils.Optional<VerificationDataGroupByOutputType>[]
          }
          count: {
            args: Prisma.VerificationDataCountArgs<ExtArgs>
            result: $Utils.Optional<VerificationDataCountAggregateOutputType> | number
          }
        }
      }
      Account: {
        payload: Prisma.$AccountPayload<ExtArgs>
        fields: Prisma.AccountFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AccountFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AccountFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findFirst: {
            args: Prisma.AccountFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AccountFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findMany: {
            args: Prisma.AccountFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          create: {
            args: Prisma.AccountCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          createMany: {
            args: Prisma.AccountCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AccountCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          delete: {
            args: Prisma.AccountDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          update: {
            args: Prisma.AccountUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          deleteMany: {
            args: Prisma.AccountDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AccountUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AccountUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          upsert: {
            args: Prisma.AccountUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          aggregate: {
            args: Prisma.AccountAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAccount>
          }
          groupBy: {
            args: Prisma.AccountGroupByArgs<ExtArgs>
            result: $Utils.Optional<AccountGroupByOutputType>[]
          }
          count: {
            args: Prisma.AccountCountArgs<ExtArgs>
            result: $Utils.Optional<AccountCountAggregateOutputType> | number
          }
        }
      }
      employee_payments: {
        payload: Prisma.$employee_paymentsPayload<ExtArgs>
        fields: Prisma.employee_paymentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.employee_paymentsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employee_paymentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.employee_paymentsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employee_paymentsPayload>
          }
          findFirst: {
            args: Prisma.employee_paymentsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employee_paymentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.employee_paymentsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employee_paymentsPayload>
          }
          findMany: {
            args: Prisma.employee_paymentsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employee_paymentsPayload>[]
          }
          create: {
            args: Prisma.employee_paymentsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employee_paymentsPayload>
          }
          createMany: {
            args: Prisma.employee_paymentsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.employee_paymentsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employee_paymentsPayload>[]
          }
          delete: {
            args: Prisma.employee_paymentsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employee_paymentsPayload>
          }
          update: {
            args: Prisma.employee_paymentsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employee_paymentsPayload>
          }
          deleteMany: {
            args: Prisma.employee_paymentsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.employee_paymentsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.employee_paymentsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employee_paymentsPayload>[]
          }
          upsert: {
            args: Prisma.employee_paymentsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$employee_paymentsPayload>
          }
          aggregate: {
            args: Prisma.Employee_paymentsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEmployee_payments>
          }
          groupBy: {
            args: Prisma.employee_paymentsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Employee_paymentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.employee_paymentsCountArgs<ExtArgs>
            result: $Utils.Optional<Employee_paymentsCountAggregateOutputType> | number
          }
        }
      }
      salary_budget: {
        payload: Prisma.$salary_budgetPayload<ExtArgs>
        fields: Prisma.salary_budgetFieldRefs
        operations: {
          findUnique: {
            args: Prisma.salary_budgetFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salary_budgetPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.salary_budgetFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salary_budgetPayload>
          }
          findFirst: {
            args: Prisma.salary_budgetFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salary_budgetPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.salary_budgetFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salary_budgetPayload>
          }
          findMany: {
            args: Prisma.salary_budgetFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salary_budgetPayload>[]
          }
          create: {
            args: Prisma.salary_budgetCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salary_budgetPayload>
          }
          createMany: {
            args: Prisma.salary_budgetCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.salary_budgetCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salary_budgetPayload>[]
          }
          delete: {
            args: Prisma.salary_budgetDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salary_budgetPayload>
          }
          update: {
            args: Prisma.salary_budgetUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salary_budgetPayload>
          }
          deleteMany: {
            args: Prisma.salary_budgetDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.salary_budgetUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.salary_budgetUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salary_budgetPayload>[]
          }
          upsert: {
            args: Prisma.salary_budgetUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$salary_budgetPayload>
          }
          aggregate: {
            args: Prisma.Salary_budgetAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSalary_budget>
          }
          groupBy: {
            args: Prisma.salary_budgetGroupByArgs<ExtArgs>
            result: $Utils.Optional<Salary_budgetGroupByOutputType>[]
          }
          count: {
            args: Prisma.salary_budgetCountArgs<ExtArgs>
            result: $Utils.Optional<Salary_budgetCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`
     */
    adapter?: runtime.SqlDriverAdapterFactory | null
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    admin_permissions?: admin_permissionsOmit
    admin_sessions?: admin_sessionsOmit
    admin_users?: admin_usersOmit
    dashboard_notifications?: dashboard_notificationsOmit
    dashboard_widgets?: dashboard_widgetsOmit
    document_uploads?: document_uploadsOmit
    employees?: employeesOmit
    employment_info?: employment_infoOmit
    password_reset_tokens?: password_reset_tokensOmit
    pending_employees?: pending_employeesOmit
    personal_info?: personal_infoOmit
    registration_comments?: registration_commentsOmit
    registration_history?: registration_historyOmit
    registrations?: registrationsOmit
    verificationData?: VerificationDataOmit
    account?: AccountOmit
    employee_payments?: employee_paymentsOmit
    salary_budget?: salary_budgetOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type Admin_usersCountOutputType
   */

  export type Admin_usersCountOutputType = {
    admin_sessions: number
    dashboard_notifications: number
    dashboard_widgets: number
  }

  export type Admin_usersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin_sessions?: boolean | Admin_usersCountOutputTypeCountAdmin_sessionsArgs
    dashboard_notifications?: boolean | Admin_usersCountOutputTypeCountDashboard_notificationsArgs
    dashboard_widgets?: boolean | Admin_usersCountOutputTypeCountDashboard_widgetsArgs
  }

  // Custom InputTypes
  /**
   * Admin_usersCountOutputType without action
   */
  export type Admin_usersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Admin_usersCountOutputType
     */
    select?: Admin_usersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Admin_usersCountOutputType without action
   */
  export type Admin_usersCountOutputTypeCountAdmin_sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: admin_sessionsWhereInput
  }

  /**
   * Admin_usersCountOutputType without action
   */
  export type Admin_usersCountOutputTypeCountDashboard_notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: dashboard_notificationsWhereInput
  }

  /**
   * Admin_usersCountOutputType without action
   */
  export type Admin_usersCountOutputTypeCountDashboard_widgetsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: dashboard_widgetsWhereInput
  }


  /**
   * Count Type RegistrationsCountOutputType
   */

  export type RegistrationsCountOutputType = {
    registration_comments: number
    registration_history: number
  }

  export type RegistrationsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registration_comments?: boolean | RegistrationsCountOutputTypeCountRegistration_commentsArgs
    registration_history?: boolean | RegistrationsCountOutputTypeCountRegistration_historyArgs
  }

  // Custom InputTypes
  /**
   * RegistrationsCountOutputType without action
   */
  export type RegistrationsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RegistrationsCountOutputType
     */
    select?: RegistrationsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * RegistrationsCountOutputType without action
   */
  export type RegistrationsCountOutputTypeCountRegistration_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: registration_commentsWhereInput
  }

  /**
   * RegistrationsCountOutputType without action
   */
  export type RegistrationsCountOutputTypeCountRegistration_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: registration_historyWhereInput
  }


  /**
   * Models
   */

  /**
   * Model admin_permissions
   */

  export type AggregateAdmin_permissions = {
    _count: Admin_permissionsCountAggregateOutputType | null
    _avg: Admin_permissionsAvgAggregateOutputType | null
    _sum: Admin_permissionsSumAggregateOutputType | null
    _min: Admin_permissionsMinAggregateOutputType | null
    _max: Admin_permissionsMaxAggregateOutputType | null
  }

  export type Admin_permissionsAvgAggregateOutputType = {
    id: number | null
  }

  export type Admin_permissionsSumAggregateOutputType = {
    id: number | null
  }

  export type Admin_permissionsMinAggregateOutputType = {
    id: number | null
    role: string | null
    resource: string | null
    action: string | null
    is_allowed: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Admin_permissionsMaxAggregateOutputType = {
    id: number | null
    role: string | null
    resource: string | null
    action: string | null
    is_allowed: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Admin_permissionsCountAggregateOutputType = {
    id: number
    role: number
    resource: number
    action: number
    is_allowed: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Admin_permissionsAvgAggregateInputType = {
    id?: true
  }

  export type Admin_permissionsSumAggregateInputType = {
    id?: true
  }

  export type Admin_permissionsMinAggregateInputType = {
    id?: true
    role?: true
    resource?: true
    action?: true
    is_allowed?: true
    created_at?: true
    updated_at?: true
  }

  export type Admin_permissionsMaxAggregateInputType = {
    id?: true
    role?: true
    resource?: true
    action?: true
    is_allowed?: true
    created_at?: true
    updated_at?: true
  }

  export type Admin_permissionsCountAggregateInputType = {
    id?: true
    role?: true
    resource?: true
    action?: true
    is_allowed?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Admin_permissionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which admin_permissions to aggregate.
     */
    where?: admin_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of admin_permissions to fetch.
     */
    orderBy?: admin_permissionsOrderByWithRelationInput | admin_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: admin_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` admin_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` admin_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned admin_permissions
    **/
    _count?: true | Admin_permissionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Admin_permissionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Admin_permissionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Admin_permissionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Admin_permissionsMaxAggregateInputType
  }

  export type GetAdmin_permissionsAggregateType<T extends Admin_permissionsAggregateArgs> = {
        [P in keyof T & keyof AggregateAdmin_permissions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdmin_permissions[P]>
      : GetScalarType<T[P], AggregateAdmin_permissions[P]>
  }




  export type admin_permissionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: admin_permissionsWhereInput
    orderBy?: admin_permissionsOrderByWithAggregationInput | admin_permissionsOrderByWithAggregationInput[]
    by: Admin_permissionsScalarFieldEnum[] | Admin_permissionsScalarFieldEnum
    having?: admin_permissionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Admin_permissionsCountAggregateInputType | true
    _avg?: Admin_permissionsAvgAggregateInputType
    _sum?: Admin_permissionsSumAggregateInputType
    _min?: Admin_permissionsMinAggregateInputType
    _max?: Admin_permissionsMaxAggregateInputType
  }

  export type Admin_permissionsGroupByOutputType = {
    id: number
    role: string
    resource: string
    action: string
    is_allowed: boolean
    created_at: Date
    updated_at: Date
    _count: Admin_permissionsCountAggregateOutputType | null
    _avg: Admin_permissionsAvgAggregateOutputType | null
    _sum: Admin_permissionsSumAggregateOutputType | null
    _min: Admin_permissionsMinAggregateOutputType | null
    _max: Admin_permissionsMaxAggregateOutputType | null
  }

  type GetAdmin_permissionsGroupByPayload<T extends admin_permissionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Admin_permissionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Admin_permissionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Admin_permissionsGroupByOutputType[P]>
            : GetScalarType<T[P], Admin_permissionsGroupByOutputType[P]>
        }
      >
    >


  export type admin_permissionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    role?: boolean
    resource?: boolean
    action?: boolean
    is_allowed?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["admin_permissions"]>

  export type admin_permissionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    role?: boolean
    resource?: boolean
    action?: boolean
    is_allowed?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["admin_permissions"]>

  export type admin_permissionsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    role?: boolean
    resource?: boolean
    action?: boolean
    is_allowed?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["admin_permissions"]>

  export type admin_permissionsSelectScalar = {
    id?: boolean
    role?: boolean
    resource?: boolean
    action?: boolean
    is_allowed?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type admin_permissionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "role" | "resource" | "action" | "is_allowed" | "created_at" | "updated_at", ExtArgs["result"]["admin_permissions"]>

  export type $admin_permissionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "admin_permissions"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      role: string
      resource: string
      action: string
      is_allowed: boolean
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["admin_permissions"]>
    composites: {}
  }

  type admin_permissionsGetPayload<S extends boolean | null | undefined | admin_permissionsDefaultArgs> = $Result.GetResult<Prisma.$admin_permissionsPayload, S>

  type admin_permissionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<admin_permissionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Admin_permissionsCountAggregateInputType | true
    }

  export interface admin_permissionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['admin_permissions'], meta: { name: 'admin_permissions' } }
    /**
     * Find zero or one Admin_permissions that matches the filter.
     * @param {admin_permissionsFindUniqueArgs} args - Arguments to find a Admin_permissions
     * @example
     * // Get one Admin_permissions
     * const admin_permissions = await prisma.admin_permissions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends admin_permissionsFindUniqueArgs>(args: SelectSubset<T, admin_permissionsFindUniqueArgs<ExtArgs>>): Prisma__admin_permissionsClient<$Result.GetResult<Prisma.$admin_permissionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Admin_permissions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {admin_permissionsFindUniqueOrThrowArgs} args - Arguments to find a Admin_permissions
     * @example
     * // Get one Admin_permissions
     * const admin_permissions = await prisma.admin_permissions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends admin_permissionsFindUniqueOrThrowArgs>(args: SelectSubset<T, admin_permissionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__admin_permissionsClient<$Result.GetResult<Prisma.$admin_permissionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Admin_permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {admin_permissionsFindFirstArgs} args - Arguments to find a Admin_permissions
     * @example
     * // Get one Admin_permissions
     * const admin_permissions = await prisma.admin_permissions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends admin_permissionsFindFirstArgs>(args?: SelectSubset<T, admin_permissionsFindFirstArgs<ExtArgs>>): Prisma__admin_permissionsClient<$Result.GetResult<Prisma.$admin_permissionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Admin_permissions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {admin_permissionsFindFirstOrThrowArgs} args - Arguments to find a Admin_permissions
     * @example
     * // Get one Admin_permissions
     * const admin_permissions = await prisma.admin_permissions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends admin_permissionsFindFirstOrThrowArgs>(args?: SelectSubset<T, admin_permissionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__admin_permissionsClient<$Result.GetResult<Prisma.$admin_permissionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Admin_permissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {admin_permissionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Admin_permissions
     * const admin_permissions = await prisma.admin_permissions.findMany()
     * 
     * // Get first 10 Admin_permissions
     * const admin_permissions = await prisma.admin_permissions.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const admin_permissionsWithIdOnly = await prisma.admin_permissions.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends admin_permissionsFindManyArgs>(args?: SelectSubset<T, admin_permissionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$admin_permissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Admin_permissions.
     * @param {admin_permissionsCreateArgs} args - Arguments to create a Admin_permissions.
     * @example
     * // Create one Admin_permissions
     * const Admin_permissions = await prisma.admin_permissions.create({
     *   data: {
     *     // ... data to create a Admin_permissions
     *   }
     * })
     * 
     */
    create<T extends admin_permissionsCreateArgs>(args: SelectSubset<T, admin_permissionsCreateArgs<ExtArgs>>): Prisma__admin_permissionsClient<$Result.GetResult<Prisma.$admin_permissionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Admin_permissions.
     * @param {admin_permissionsCreateManyArgs} args - Arguments to create many Admin_permissions.
     * @example
     * // Create many Admin_permissions
     * const admin_permissions = await prisma.admin_permissions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends admin_permissionsCreateManyArgs>(args?: SelectSubset<T, admin_permissionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Admin_permissions and returns the data saved in the database.
     * @param {admin_permissionsCreateManyAndReturnArgs} args - Arguments to create many Admin_permissions.
     * @example
     * // Create many Admin_permissions
     * const admin_permissions = await prisma.admin_permissions.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Admin_permissions and only return the `id`
     * const admin_permissionsWithIdOnly = await prisma.admin_permissions.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends admin_permissionsCreateManyAndReturnArgs>(args?: SelectSubset<T, admin_permissionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$admin_permissionsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Admin_permissions.
     * @param {admin_permissionsDeleteArgs} args - Arguments to delete one Admin_permissions.
     * @example
     * // Delete one Admin_permissions
     * const Admin_permissions = await prisma.admin_permissions.delete({
     *   where: {
     *     // ... filter to delete one Admin_permissions
     *   }
     * })
     * 
     */
    delete<T extends admin_permissionsDeleteArgs>(args: SelectSubset<T, admin_permissionsDeleteArgs<ExtArgs>>): Prisma__admin_permissionsClient<$Result.GetResult<Prisma.$admin_permissionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Admin_permissions.
     * @param {admin_permissionsUpdateArgs} args - Arguments to update one Admin_permissions.
     * @example
     * // Update one Admin_permissions
     * const admin_permissions = await prisma.admin_permissions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends admin_permissionsUpdateArgs>(args: SelectSubset<T, admin_permissionsUpdateArgs<ExtArgs>>): Prisma__admin_permissionsClient<$Result.GetResult<Prisma.$admin_permissionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Admin_permissions.
     * @param {admin_permissionsDeleteManyArgs} args - Arguments to filter Admin_permissions to delete.
     * @example
     * // Delete a few Admin_permissions
     * const { count } = await prisma.admin_permissions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends admin_permissionsDeleteManyArgs>(args?: SelectSubset<T, admin_permissionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admin_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {admin_permissionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Admin_permissions
     * const admin_permissions = await prisma.admin_permissions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends admin_permissionsUpdateManyArgs>(args: SelectSubset<T, admin_permissionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admin_permissions and returns the data updated in the database.
     * @param {admin_permissionsUpdateManyAndReturnArgs} args - Arguments to update many Admin_permissions.
     * @example
     * // Update many Admin_permissions
     * const admin_permissions = await prisma.admin_permissions.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Admin_permissions and only return the `id`
     * const admin_permissionsWithIdOnly = await prisma.admin_permissions.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends admin_permissionsUpdateManyAndReturnArgs>(args: SelectSubset<T, admin_permissionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$admin_permissionsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Admin_permissions.
     * @param {admin_permissionsUpsertArgs} args - Arguments to update or create a Admin_permissions.
     * @example
     * // Update or create a Admin_permissions
     * const admin_permissions = await prisma.admin_permissions.upsert({
     *   create: {
     *     // ... data to create a Admin_permissions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Admin_permissions we want to update
     *   }
     * })
     */
    upsert<T extends admin_permissionsUpsertArgs>(args: SelectSubset<T, admin_permissionsUpsertArgs<ExtArgs>>): Prisma__admin_permissionsClient<$Result.GetResult<Prisma.$admin_permissionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Admin_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {admin_permissionsCountArgs} args - Arguments to filter Admin_permissions to count.
     * @example
     * // Count the number of Admin_permissions
     * const count = await prisma.admin_permissions.count({
     *   where: {
     *     // ... the filter for the Admin_permissions we want to count
     *   }
     * })
    **/
    count<T extends admin_permissionsCountArgs>(
      args?: Subset<T, admin_permissionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Admin_permissionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Admin_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Admin_permissionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Admin_permissionsAggregateArgs>(args: Subset<T, Admin_permissionsAggregateArgs>): Prisma.PrismaPromise<GetAdmin_permissionsAggregateType<T>>

    /**
     * Group by Admin_permissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {admin_permissionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends admin_permissionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: admin_permissionsGroupByArgs['orderBy'] }
        : { orderBy?: admin_permissionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, admin_permissionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdmin_permissionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the admin_permissions model
   */
  readonly fields: admin_permissionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for admin_permissions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__admin_permissionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the admin_permissions model
   */
  interface admin_permissionsFieldRefs {
    readonly id: FieldRef<"admin_permissions", 'Int'>
    readonly role: FieldRef<"admin_permissions", 'String'>
    readonly resource: FieldRef<"admin_permissions", 'String'>
    readonly action: FieldRef<"admin_permissions", 'String'>
    readonly is_allowed: FieldRef<"admin_permissions", 'Boolean'>
    readonly created_at: FieldRef<"admin_permissions", 'DateTime'>
    readonly updated_at: FieldRef<"admin_permissions", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * admin_permissions findUnique
   */
  export type admin_permissionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_permissions
     */
    select?: admin_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_permissions
     */
    omit?: admin_permissionsOmit<ExtArgs> | null
    /**
     * Filter, which admin_permissions to fetch.
     */
    where: admin_permissionsWhereUniqueInput
  }

  /**
   * admin_permissions findUniqueOrThrow
   */
  export type admin_permissionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_permissions
     */
    select?: admin_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_permissions
     */
    omit?: admin_permissionsOmit<ExtArgs> | null
    /**
     * Filter, which admin_permissions to fetch.
     */
    where: admin_permissionsWhereUniqueInput
  }

  /**
   * admin_permissions findFirst
   */
  export type admin_permissionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_permissions
     */
    select?: admin_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_permissions
     */
    omit?: admin_permissionsOmit<ExtArgs> | null
    /**
     * Filter, which admin_permissions to fetch.
     */
    where?: admin_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of admin_permissions to fetch.
     */
    orderBy?: admin_permissionsOrderByWithRelationInput | admin_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for admin_permissions.
     */
    cursor?: admin_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` admin_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` admin_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of admin_permissions.
     */
    distinct?: Admin_permissionsScalarFieldEnum | Admin_permissionsScalarFieldEnum[]
  }

  /**
   * admin_permissions findFirstOrThrow
   */
  export type admin_permissionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_permissions
     */
    select?: admin_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_permissions
     */
    omit?: admin_permissionsOmit<ExtArgs> | null
    /**
     * Filter, which admin_permissions to fetch.
     */
    where?: admin_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of admin_permissions to fetch.
     */
    orderBy?: admin_permissionsOrderByWithRelationInput | admin_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for admin_permissions.
     */
    cursor?: admin_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` admin_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` admin_permissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of admin_permissions.
     */
    distinct?: Admin_permissionsScalarFieldEnum | Admin_permissionsScalarFieldEnum[]
  }

  /**
   * admin_permissions findMany
   */
  export type admin_permissionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_permissions
     */
    select?: admin_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_permissions
     */
    omit?: admin_permissionsOmit<ExtArgs> | null
    /**
     * Filter, which admin_permissions to fetch.
     */
    where?: admin_permissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of admin_permissions to fetch.
     */
    orderBy?: admin_permissionsOrderByWithRelationInput | admin_permissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing admin_permissions.
     */
    cursor?: admin_permissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` admin_permissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` admin_permissions.
     */
    skip?: number
    distinct?: Admin_permissionsScalarFieldEnum | Admin_permissionsScalarFieldEnum[]
  }

  /**
   * admin_permissions create
   */
  export type admin_permissionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_permissions
     */
    select?: admin_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_permissions
     */
    omit?: admin_permissionsOmit<ExtArgs> | null
    /**
     * The data needed to create a admin_permissions.
     */
    data: XOR<admin_permissionsCreateInput, admin_permissionsUncheckedCreateInput>
  }

  /**
   * admin_permissions createMany
   */
  export type admin_permissionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many admin_permissions.
     */
    data: admin_permissionsCreateManyInput | admin_permissionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * admin_permissions createManyAndReturn
   */
  export type admin_permissionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_permissions
     */
    select?: admin_permissionsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the admin_permissions
     */
    omit?: admin_permissionsOmit<ExtArgs> | null
    /**
     * The data used to create many admin_permissions.
     */
    data: admin_permissionsCreateManyInput | admin_permissionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * admin_permissions update
   */
  export type admin_permissionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_permissions
     */
    select?: admin_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_permissions
     */
    omit?: admin_permissionsOmit<ExtArgs> | null
    /**
     * The data needed to update a admin_permissions.
     */
    data: XOR<admin_permissionsUpdateInput, admin_permissionsUncheckedUpdateInput>
    /**
     * Choose, which admin_permissions to update.
     */
    where: admin_permissionsWhereUniqueInput
  }

  /**
   * admin_permissions updateMany
   */
  export type admin_permissionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update admin_permissions.
     */
    data: XOR<admin_permissionsUpdateManyMutationInput, admin_permissionsUncheckedUpdateManyInput>
    /**
     * Filter which admin_permissions to update
     */
    where?: admin_permissionsWhereInput
    /**
     * Limit how many admin_permissions to update.
     */
    limit?: number
  }

  /**
   * admin_permissions updateManyAndReturn
   */
  export type admin_permissionsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_permissions
     */
    select?: admin_permissionsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the admin_permissions
     */
    omit?: admin_permissionsOmit<ExtArgs> | null
    /**
     * The data used to update admin_permissions.
     */
    data: XOR<admin_permissionsUpdateManyMutationInput, admin_permissionsUncheckedUpdateManyInput>
    /**
     * Filter which admin_permissions to update
     */
    where?: admin_permissionsWhereInput
    /**
     * Limit how many admin_permissions to update.
     */
    limit?: number
  }

  /**
   * admin_permissions upsert
   */
  export type admin_permissionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_permissions
     */
    select?: admin_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_permissions
     */
    omit?: admin_permissionsOmit<ExtArgs> | null
    /**
     * The filter to search for the admin_permissions to update in case it exists.
     */
    where: admin_permissionsWhereUniqueInput
    /**
     * In case the admin_permissions found by the `where` argument doesn't exist, create a new admin_permissions with this data.
     */
    create: XOR<admin_permissionsCreateInput, admin_permissionsUncheckedCreateInput>
    /**
     * In case the admin_permissions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<admin_permissionsUpdateInput, admin_permissionsUncheckedUpdateInput>
  }

  /**
   * admin_permissions delete
   */
  export type admin_permissionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_permissions
     */
    select?: admin_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_permissions
     */
    omit?: admin_permissionsOmit<ExtArgs> | null
    /**
     * Filter which admin_permissions to delete.
     */
    where: admin_permissionsWhereUniqueInput
  }

  /**
   * admin_permissions deleteMany
   */
  export type admin_permissionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which admin_permissions to delete
     */
    where?: admin_permissionsWhereInput
    /**
     * Limit how many admin_permissions to delete.
     */
    limit?: number
  }

  /**
   * admin_permissions without action
   */
  export type admin_permissionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_permissions
     */
    select?: admin_permissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_permissions
     */
    omit?: admin_permissionsOmit<ExtArgs> | null
  }


  /**
   * Model admin_sessions
   */

  export type AggregateAdmin_sessions = {
    _count: Admin_sessionsCountAggregateOutputType | null
    _avg: Admin_sessionsAvgAggregateOutputType | null
    _sum: Admin_sessionsSumAggregateOutputType | null
    _min: Admin_sessionsMinAggregateOutputType | null
    _max: Admin_sessionsMaxAggregateOutputType | null
  }

  export type Admin_sessionsAvgAggregateOutputType = {
    id: number | null
    admin_id: number | null
  }

  export type Admin_sessionsSumAggregateOutputType = {
    id: number | null
    admin_id: number | null
  }

  export type Admin_sessionsMinAggregateOutputType = {
    id: number | null
    admin_id: number | null
    session_token: string | null
    expires_at: Date | null
    created_at: Date | null
    ip_address: string | null
    user_agent: string | null
  }

  export type Admin_sessionsMaxAggregateOutputType = {
    id: number | null
    admin_id: number | null
    session_token: string | null
    expires_at: Date | null
    created_at: Date | null
    ip_address: string | null
    user_agent: string | null
  }

  export type Admin_sessionsCountAggregateOutputType = {
    id: number
    admin_id: number
    session_token: number
    expires_at: number
    created_at: number
    ip_address: number
    user_agent: number
    _all: number
  }


  export type Admin_sessionsAvgAggregateInputType = {
    id?: true
    admin_id?: true
  }

  export type Admin_sessionsSumAggregateInputType = {
    id?: true
    admin_id?: true
  }

  export type Admin_sessionsMinAggregateInputType = {
    id?: true
    admin_id?: true
    session_token?: true
    expires_at?: true
    created_at?: true
    ip_address?: true
    user_agent?: true
  }

  export type Admin_sessionsMaxAggregateInputType = {
    id?: true
    admin_id?: true
    session_token?: true
    expires_at?: true
    created_at?: true
    ip_address?: true
    user_agent?: true
  }

  export type Admin_sessionsCountAggregateInputType = {
    id?: true
    admin_id?: true
    session_token?: true
    expires_at?: true
    created_at?: true
    ip_address?: true
    user_agent?: true
    _all?: true
  }

  export type Admin_sessionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which admin_sessions to aggregate.
     */
    where?: admin_sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of admin_sessions to fetch.
     */
    orderBy?: admin_sessionsOrderByWithRelationInput | admin_sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: admin_sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` admin_sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` admin_sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned admin_sessions
    **/
    _count?: true | Admin_sessionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Admin_sessionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Admin_sessionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Admin_sessionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Admin_sessionsMaxAggregateInputType
  }

  export type GetAdmin_sessionsAggregateType<T extends Admin_sessionsAggregateArgs> = {
        [P in keyof T & keyof AggregateAdmin_sessions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdmin_sessions[P]>
      : GetScalarType<T[P], AggregateAdmin_sessions[P]>
  }




  export type admin_sessionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: admin_sessionsWhereInput
    orderBy?: admin_sessionsOrderByWithAggregationInput | admin_sessionsOrderByWithAggregationInput[]
    by: Admin_sessionsScalarFieldEnum[] | Admin_sessionsScalarFieldEnum
    having?: admin_sessionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Admin_sessionsCountAggregateInputType | true
    _avg?: Admin_sessionsAvgAggregateInputType
    _sum?: Admin_sessionsSumAggregateInputType
    _min?: Admin_sessionsMinAggregateInputType
    _max?: Admin_sessionsMaxAggregateInputType
  }

  export type Admin_sessionsGroupByOutputType = {
    id: number
    admin_id: number
    session_token: string
    expires_at: Date
    created_at: Date
    ip_address: string | null
    user_agent: string | null
    _count: Admin_sessionsCountAggregateOutputType | null
    _avg: Admin_sessionsAvgAggregateOutputType | null
    _sum: Admin_sessionsSumAggregateOutputType | null
    _min: Admin_sessionsMinAggregateOutputType | null
    _max: Admin_sessionsMaxAggregateOutputType | null
  }

  type GetAdmin_sessionsGroupByPayload<T extends admin_sessionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Admin_sessionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Admin_sessionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Admin_sessionsGroupByOutputType[P]>
            : GetScalarType<T[P], Admin_sessionsGroupByOutputType[P]>
        }
      >
    >


  export type admin_sessionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    admin_id?: boolean
    session_token?: boolean
    expires_at?: boolean
    created_at?: boolean
    ip_address?: boolean
    user_agent?: boolean
    admin_users?: boolean | admin_usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["admin_sessions"]>

  export type admin_sessionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    admin_id?: boolean
    session_token?: boolean
    expires_at?: boolean
    created_at?: boolean
    ip_address?: boolean
    user_agent?: boolean
    admin_users?: boolean | admin_usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["admin_sessions"]>

  export type admin_sessionsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    admin_id?: boolean
    session_token?: boolean
    expires_at?: boolean
    created_at?: boolean
    ip_address?: boolean
    user_agent?: boolean
    admin_users?: boolean | admin_usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["admin_sessions"]>

  export type admin_sessionsSelectScalar = {
    id?: boolean
    admin_id?: boolean
    session_token?: boolean
    expires_at?: boolean
    created_at?: boolean
    ip_address?: boolean
    user_agent?: boolean
  }

  export type admin_sessionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "admin_id" | "session_token" | "expires_at" | "created_at" | "ip_address" | "user_agent", ExtArgs["result"]["admin_sessions"]>
  export type admin_sessionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin_users?: boolean | admin_usersDefaultArgs<ExtArgs>
  }
  export type admin_sessionsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin_users?: boolean | admin_usersDefaultArgs<ExtArgs>
  }
  export type admin_sessionsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin_users?: boolean | admin_usersDefaultArgs<ExtArgs>
  }

  export type $admin_sessionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "admin_sessions"
    objects: {
      admin_users: Prisma.$admin_usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      admin_id: number
      session_token: string
      expires_at: Date
      created_at: Date
      ip_address: string | null
      user_agent: string | null
    }, ExtArgs["result"]["admin_sessions"]>
    composites: {}
  }

  type admin_sessionsGetPayload<S extends boolean | null | undefined | admin_sessionsDefaultArgs> = $Result.GetResult<Prisma.$admin_sessionsPayload, S>

  type admin_sessionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<admin_sessionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Admin_sessionsCountAggregateInputType | true
    }

  export interface admin_sessionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['admin_sessions'], meta: { name: 'admin_sessions' } }
    /**
     * Find zero or one Admin_sessions that matches the filter.
     * @param {admin_sessionsFindUniqueArgs} args - Arguments to find a Admin_sessions
     * @example
     * // Get one Admin_sessions
     * const admin_sessions = await prisma.admin_sessions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends admin_sessionsFindUniqueArgs>(args: SelectSubset<T, admin_sessionsFindUniqueArgs<ExtArgs>>): Prisma__admin_sessionsClient<$Result.GetResult<Prisma.$admin_sessionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Admin_sessions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {admin_sessionsFindUniqueOrThrowArgs} args - Arguments to find a Admin_sessions
     * @example
     * // Get one Admin_sessions
     * const admin_sessions = await prisma.admin_sessions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends admin_sessionsFindUniqueOrThrowArgs>(args: SelectSubset<T, admin_sessionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__admin_sessionsClient<$Result.GetResult<Prisma.$admin_sessionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Admin_sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {admin_sessionsFindFirstArgs} args - Arguments to find a Admin_sessions
     * @example
     * // Get one Admin_sessions
     * const admin_sessions = await prisma.admin_sessions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends admin_sessionsFindFirstArgs>(args?: SelectSubset<T, admin_sessionsFindFirstArgs<ExtArgs>>): Prisma__admin_sessionsClient<$Result.GetResult<Prisma.$admin_sessionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Admin_sessions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {admin_sessionsFindFirstOrThrowArgs} args - Arguments to find a Admin_sessions
     * @example
     * // Get one Admin_sessions
     * const admin_sessions = await prisma.admin_sessions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends admin_sessionsFindFirstOrThrowArgs>(args?: SelectSubset<T, admin_sessionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__admin_sessionsClient<$Result.GetResult<Prisma.$admin_sessionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Admin_sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {admin_sessionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Admin_sessions
     * const admin_sessions = await prisma.admin_sessions.findMany()
     * 
     * // Get first 10 Admin_sessions
     * const admin_sessions = await prisma.admin_sessions.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const admin_sessionsWithIdOnly = await prisma.admin_sessions.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends admin_sessionsFindManyArgs>(args?: SelectSubset<T, admin_sessionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$admin_sessionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Admin_sessions.
     * @param {admin_sessionsCreateArgs} args - Arguments to create a Admin_sessions.
     * @example
     * // Create one Admin_sessions
     * const Admin_sessions = await prisma.admin_sessions.create({
     *   data: {
     *     // ... data to create a Admin_sessions
     *   }
     * })
     * 
     */
    create<T extends admin_sessionsCreateArgs>(args: SelectSubset<T, admin_sessionsCreateArgs<ExtArgs>>): Prisma__admin_sessionsClient<$Result.GetResult<Prisma.$admin_sessionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Admin_sessions.
     * @param {admin_sessionsCreateManyArgs} args - Arguments to create many Admin_sessions.
     * @example
     * // Create many Admin_sessions
     * const admin_sessions = await prisma.admin_sessions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends admin_sessionsCreateManyArgs>(args?: SelectSubset<T, admin_sessionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Admin_sessions and returns the data saved in the database.
     * @param {admin_sessionsCreateManyAndReturnArgs} args - Arguments to create many Admin_sessions.
     * @example
     * // Create many Admin_sessions
     * const admin_sessions = await prisma.admin_sessions.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Admin_sessions and only return the `id`
     * const admin_sessionsWithIdOnly = await prisma.admin_sessions.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends admin_sessionsCreateManyAndReturnArgs>(args?: SelectSubset<T, admin_sessionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$admin_sessionsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Admin_sessions.
     * @param {admin_sessionsDeleteArgs} args - Arguments to delete one Admin_sessions.
     * @example
     * // Delete one Admin_sessions
     * const Admin_sessions = await prisma.admin_sessions.delete({
     *   where: {
     *     // ... filter to delete one Admin_sessions
     *   }
     * })
     * 
     */
    delete<T extends admin_sessionsDeleteArgs>(args: SelectSubset<T, admin_sessionsDeleteArgs<ExtArgs>>): Prisma__admin_sessionsClient<$Result.GetResult<Prisma.$admin_sessionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Admin_sessions.
     * @param {admin_sessionsUpdateArgs} args - Arguments to update one Admin_sessions.
     * @example
     * // Update one Admin_sessions
     * const admin_sessions = await prisma.admin_sessions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends admin_sessionsUpdateArgs>(args: SelectSubset<T, admin_sessionsUpdateArgs<ExtArgs>>): Prisma__admin_sessionsClient<$Result.GetResult<Prisma.$admin_sessionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Admin_sessions.
     * @param {admin_sessionsDeleteManyArgs} args - Arguments to filter Admin_sessions to delete.
     * @example
     * // Delete a few Admin_sessions
     * const { count } = await prisma.admin_sessions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends admin_sessionsDeleteManyArgs>(args?: SelectSubset<T, admin_sessionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admin_sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {admin_sessionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Admin_sessions
     * const admin_sessions = await prisma.admin_sessions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends admin_sessionsUpdateManyArgs>(args: SelectSubset<T, admin_sessionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admin_sessions and returns the data updated in the database.
     * @param {admin_sessionsUpdateManyAndReturnArgs} args - Arguments to update many Admin_sessions.
     * @example
     * // Update many Admin_sessions
     * const admin_sessions = await prisma.admin_sessions.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Admin_sessions and only return the `id`
     * const admin_sessionsWithIdOnly = await prisma.admin_sessions.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends admin_sessionsUpdateManyAndReturnArgs>(args: SelectSubset<T, admin_sessionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$admin_sessionsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Admin_sessions.
     * @param {admin_sessionsUpsertArgs} args - Arguments to update or create a Admin_sessions.
     * @example
     * // Update or create a Admin_sessions
     * const admin_sessions = await prisma.admin_sessions.upsert({
     *   create: {
     *     // ... data to create a Admin_sessions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Admin_sessions we want to update
     *   }
     * })
     */
    upsert<T extends admin_sessionsUpsertArgs>(args: SelectSubset<T, admin_sessionsUpsertArgs<ExtArgs>>): Prisma__admin_sessionsClient<$Result.GetResult<Prisma.$admin_sessionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Admin_sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {admin_sessionsCountArgs} args - Arguments to filter Admin_sessions to count.
     * @example
     * // Count the number of Admin_sessions
     * const count = await prisma.admin_sessions.count({
     *   where: {
     *     // ... the filter for the Admin_sessions we want to count
     *   }
     * })
    **/
    count<T extends admin_sessionsCountArgs>(
      args?: Subset<T, admin_sessionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Admin_sessionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Admin_sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Admin_sessionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Admin_sessionsAggregateArgs>(args: Subset<T, Admin_sessionsAggregateArgs>): Prisma.PrismaPromise<GetAdmin_sessionsAggregateType<T>>

    /**
     * Group by Admin_sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {admin_sessionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends admin_sessionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: admin_sessionsGroupByArgs['orderBy'] }
        : { orderBy?: admin_sessionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, admin_sessionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdmin_sessionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the admin_sessions model
   */
  readonly fields: admin_sessionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for admin_sessions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__admin_sessionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    admin_users<T extends admin_usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, admin_usersDefaultArgs<ExtArgs>>): Prisma__admin_usersClient<$Result.GetResult<Prisma.$admin_usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the admin_sessions model
   */
  interface admin_sessionsFieldRefs {
    readonly id: FieldRef<"admin_sessions", 'Int'>
    readonly admin_id: FieldRef<"admin_sessions", 'Int'>
    readonly session_token: FieldRef<"admin_sessions", 'String'>
    readonly expires_at: FieldRef<"admin_sessions", 'DateTime'>
    readonly created_at: FieldRef<"admin_sessions", 'DateTime'>
    readonly ip_address: FieldRef<"admin_sessions", 'String'>
    readonly user_agent: FieldRef<"admin_sessions", 'String'>
  }
    

  // Custom InputTypes
  /**
   * admin_sessions findUnique
   */
  export type admin_sessionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_sessions
     */
    select?: admin_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_sessions
     */
    omit?: admin_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_sessionsInclude<ExtArgs> | null
    /**
     * Filter, which admin_sessions to fetch.
     */
    where: admin_sessionsWhereUniqueInput
  }

  /**
   * admin_sessions findUniqueOrThrow
   */
  export type admin_sessionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_sessions
     */
    select?: admin_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_sessions
     */
    omit?: admin_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_sessionsInclude<ExtArgs> | null
    /**
     * Filter, which admin_sessions to fetch.
     */
    where: admin_sessionsWhereUniqueInput
  }

  /**
   * admin_sessions findFirst
   */
  export type admin_sessionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_sessions
     */
    select?: admin_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_sessions
     */
    omit?: admin_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_sessionsInclude<ExtArgs> | null
    /**
     * Filter, which admin_sessions to fetch.
     */
    where?: admin_sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of admin_sessions to fetch.
     */
    orderBy?: admin_sessionsOrderByWithRelationInput | admin_sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for admin_sessions.
     */
    cursor?: admin_sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` admin_sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` admin_sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of admin_sessions.
     */
    distinct?: Admin_sessionsScalarFieldEnum | Admin_sessionsScalarFieldEnum[]
  }

  /**
   * admin_sessions findFirstOrThrow
   */
  export type admin_sessionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_sessions
     */
    select?: admin_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_sessions
     */
    omit?: admin_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_sessionsInclude<ExtArgs> | null
    /**
     * Filter, which admin_sessions to fetch.
     */
    where?: admin_sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of admin_sessions to fetch.
     */
    orderBy?: admin_sessionsOrderByWithRelationInput | admin_sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for admin_sessions.
     */
    cursor?: admin_sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` admin_sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` admin_sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of admin_sessions.
     */
    distinct?: Admin_sessionsScalarFieldEnum | Admin_sessionsScalarFieldEnum[]
  }

  /**
   * admin_sessions findMany
   */
  export type admin_sessionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_sessions
     */
    select?: admin_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_sessions
     */
    omit?: admin_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_sessionsInclude<ExtArgs> | null
    /**
     * Filter, which admin_sessions to fetch.
     */
    where?: admin_sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of admin_sessions to fetch.
     */
    orderBy?: admin_sessionsOrderByWithRelationInput | admin_sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing admin_sessions.
     */
    cursor?: admin_sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` admin_sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` admin_sessions.
     */
    skip?: number
    distinct?: Admin_sessionsScalarFieldEnum | Admin_sessionsScalarFieldEnum[]
  }

  /**
   * admin_sessions create
   */
  export type admin_sessionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_sessions
     */
    select?: admin_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_sessions
     */
    omit?: admin_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_sessionsInclude<ExtArgs> | null
    /**
     * The data needed to create a admin_sessions.
     */
    data: XOR<admin_sessionsCreateInput, admin_sessionsUncheckedCreateInput>
  }

  /**
   * admin_sessions createMany
   */
  export type admin_sessionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many admin_sessions.
     */
    data: admin_sessionsCreateManyInput | admin_sessionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * admin_sessions createManyAndReturn
   */
  export type admin_sessionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_sessions
     */
    select?: admin_sessionsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the admin_sessions
     */
    omit?: admin_sessionsOmit<ExtArgs> | null
    /**
     * The data used to create many admin_sessions.
     */
    data: admin_sessionsCreateManyInput | admin_sessionsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_sessionsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * admin_sessions update
   */
  export type admin_sessionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_sessions
     */
    select?: admin_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_sessions
     */
    omit?: admin_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_sessionsInclude<ExtArgs> | null
    /**
     * The data needed to update a admin_sessions.
     */
    data: XOR<admin_sessionsUpdateInput, admin_sessionsUncheckedUpdateInput>
    /**
     * Choose, which admin_sessions to update.
     */
    where: admin_sessionsWhereUniqueInput
  }

  /**
   * admin_sessions updateMany
   */
  export type admin_sessionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update admin_sessions.
     */
    data: XOR<admin_sessionsUpdateManyMutationInput, admin_sessionsUncheckedUpdateManyInput>
    /**
     * Filter which admin_sessions to update
     */
    where?: admin_sessionsWhereInput
    /**
     * Limit how many admin_sessions to update.
     */
    limit?: number
  }

  /**
   * admin_sessions updateManyAndReturn
   */
  export type admin_sessionsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_sessions
     */
    select?: admin_sessionsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the admin_sessions
     */
    omit?: admin_sessionsOmit<ExtArgs> | null
    /**
     * The data used to update admin_sessions.
     */
    data: XOR<admin_sessionsUpdateManyMutationInput, admin_sessionsUncheckedUpdateManyInput>
    /**
     * Filter which admin_sessions to update
     */
    where?: admin_sessionsWhereInput
    /**
     * Limit how many admin_sessions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_sessionsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * admin_sessions upsert
   */
  export type admin_sessionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_sessions
     */
    select?: admin_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_sessions
     */
    omit?: admin_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_sessionsInclude<ExtArgs> | null
    /**
     * The filter to search for the admin_sessions to update in case it exists.
     */
    where: admin_sessionsWhereUniqueInput
    /**
     * In case the admin_sessions found by the `where` argument doesn't exist, create a new admin_sessions with this data.
     */
    create: XOR<admin_sessionsCreateInput, admin_sessionsUncheckedCreateInput>
    /**
     * In case the admin_sessions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<admin_sessionsUpdateInput, admin_sessionsUncheckedUpdateInput>
  }

  /**
   * admin_sessions delete
   */
  export type admin_sessionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_sessions
     */
    select?: admin_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_sessions
     */
    omit?: admin_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_sessionsInclude<ExtArgs> | null
    /**
     * Filter which admin_sessions to delete.
     */
    where: admin_sessionsWhereUniqueInput
  }

  /**
   * admin_sessions deleteMany
   */
  export type admin_sessionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which admin_sessions to delete
     */
    where?: admin_sessionsWhereInput
    /**
     * Limit how many admin_sessions to delete.
     */
    limit?: number
  }

  /**
   * admin_sessions without action
   */
  export type admin_sessionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_sessions
     */
    select?: admin_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_sessions
     */
    omit?: admin_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_sessionsInclude<ExtArgs> | null
  }


  /**
   * Model admin_users
   */

  export type AggregateAdmin_users = {
    _count: Admin_usersCountAggregateOutputType | null
    _avg: Admin_usersAvgAggregateOutputType | null
    _sum: Admin_usersSumAggregateOutputType | null
    _min: Admin_usersMinAggregateOutputType | null
    _max: Admin_usersMaxAggregateOutputType | null
  }

  export type Admin_usersAvgAggregateOutputType = {
    id: number | null
  }

  export type Admin_usersSumAggregateOutputType = {
    id: number | null
  }

  export type Admin_usersMinAggregateOutputType = {
    id: number | null
    username: string | null
    email: string | null
    password_hash: string | null
    full_name: string | null
    role: string | null
    is_active: boolean | null
    last_login: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Admin_usersMaxAggregateOutputType = {
    id: number | null
    username: string | null
    email: string | null
    password_hash: string | null
    full_name: string | null
    role: string | null
    is_active: boolean | null
    last_login: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Admin_usersCountAggregateOutputType = {
    id: number
    username: number
    email: number
    password_hash: number
    full_name: number
    role: number
    is_active: number
    last_login: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Admin_usersAvgAggregateInputType = {
    id?: true
  }

  export type Admin_usersSumAggregateInputType = {
    id?: true
  }

  export type Admin_usersMinAggregateInputType = {
    id?: true
    username?: true
    email?: true
    password_hash?: true
    full_name?: true
    role?: true
    is_active?: true
    last_login?: true
    created_at?: true
    updated_at?: true
  }

  export type Admin_usersMaxAggregateInputType = {
    id?: true
    username?: true
    email?: true
    password_hash?: true
    full_name?: true
    role?: true
    is_active?: true
    last_login?: true
    created_at?: true
    updated_at?: true
  }

  export type Admin_usersCountAggregateInputType = {
    id?: true
    username?: true
    email?: true
    password_hash?: true
    full_name?: true
    role?: true
    is_active?: true
    last_login?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Admin_usersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which admin_users to aggregate.
     */
    where?: admin_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of admin_users to fetch.
     */
    orderBy?: admin_usersOrderByWithRelationInput | admin_usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: admin_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` admin_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` admin_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned admin_users
    **/
    _count?: true | Admin_usersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Admin_usersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Admin_usersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Admin_usersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Admin_usersMaxAggregateInputType
  }

  export type GetAdmin_usersAggregateType<T extends Admin_usersAggregateArgs> = {
        [P in keyof T & keyof AggregateAdmin_users]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAdmin_users[P]>
      : GetScalarType<T[P], AggregateAdmin_users[P]>
  }




  export type admin_usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: admin_usersWhereInput
    orderBy?: admin_usersOrderByWithAggregationInput | admin_usersOrderByWithAggregationInput[]
    by: Admin_usersScalarFieldEnum[] | Admin_usersScalarFieldEnum
    having?: admin_usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Admin_usersCountAggregateInputType | true
    _avg?: Admin_usersAvgAggregateInputType
    _sum?: Admin_usersSumAggregateInputType
    _min?: Admin_usersMinAggregateInputType
    _max?: Admin_usersMaxAggregateInputType
  }

  export type Admin_usersGroupByOutputType = {
    id: number
    username: string
    email: string
    password_hash: string
    full_name: string
    role: string
    is_active: boolean
    last_login: Date | null
    created_at: Date
    updated_at: Date
    _count: Admin_usersCountAggregateOutputType | null
    _avg: Admin_usersAvgAggregateOutputType | null
    _sum: Admin_usersSumAggregateOutputType | null
    _min: Admin_usersMinAggregateOutputType | null
    _max: Admin_usersMaxAggregateOutputType | null
  }

  type GetAdmin_usersGroupByPayload<T extends admin_usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Admin_usersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Admin_usersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Admin_usersGroupByOutputType[P]>
            : GetScalarType<T[P], Admin_usersGroupByOutputType[P]>
        }
      >
    >


  export type admin_usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    email?: boolean
    password_hash?: boolean
    full_name?: boolean
    role?: boolean
    is_active?: boolean
    last_login?: boolean
    created_at?: boolean
    updated_at?: boolean
    admin_sessions?: boolean | admin_users$admin_sessionsArgs<ExtArgs>
    dashboard_notifications?: boolean | admin_users$dashboard_notificationsArgs<ExtArgs>
    dashboard_widgets?: boolean | admin_users$dashboard_widgetsArgs<ExtArgs>
    password_reset_tokens?: boolean | admin_users$password_reset_tokensArgs<ExtArgs>
    _count?: boolean | Admin_usersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["admin_users"]>

  export type admin_usersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    email?: boolean
    password_hash?: boolean
    full_name?: boolean
    role?: boolean
    is_active?: boolean
    last_login?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["admin_users"]>

  export type admin_usersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    username?: boolean
    email?: boolean
    password_hash?: boolean
    full_name?: boolean
    role?: boolean
    is_active?: boolean
    last_login?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["admin_users"]>

  export type admin_usersSelectScalar = {
    id?: boolean
    username?: boolean
    email?: boolean
    password_hash?: boolean
    full_name?: boolean
    role?: boolean
    is_active?: boolean
    last_login?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type admin_usersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "username" | "email" | "password_hash" | "full_name" | "role" | "is_active" | "last_login" | "created_at" | "updated_at", ExtArgs["result"]["admin_users"]>
  export type admin_usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin_sessions?: boolean | admin_users$admin_sessionsArgs<ExtArgs>
    dashboard_notifications?: boolean | admin_users$dashboard_notificationsArgs<ExtArgs>
    dashboard_widgets?: boolean | admin_users$dashboard_widgetsArgs<ExtArgs>
    password_reset_tokens?: boolean | admin_users$password_reset_tokensArgs<ExtArgs>
    _count?: boolean | Admin_usersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type admin_usersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type admin_usersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $admin_usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "admin_users"
    objects: {
      admin_sessions: Prisma.$admin_sessionsPayload<ExtArgs>[]
      dashboard_notifications: Prisma.$dashboard_notificationsPayload<ExtArgs>[]
      dashboard_widgets: Prisma.$dashboard_widgetsPayload<ExtArgs>[]
      password_reset_tokens: Prisma.$password_reset_tokensPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      username: string
      email: string
      password_hash: string
      full_name: string
      role: string
      is_active: boolean
      last_login: Date | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["admin_users"]>
    composites: {}
  }

  type admin_usersGetPayload<S extends boolean | null | undefined | admin_usersDefaultArgs> = $Result.GetResult<Prisma.$admin_usersPayload, S>

  type admin_usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<admin_usersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Admin_usersCountAggregateInputType | true
    }

  export interface admin_usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['admin_users'], meta: { name: 'admin_users' } }
    /**
     * Find zero or one Admin_users that matches the filter.
     * @param {admin_usersFindUniqueArgs} args - Arguments to find a Admin_users
     * @example
     * // Get one Admin_users
     * const admin_users = await prisma.admin_users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends admin_usersFindUniqueArgs>(args: SelectSubset<T, admin_usersFindUniqueArgs<ExtArgs>>): Prisma__admin_usersClient<$Result.GetResult<Prisma.$admin_usersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Admin_users that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {admin_usersFindUniqueOrThrowArgs} args - Arguments to find a Admin_users
     * @example
     * // Get one Admin_users
     * const admin_users = await prisma.admin_users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends admin_usersFindUniqueOrThrowArgs>(args: SelectSubset<T, admin_usersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__admin_usersClient<$Result.GetResult<Prisma.$admin_usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Admin_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {admin_usersFindFirstArgs} args - Arguments to find a Admin_users
     * @example
     * // Get one Admin_users
     * const admin_users = await prisma.admin_users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends admin_usersFindFirstArgs>(args?: SelectSubset<T, admin_usersFindFirstArgs<ExtArgs>>): Prisma__admin_usersClient<$Result.GetResult<Prisma.$admin_usersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Admin_users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {admin_usersFindFirstOrThrowArgs} args - Arguments to find a Admin_users
     * @example
     * // Get one Admin_users
     * const admin_users = await prisma.admin_users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends admin_usersFindFirstOrThrowArgs>(args?: SelectSubset<T, admin_usersFindFirstOrThrowArgs<ExtArgs>>): Prisma__admin_usersClient<$Result.GetResult<Prisma.$admin_usersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Admin_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {admin_usersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Admin_users
     * const admin_users = await prisma.admin_users.findMany()
     * 
     * // Get first 10 Admin_users
     * const admin_users = await prisma.admin_users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const admin_usersWithIdOnly = await prisma.admin_users.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends admin_usersFindManyArgs>(args?: SelectSubset<T, admin_usersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$admin_usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Admin_users.
     * @param {admin_usersCreateArgs} args - Arguments to create a Admin_users.
     * @example
     * // Create one Admin_users
     * const Admin_users = await prisma.admin_users.create({
     *   data: {
     *     // ... data to create a Admin_users
     *   }
     * })
     * 
     */
    create<T extends admin_usersCreateArgs>(args: SelectSubset<T, admin_usersCreateArgs<ExtArgs>>): Prisma__admin_usersClient<$Result.GetResult<Prisma.$admin_usersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Admin_users.
     * @param {admin_usersCreateManyArgs} args - Arguments to create many Admin_users.
     * @example
     * // Create many Admin_users
     * const admin_users = await prisma.admin_users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends admin_usersCreateManyArgs>(args?: SelectSubset<T, admin_usersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Admin_users and returns the data saved in the database.
     * @param {admin_usersCreateManyAndReturnArgs} args - Arguments to create many Admin_users.
     * @example
     * // Create many Admin_users
     * const admin_users = await prisma.admin_users.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Admin_users and only return the `id`
     * const admin_usersWithIdOnly = await prisma.admin_users.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends admin_usersCreateManyAndReturnArgs>(args?: SelectSubset<T, admin_usersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$admin_usersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Admin_users.
     * @param {admin_usersDeleteArgs} args - Arguments to delete one Admin_users.
     * @example
     * // Delete one Admin_users
     * const Admin_users = await prisma.admin_users.delete({
     *   where: {
     *     // ... filter to delete one Admin_users
     *   }
     * })
     * 
     */
    delete<T extends admin_usersDeleteArgs>(args: SelectSubset<T, admin_usersDeleteArgs<ExtArgs>>): Prisma__admin_usersClient<$Result.GetResult<Prisma.$admin_usersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Admin_users.
     * @param {admin_usersUpdateArgs} args - Arguments to update one Admin_users.
     * @example
     * // Update one Admin_users
     * const admin_users = await prisma.admin_users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends admin_usersUpdateArgs>(args: SelectSubset<T, admin_usersUpdateArgs<ExtArgs>>): Prisma__admin_usersClient<$Result.GetResult<Prisma.$admin_usersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Admin_users.
     * @param {admin_usersDeleteManyArgs} args - Arguments to filter Admin_users to delete.
     * @example
     * // Delete a few Admin_users
     * const { count } = await prisma.admin_users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends admin_usersDeleteManyArgs>(args?: SelectSubset<T, admin_usersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admin_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {admin_usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Admin_users
     * const admin_users = await prisma.admin_users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends admin_usersUpdateManyArgs>(args: SelectSubset<T, admin_usersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Admin_users and returns the data updated in the database.
     * @param {admin_usersUpdateManyAndReturnArgs} args - Arguments to update many Admin_users.
     * @example
     * // Update many Admin_users
     * const admin_users = await prisma.admin_users.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Admin_users and only return the `id`
     * const admin_usersWithIdOnly = await prisma.admin_users.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends admin_usersUpdateManyAndReturnArgs>(args: SelectSubset<T, admin_usersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$admin_usersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Admin_users.
     * @param {admin_usersUpsertArgs} args - Arguments to update or create a Admin_users.
     * @example
     * // Update or create a Admin_users
     * const admin_users = await prisma.admin_users.upsert({
     *   create: {
     *     // ... data to create a Admin_users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Admin_users we want to update
     *   }
     * })
     */
    upsert<T extends admin_usersUpsertArgs>(args: SelectSubset<T, admin_usersUpsertArgs<ExtArgs>>): Prisma__admin_usersClient<$Result.GetResult<Prisma.$admin_usersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Admin_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {admin_usersCountArgs} args - Arguments to filter Admin_users to count.
     * @example
     * // Count the number of Admin_users
     * const count = await prisma.admin_users.count({
     *   where: {
     *     // ... the filter for the Admin_users we want to count
     *   }
     * })
    **/
    count<T extends admin_usersCountArgs>(
      args?: Subset<T, admin_usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Admin_usersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Admin_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Admin_usersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Admin_usersAggregateArgs>(args: Subset<T, Admin_usersAggregateArgs>): Prisma.PrismaPromise<GetAdmin_usersAggregateType<T>>

    /**
     * Group by Admin_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {admin_usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends admin_usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: admin_usersGroupByArgs['orderBy'] }
        : { orderBy?: admin_usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, admin_usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAdmin_usersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the admin_users model
   */
  readonly fields: admin_usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for admin_users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__admin_usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    admin_sessions<T extends admin_users$admin_sessionsArgs<ExtArgs> = {}>(args?: Subset<T, admin_users$admin_sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$admin_sessionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    dashboard_notifications<T extends admin_users$dashboard_notificationsArgs<ExtArgs> = {}>(args?: Subset<T, admin_users$dashboard_notificationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$dashboard_notificationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    dashboard_widgets<T extends admin_users$dashboard_widgetsArgs<ExtArgs> = {}>(args?: Subset<T, admin_users$dashboard_widgetsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$dashboard_widgetsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    password_reset_tokens<T extends admin_users$password_reset_tokensArgs<ExtArgs> = {}>(args?: Subset<T, admin_users$password_reset_tokensArgs<ExtArgs>>): Prisma__password_reset_tokensClient<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the admin_users model
   */
  interface admin_usersFieldRefs {
    readonly id: FieldRef<"admin_users", 'Int'>
    readonly username: FieldRef<"admin_users", 'String'>
    readonly email: FieldRef<"admin_users", 'String'>
    readonly password_hash: FieldRef<"admin_users", 'String'>
    readonly full_name: FieldRef<"admin_users", 'String'>
    readonly role: FieldRef<"admin_users", 'String'>
    readonly is_active: FieldRef<"admin_users", 'Boolean'>
    readonly last_login: FieldRef<"admin_users", 'DateTime'>
    readonly created_at: FieldRef<"admin_users", 'DateTime'>
    readonly updated_at: FieldRef<"admin_users", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * admin_users findUnique
   */
  export type admin_usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_users
     */
    select?: admin_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_users
     */
    omit?: admin_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_usersInclude<ExtArgs> | null
    /**
     * Filter, which admin_users to fetch.
     */
    where: admin_usersWhereUniqueInput
  }

  /**
   * admin_users findUniqueOrThrow
   */
  export type admin_usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_users
     */
    select?: admin_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_users
     */
    omit?: admin_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_usersInclude<ExtArgs> | null
    /**
     * Filter, which admin_users to fetch.
     */
    where: admin_usersWhereUniqueInput
  }

  /**
   * admin_users findFirst
   */
  export type admin_usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_users
     */
    select?: admin_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_users
     */
    omit?: admin_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_usersInclude<ExtArgs> | null
    /**
     * Filter, which admin_users to fetch.
     */
    where?: admin_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of admin_users to fetch.
     */
    orderBy?: admin_usersOrderByWithRelationInput | admin_usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for admin_users.
     */
    cursor?: admin_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` admin_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` admin_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of admin_users.
     */
    distinct?: Admin_usersScalarFieldEnum | Admin_usersScalarFieldEnum[]
  }

  /**
   * admin_users findFirstOrThrow
   */
  export type admin_usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_users
     */
    select?: admin_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_users
     */
    omit?: admin_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_usersInclude<ExtArgs> | null
    /**
     * Filter, which admin_users to fetch.
     */
    where?: admin_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of admin_users to fetch.
     */
    orderBy?: admin_usersOrderByWithRelationInput | admin_usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for admin_users.
     */
    cursor?: admin_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` admin_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` admin_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of admin_users.
     */
    distinct?: Admin_usersScalarFieldEnum | Admin_usersScalarFieldEnum[]
  }

  /**
   * admin_users findMany
   */
  export type admin_usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_users
     */
    select?: admin_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_users
     */
    omit?: admin_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_usersInclude<ExtArgs> | null
    /**
     * Filter, which admin_users to fetch.
     */
    where?: admin_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of admin_users to fetch.
     */
    orderBy?: admin_usersOrderByWithRelationInput | admin_usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing admin_users.
     */
    cursor?: admin_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` admin_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` admin_users.
     */
    skip?: number
    distinct?: Admin_usersScalarFieldEnum | Admin_usersScalarFieldEnum[]
  }

  /**
   * admin_users create
   */
  export type admin_usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_users
     */
    select?: admin_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_users
     */
    omit?: admin_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_usersInclude<ExtArgs> | null
    /**
     * The data needed to create a admin_users.
     */
    data: XOR<admin_usersCreateInput, admin_usersUncheckedCreateInput>
  }

  /**
   * admin_users createMany
   */
  export type admin_usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many admin_users.
     */
    data: admin_usersCreateManyInput | admin_usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * admin_users createManyAndReturn
   */
  export type admin_usersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_users
     */
    select?: admin_usersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the admin_users
     */
    omit?: admin_usersOmit<ExtArgs> | null
    /**
     * The data used to create many admin_users.
     */
    data: admin_usersCreateManyInput | admin_usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * admin_users update
   */
  export type admin_usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_users
     */
    select?: admin_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_users
     */
    omit?: admin_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_usersInclude<ExtArgs> | null
    /**
     * The data needed to update a admin_users.
     */
    data: XOR<admin_usersUpdateInput, admin_usersUncheckedUpdateInput>
    /**
     * Choose, which admin_users to update.
     */
    where: admin_usersWhereUniqueInput
  }

  /**
   * admin_users updateMany
   */
  export type admin_usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update admin_users.
     */
    data: XOR<admin_usersUpdateManyMutationInput, admin_usersUncheckedUpdateManyInput>
    /**
     * Filter which admin_users to update
     */
    where?: admin_usersWhereInput
    /**
     * Limit how many admin_users to update.
     */
    limit?: number
  }

  /**
   * admin_users updateManyAndReturn
   */
  export type admin_usersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_users
     */
    select?: admin_usersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the admin_users
     */
    omit?: admin_usersOmit<ExtArgs> | null
    /**
     * The data used to update admin_users.
     */
    data: XOR<admin_usersUpdateManyMutationInput, admin_usersUncheckedUpdateManyInput>
    /**
     * Filter which admin_users to update
     */
    where?: admin_usersWhereInput
    /**
     * Limit how many admin_users to update.
     */
    limit?: number
  }

  /**
   * admin_users upsert
   */
  export type admin_usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_users
     */
    select?: admin_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_users
     */
    omit?: admin_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_usersInclude<ExtArgs> | null
    /**
     * The filter to search for the admin_users to update in case it exists.
     */
    where: admin_usersWhereUniqueInput
    /**
     * In case the admin_users found by the `where` argument doesn't exist, create a new admin_users with this data.
     */
    create: XOR<admin_usersCreateInput, admin_usersUncheckedCreateInput>
    /**
     * In case the admin_users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<admin_usersUpdateInput, admin_usersUncheckedUpdateInput>
  }

  /**
   * admin_users delete
   */
  export type admin_usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_users
     */
    select?: admin_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_users
     */
    omit?: admin_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_usersInclude<ExtArgs> | null
    /**
     * Filter which admin_users to delete.
     */
    where: admin_usersWhereUniqueInput
  }

  /**
   * admin_users deleteMany
   */
  export type admin_usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which admin_users to delete
     */
    where?: admin_usersWhereInput
    /**
     * Limit how many admin_users to delete.
     */
    limit?: number
  }

  /**
   * admin_users.admin_sessions
   */
  export type admin_users$admin_sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_sessions
     */
    select?: admin_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_sessions
     */
    omit?: admin_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_sessionsInclude<ExtArgs> | null
    where?: admin_sessionsWhereInput
    orderBy?: admin_sessionsOrderByWithRelationInput | admin_sessionsOrderByWithRelationInput[]
    cursor?: admin_sessionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Admin_sessionsScalarFieldEnum | Admin_sessionsScalarFieldEnum[]
  }

  /**
   * admin_users.dashboard_notifications
   */
  export type admin_users$dashboard_notificationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dashboard_notifications
     */
    select?: dashboard_notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dashboard_notifications
     */
    omit?: dashboard_notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dashboard_notificationsInclude<ExtArgs> | null
    where?: dashboard_notificationsWhereInput
    orderBy?: dashboard_notificationsOrderByWithRelationInput | dashboard_notificationsOrderByWithRelationInput[]
    cursor?: dashboard_notificationsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Dashboard_notificationsScalarFieldEnum | Dashboard_notificationsScalarFieldEnum[]
  }

  /**
   * admin_users.dashboard_widgets
   */
  export type admin_users$dashboard_widgetsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dashboard_widgets
     */
    select?: dashboard_widgetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dashboard_widgets
     */
    omit?: dashboard_widgetsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dashboard_widgetsInclude<ExtArgs> | null
    where?: dashboard_widgetsWhereInput
    orderBy?: dashboard_widgetsOrderByWithRelationInput | dashboard_widgetsOrderByWithRelationInput[]
    cursor?: dashboard_widgetsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Dashboard_widgetsScalarFieldEnum | Dashboard_widgetsScalarFieldEnum[]
  }

  /**
   * admin_users.password_reset_tokens
   */
  export type admin_users$password_reset_tokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    where?: password_reset_tokensWhereInput
  }

  /**
   * admin_users without action
   */
  export type admin_usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_users
     */
    select?: admin_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_users
     */
    omit?: admin_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_usersInclude<ExtArgs> | null
  }


  /**
   * Model dashboard_notifications
   */

  export type AggregateDashboard_notifications = {
    _count: Dashboard_notificationsCountAggregateOutputType | null
    _avg: Dashboard_notificationsAvgAggregateOutputType | null
    _sum: Dashboard_notificationsSumAggregateOutputType | null
    _min: Dashboard_notificationsMinAggregateOutputType | null
    _max: Dashboard_notificationsMaxAggregateOutputType | null
  }

  export type Dashboard_notificationsAvgAggregateOutputType = {
    id: number | null
    recipient_id: number | null
  }

  export type Dashboard_notificationsSumAggregateOutputType = {
    id: number | null
    recipient_id: number | null
  }

  export type Dashboard_notificationsMinAggregateOutputType = {
    id: number | null
    title: string | null
    message: string | null
    type: string | null
    is_read: boolean | null
    recipient_id: number | null
    created_at: Date | null
    expires_at: Date | null
    action_url: string | null
  }

  export type Dashboard_notificationsMaxAggregateOutputType = {
    id: number | null
    title: string | null
    message: string | null
    type: string | null
    is_read: boolean | null
    recipient_id: number | null
    created_at: Date | null
    expires_at: Date | null
    action_url: string | null
  }

  export type Dashboard_notificationsCountAggregateOutputType = {
    id: number
    title: number
    message: number
    type: number
    is_read: number
    recipient_id: number
    created_at: number
    expires_at: number
    action_url: number
    _all: number
  }


  export type Dashboard_notificationsAvgAggregateInputType = {
    id?: true
    recipient_id?: true
  }

  export type Dashboard_notificationsSumAggregateInputType = {
    id?: true
    recipient_id?: true
  }

  export type Dashboard_notificationsMinAggregateInputType = {
    id?: true
    title?: true
    message?: true
    type?: true
    is_read?: true
    recipient_id?: true
    created_at?: true
    expires_at?: true
    action_url?: true
  }

  export type Dashboard_notificationsMaxAggregateInputType = {
    id?: true
    title?: true
    message?: true
    type?: true
    is_read?: true
    recipient_id?: true
    created_at?: true
    expires_at?: true
    action_url?: true
  }

  export type Dashboard_notificationsCountAggregateInputType = {
    id?: true
    title?: true
    message?: true
    type?: true
    is_read?: true
    recipient_id?: true
    created_at?: true
    expires_at?: true
    action_url?: true
    _all?: true
  }

  export type Dashboard_notificationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which dashboard_notifications to aggregate.
     */
    where?: dashboard_notificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of dashboard_notifications to fetch.
     */
    orderBy?: dashboard_notificationsOrderByWithRelationInput | dashboard_notificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: dashboard_notificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` dashboard_notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` dashboard_notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned dashboard_notifications
    **/
    _count?: true | Dashboard_notificationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Dashboard_notificationsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Dashboard_notificationsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Dashboard_notificationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Dashboard_notificationsMaxAggregateInputType
  }

  export type GetDashboard_notificationsAggregateType<T extends Dashboard_notificationsAggregateArgs> = {
        [P in keyof T & keyof AggregateDashboard_notifications]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDashboard_notifications[P]>
      : GetScalarType<T[P], AggregateDashboard_notifications[P]>
  }




  export type dashboard_notificationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: dashboard_notificationsWhereInput
    orderBy?: dashboard_notificationsOrderByWithAggregationInput | dashboard_notificationsOrderByWithAggregationInput[]
    by: Dashboard_notificationsScalarFieldEnum[] | Dashboard_notificationsScalarFieldEnum
    having?: dashboard_notificationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Dashboard_notificationsCountAggregateInputType | true
    _avg?: Dashboard_notificationsAvgAggregateInputType
    _sum?: Dashboard_notificationsSumAggregateInputType
    _min?: Dashboard_notificationsMinAggregateInputType
    _max?: Dashboard_notificationsMaxAggregateInputType
  }

  export type Dashboard_notificationsGroupByOutputType = {
    id: number
    title: string
    message: string
    type: string
    is_read: boolean
    recipient_id: number | null
    created_at: Date
    expires_at: Date | null
    action_url: string | null
    _count: Dashboard_notificationsCountAggregateOutputType | null
    _avg: Dashboard_notificationsAvgAggregateOutputType | null
    _sum: Dashboard_notificationsSumAggregateOutputType | null
    _min: Dashboard_notificationsMinAggregateOutputType | null
    _max: Dashboard_notificationsMaxAggregateOutputType | null
  }

  type GetDashboard_notificationsGroupByPayload<T extends dashboard_notificationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Dashboard_notificationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Dashboard_notificationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Dashboard_notificationsGroupByOutputType[P]>
            : GetScalarType<T[P], Dashboard_notificationsGroupByOutputType[P]>
        }
      >
    >


  export type dashboard_notificationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    message?: boolean
    type?: boolean
    is_read?: boolean
    recipient_id?: boolean
    created_at?: boolean
    expires_at?: boolean
    action_url?: boolean
    admin_users?: boolean | dashboard_notifications$admin_usersArgs<ExtArgs>
  }, ExtArgs["result"]["dashboard_notifications"]>

  export type dashboard_notificationsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    message?: boolean
    type?: boolean
    is_read?: boolean
    recipient_id?: boolean
    created_at?: boolean
    expires_at?: boolean
    action_url?: boolean
    admin_users?: boolean | dashboard_notifications$admin_usersArgs<ExtArgs>
  }, ExtArgs["result"]["dashboard_notifications"]>

  export type dashboard_notificationsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    message?: boolean
    type?: boolean
    is_read?: boolean
    recipient_id?: boolean
    created_at?: boolean
    expires_at?: boolean
    action_url?: boolean
    admin_users?: boolean | dashboard_notifications$admin_usersArgs<ExtArgs>
  }, ExtArgs["result"]["dashboard_notifications"]>

  export type dashboard_notificationsSelectScalar = {
    id?: boolean
    title?: boolean
    message?: boolean
    type?: boolean
    is_read?: boolean
    recipient_id?: boolean
    created_at?: boolean
    expires_at?: boolean
    action_url?: boolean
  }

  export type dashboard_notificationsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "message" | "type" | "is_read" | "recipient_id" | "created_at" | "expires_at" | "action_url", ExtArgs["result"]["dashboard_notifications"]>
  export type dashboard_notificationsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin_users?: boolean | dashboard_notifications$admin_usersArgs<ExtArgs>
  }
  export type dashboard_notificationsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin_users?: boolean | dashboard_notifications$admin_usersArgs<ExtArgs>
  }
  export type dashboard_notificationsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin_users?: boolean | dashboard_notifications$admin_usersArgs<ExtArgs>
  }

  export type $dashboard_notificationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "dashboard_notifications"
    objects: {
      admin_users: Prisma.$admin_usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      title: string
      message: string
      type: string
      is_read: boolean
      recipient_id: number | null
      created_at: Date
      expires_at: Date | null
      action_url: string | null
    }, ExtArgs["result"]["dashboard_notifications"]>
    composites: {}
  }

  type dashboard_notificationsGetPayload<S extends boolean | null | undefined | dashboard_notificationsDefaultArgs> = $Result.GetResult<Prisma.$dashboard_notificationsPayload, S>

  type dashboard_notificationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<dashboard_notificationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Dashboard_notificationsCountAggregateInputType | true
    }

  export interface dashboard_notificationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['dashboard_notifications'], meta: { name: 'dashboard_notifications' } }
    /**
     * Find zero or one Dashboard_notifications that matches the filter.
     * @param {dashboard_notificationsFindUniqueArgs} args - Arguments to find a Dashboard_notifications
     * @example
     * // Get one Dashboard_notifications
     * const dashboard_notifications = await prisma.dashboard_notifications.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends dashboard_notificationsFindUniqueArgs>(args: SelectSubset<T, dashboard_notificationsFindUniqueArgs<ExtArgs>>): Prisma__dashboard_notificationsClient<$Result.GetResult<Prisma.$dashboard_notificationsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Dashboard_notifications that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {dashboard_notificationsFindUniqueOrThrowArgs} args - Arguments to find a Dashboard_notifications
     * @example
     * // Get one Dashboard_notifications
     * const dashboard_notifications = await prisma.dashboard_notifications.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends dashboard_notificationsFindUniqueOrThrowArgs>(args: SelectSubset<T, dashboard_notificationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__dashboard_notificationsClient<$Result.GetResult<Prisma.$dashboard_notificationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Dashboard_notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dashboard_notificationsFindFirstArgs} args - Arguments to find a Dashboard_notifications
     * @example
     * // Get one Dashboard_notifications
     * const dashboard_notifications = await prisma.dashboard_notifications.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends dashboard_notificationsFindFirstArgs>(args?: SelectSubset<T, dashboard_notificationsFindFirstArgs<ExtArgs>>): Prisma__dashboard_notificationsClient<$Result.GetResult<Prisma.$dashboard_notificationsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Dashboard_notifications that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dashboard_notificationsFindFirstOrThrowArgs} args - Arguments to find a Dashboard_notifications
     * @example
     * // Get one Dashboard_notifications
     * const dashboard_notifications = await prisma.dashboard_notifications.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends dashboard_notificationsFindFirstOrThrowArgs>(args?: SelectSubset<T, dashboard_notificationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__dashboard_notificationsClient<$Result.GetResult<Prisma.$dashboard_notificationsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Dashboard_notifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dashboard_notificationsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Dashboard_notifications
     * const dashboard_notifications = await prisma.dashboard_notifications.findMany()
     * 
     * // Get first 10 Dashboard_notifications
     * const dashboard_notifications = await prisma.dashboard_notifications.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const dashboard_notificationsWithIdOnly = await prisma.dashboard_notifications.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends dashboard_notificationsFindManyArgs>(args?: SelectSubset<T, dashboard_notificationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$dashboard_notificationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Dashboard_notifications.
     * @param {dashboard_notificationsCreateArgs} args - Arguments to create a Dashboard_notifications.
     * @example
     * // Create one Dashboard_notifications
     * const Dashboard_notifications = await prisma.dashboard_notifications.create({
     *   data: {
     *     // ... data to create a Dashboard_notifications
     *   }
     * })
     * 
     */
    create<T extends dashboard_notificationsCreateArgs>(args: SelectSubset<T, dashboard_notificationsCreateArgs<ExtArgs>>): Prisma__dashboard_notificationsClient<$Result.GetResult<Prisma.$dashboard_notificationsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Dashboard_notifications.
     * @param {dashboard_notificationsCreateManyArgs} args - Arguments to create many Dashboard_notifications.
     * @example
     * // Create many Dashboard_notifications
     * const dashboard_notifications = await prisma.dashboard_notifications.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends dashboard_notificationsCreateManyArgs>(args?: SelectSubset<T, dashboard_notificationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Dashboard_notifications and returns the data saved in the database.
     * @param {dashboard_notificationsCreateManyAndReturnArgs} args - Arguments to create many Dashboard_notifications.
     * @example
     * // Create many Dashboard_notifications
     * const dashboard_notifications = await prisma.dashboard_notifications.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Dashboard_notifications and only return the `id`
     * const dashboard_notificationsWithIdOnly = await prisma.dashboard_notifications.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends dashboard_notificationsCreateManyAndReturnArgs>(args?: SelectSubset<T, dashboard_notificationsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$dashboard_notificationsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Dashboard_notifications.
     * @param {dashboard_notificationsDeleteArgs} args - Arguments to delete one Dashboard_notifications.
     * @example
     * // Delete one Dashboard_notifications
     * const Dashboard_notifications = await prisma.dashboard_notifications.delete({
     *   where: {
     *     // ... filter to delete one Dashboard_notifications
     *   }
     * })
     * 
     */
    delete<T extends dashboard_notificationsDeleteArgs>(args: SelectSubset<T, dashboard_notificationsDeleteArgs<ExtArgs>>): Prisma__dashboard_notificationsClient<$Result.GetResult<Prisma.$dashboard_notificationsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Dashboard_notifications.
     * @param {dashboard_notificationsUpdateArgs} args - Arguments to update one Dashboard_notifications.
     * @example
     * // Update one Dashboard_notifications
     * const dashboard_notifications = await prisma.dashboard_notifications.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends dashboard_notificationsUpdateArgs>(args: SelectSubset<T, dashboard_notificationsUpdateArgs<ExtArgs>>): Prisma__dashboard_notificationsClient<$Result.GetResult<Prisma.$dashboard_notificationsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Dashboard_notifications.
     * @param {dashboard_notificationsDeleteManyArgs} args - Arguments to filter Dashboard_notifications to delete.
     * @example
     * // Delete a few Dashboard_notifications
     * const { count } = await prisma.dashboard_notifications.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends dashboard_notificationsDeleteManyArgs>(args?: SelectSubset<T, dashboard_notificationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Dashboard_notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dashboard_notificationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Dashboard_notifications
     * const dashboard_notifications = await prisma.dashboard_notifications.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends dashboard_notificationsUpdateManyArgs>(args: SelectSubset<T, dashboard_notificationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Dashboard_notifications and returns the data updated in the database.
     * @param {dashboard_notificationsUpdateManyAndReturnArgs} args - Arguments to update many Dashboard_notifications.
     * @example
     * // Update many Dashboard_notifications
     * const dashboard_notifications = await prisma.dashboard_notifications.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Dashboard_notifications and only return the `id`
     * const dashboard_notificationsWithIdOnly = await prisma.dashboard_notifications.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends dashboard_notificationsUpdateManyAndReturnArgs>(args: SelectSubset<T, dashboard_notificationsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$dashboard_notificationsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Dashboard_notifications.
     * @param {dashboard_notificationsUpsertArgs} args - Arguments to update or create a Dashboard_notifications.
     * @example
     * // Update or create a Dashboard_notifications
     * const dashboard_notifications = await prisma.dashboard_notifications.upsert({
     *   create: {
     *     // ... data to create a Dashboard_notifications
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Dashboard_notifications we want to update
     *   }
     * })
     */
    upsert<T extends dashboard_notificationsUpsertArgs>(args: SelectSubset<T, dashboard_notificationsUpsertArgs<ExtArgs>>): Prisma__dashboard_notificationsClient<$Result.GetResult<Prisma.$dashboard_notificationsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Dashboard_notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dashboard_notificationsCountArgs} args - Arguments to filter Dashboard_notifications to count.
     * @example
     * // Count the number of Dashboard_notifications
     * const count = await prisma.dashboard_notifications.count({
     *   where: {
     *     // ... the filter for the Dashboard_notifications we want to count
     *   }
     * })
    **/
    count<T extends dashboard_notificationsCountArgs>(
      args?: Subset<T, dashboard_notificationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Dashboard_notificationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Dashboard_notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Dashboard_notificationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Dashboard_notificationsAggregateArgs>(args: Subset<T, Dashboard_notificationsAggregateArgs>): Prisma.PrismaPromise<GetDashboard_notificationsAggregateType<T>>

    /**
     * Group by Dashboard_notifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dashboard_notificationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends dashboard_notificationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: dashboard_notificationsGroupByArgs['orderBy'] }
        : { orderBy?: dashboard_notificationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, dashboard_notificationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDashboard_notificationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the dashboard_notifications model
   */
  readonly fields: dashboard_notificationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for dashboard_notifications.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__dashboard_notificationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    admin_users<T extends dashboard_notifications$admin_usersArgs<ExtArgs> = {}>(args?: Subset<T, dashboard_notifications$admin_usersArgs<ExtArgs>>): Prisma__admin_usersClient<$Result.GetResult<Prisma.$admin_usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the dashboard_notifications model
   */
  interface dashboard_notificationsFieldRefs {
    readonly id: FieldRef<"dashboard_notifications", 'Int'>
    readonly title: FieldRef<"dashboard_notifications", 'String'>
    readonly message: FieldRef<"dashboard_notifications", 'String'>
    readonly type: FieldRef<"dashboard_notifications", 'String'>
    readonly is_read: FieldRef<"dashboard_notifications", 'Boolean'>
    readonly recipient_id: FieldRef<"dashboard_notifications", 'Int'>
    readonly created_at: FieldRef<"dashboard_notifications", 'DateTime'>
    readonly expires_at: FieldRef<"dashboard_notifications", 'DateTime'>
    readonly action_url: FieldRef<"dashboard_notifications", 'String'>
  }
    

  // Custom InputTypes
  /**
   * dashboard_notifications findUnique
   */
  export type dashboard_notificationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dashboard_notifications
     */
    select?: dashboard_notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dashboard_notifications
     */
    omit?: dashboard_notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dashboard_notificationsInclude<ExtArgs> | null
    /**
     * Filter, which dashboard_notifications to fetch.
     */
    where: dashboard_notificationsWhereUniqueInput
  }

  /**
   * dashboard_notifications findUniqueOrThrow
   */
  export type dashboard_notificationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dashboard_notifications
     */
    select?: dashboard_notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dashboard_notifications
     */
    omit?: dashboard_notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dashboard_notificationsInclude<ExtArgs> | null
    /**
     * Filter, which dashboard_notifications to fetch.
     */
    where: dashboard_notificationsWhereUniqueInput
  }

  /**
   * dashboard_notifications findFirst
   */
  export type dashboard_notificationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dashboard_notifications
     */
    select?: dashboard_notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dashboard_notifications
     */
    omit?: dashboard_notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dashboard_notificationsInclude<ExtArgs> | null
    /**
     * Filter, which dashboard_notifications to fetch.
     */
    where?: dashboard_notificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of dashboard_notifications to fetch.
     */
    orderBy?: dashboard_notificationsOrderByWithRelationInput | dashboard_notificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for dashboard_notifications.
     */
    cursor?: dashboard_notificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` dashboard_notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` dashboard_notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of dashboard_notifications.
     */
    distinct?: Dashboard_notificationsScalarFieldEnum | Dashboard_notificationsScalarFieldEnum[]
  }

  /**
   * dashboard_notifications findFirstOrThrow
   */
  export type dashboard_notificationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dashboard_notifications
     */
    select?: dashboard_notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dashboard_notifications
     */
    omit?: dashboard_notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dashboard_notificationsInclude<ExtArgs> | null
    /**
     * Filter, which dashboard_notifications to fetch.
     */
    where?: dashboard_notificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of dashboard_notifications to fetch.
     */
    orderBy?: dashboard_notificationsOrderByWithRelationInput | dashboard_notificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for dashboard_notifications.
     */
    cursor?: dashboard_notificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` dashboard_notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` dashboard_notifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of dashboard_notifications.
     */
    distinct?: Dashboard_notificationsScalarFieldEnum | Dashboard_notificationsScalarFieldEnum[]
  }

  /**
   * dashboard_notifications findMany
   */
  export type dashboard_notificationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dashboard_notifications
     */
    select?: dashboard_notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dashboard_notifications
     */
    omit?: dashboard_notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dashboard_notificationsInclude<ExtArgs> | null
    /**
     * Filter, which dashboard_notifications to fetch.
     */
    where?: dashboard_notificationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of dashboard_notifications to fetch.
     */
    orderBy?: dashboard_notificationsOrderByWithRelationInput | dashboard_notificationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing dashboard_notifications.
     */
    cursor?: dashboard_notificationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` dashboard_notifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` dashboard_notifications.
     */
    skip?: number
    distinct?: Dashboard_notificationsScalarFieldEnum | Dashboard_notificationsScalarFieldEnum[]
  }

  /**
   * dashboard_notifications create
   */
  export type dashboard_notificationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dashboard_notifications
     */
    select?: dashboard_notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dashboard_notifications
     */
    omit?: dashboard_notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dashboard_notificationsInclude<ExtArgs> | null
    /**
     * The data needed to create a dashboard_notifications.
     */
    data: XOR<dashboard_notificationsCreateInput, dashboard_notificationsUncheckedCreateInput>
  }

  /**
   * dashboard_notifications createMany
   */
  export type dashboard_notificationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many dashboard_notifications.
     */
    data: dashboard_notificationsCreateManyInput | dashboard_notificationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * dashboard_notifications createManyAndReturn
   */
  export type dashboard_notificationsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dashboard_notifications
     */
    select?: dashboard_notificationsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the dashboard_notifications
     */
    omit?: dashboard_notificationsOmit<ExtArgs> | null
    /**
     * The data used to create many dashboard_notifications.
     */
    data: dashboard_notificationsCreateManyInput | dashboard_notificationsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dashboard_notificationsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * dashboard_notifications update
   */
  export type dashboard_notificationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dashboard_notifications
     */
    select?: dashboard_notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dashboard_notifications
     */
    omit?: dashboard_notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dashboard_notificationsInclude<ExtArgs> | null
    /**
     * The data needed to update a dashboard_notifications.
     */
    data: XOR<dashboard_notificationsUpdateInput, dashboard_notificationsUncheckedUpdateInput>
    /**
     * Choose, which dashboard_notifications to update.
     */
    where: dashboard_notificationsWhereUniqueInput
  }

  /**
   * dashboard_notifications updateMany
   */
  export type dashboard_notificationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update dashboard_notifications.
     */
    data: XOR<dashboard_notificationsUpdateManyMutationInput, dashboard_notificationsUncheckedUpdateManyInput>
    /**
     * Filter which dashboard_notifications to update
     */
    where?: dashboard_notificationsWhereInput
    /**
     * Limit how many dashboard_notifications to update.
     */
    limit?: number
  }

  /**
   * dashboard_notifications updateManyAndReturn
   */
  export type dashboard_notificationsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dashboard_notifications
     */
    select?: dashboard_notificationsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the dashboard_notifications
     */
    omit?: dashboard_notificationsOmit<ExtArgs> | null
    /**
     * The data used to update dashboard_notifications.
     */
    data: XOR<dashboard_notificationsUpdateManyMutationInput, dashboard_notificationsUncheckedUpdateManyInput>
    /**
     * Filter which dashboard_notifications to update
     */
    where?: dashboard_notificationsWhereInput
    /**
     * Limit how many dashboard_notifications to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dashboard_notificationsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * dashboard_notifications upsert
   */
  export type dashboard_notificationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dashboard_notifications
     */
    select?: dashboard_notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dashboard_notifications
     */
    omit?: dashboard_notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dashboard_notificationsInclude<ExtArgs> | null
    /**
     * The filter to search for the dashboard_notifications to update in case it exists.
     */
    where: dashboard_notificationsWhereUniqueInput
    /**
     * In case the dashboard_notifications found by the `where` argument doesn't exist, create a new dashboard_notifications with this data.
     */
    create: XOR<dashboard_notificationsCreateInput, dashboard_notificationsUncheckedCreateInput>
    /**
     * In case the dashboard_notifications was found with the provided `where` argument, update it with this data.
     */
    update: XOR<dashboard_notificationsUpdateInput, dashboard_notificationsUncheckedUpdateInput>
  }

  /**
   * dashboard_notifications delete
   */
  export type dashboard_notificationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dashboard_notifications
     */
    select?: dashboard_notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dashboard_notifications
     */
    omit?: dashboard_notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dashboard_notificationsInclude<ExtArgs> | null
    /**
     * Filter which dashboard_notifications to delete.
     */
    where: dashboard_notificationsWhereUniqueInput
  }

  /**
   * dashboard_notifications deleteMany
   */
  export type dashboard_notificationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which dashboard_notifications to delete
     */
    where?: dashboard_notificationsWhereInput
    /**
     * Limit how many dashboard_notifications to delete.
     */
    limit?: number
  }

  /**
   * dashboard_notifications.admin_users
   */
  export type dashboard_notifications$admin_usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the admin_users
     */
    select?: admin_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the admin_users
     */
    omit?: admin_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: admin_usersInclude<ExtArgs> | null
    where?: admin_usersWhereInput
  }

  /**
   * dashboard_notifications without action
   */
  export type dashboard_notificationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dashboard_notifications
     */
    select?: dashboard_notificationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dashboard_notifications
     */
    omit?: dashboard_notificationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dashboard_notificationsInclude<ExtArgs> | null
  }


  /**
   * Model dashboard_widgets
   */

  export type AggregateDashboard_widgets = {
    _count: Dashboard_widgetsCountAggregateOutputType | null
    _avg: Dashboard_widgetsAvgAggregateOutputType | null
    _sum: Dashboard_widgetsSumAggregateOutputType | null
    _min: Dashboard_widgetsMinAggregateOutputType | null
    _max: Dashboard_widgetsMaxAggregateOutputType | null
  }

  export type Dashboard_widgetsAvgAggregateOutputType = {
    id: number | null
    admin_id: number | null
    widget_position: number | null
  }

  export type Dashboard_widgetsSumAggregateOutputType = {
    id: number | null
    admin_id: number | null
    widget_position: number | null
  }

  export type Dashboard_widgetsMinAggregateOutputType = {
    id: number | null
    admin_id: number | null
    widget_type: string | null
    widget_position: number | null
    widget_size: string | null
    is_visible: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Dashboard_widgetsMaxAggregateOutputType = {
    id: number | null
    admin_id: number | null
    widget_type: string | null
    widget_position: number | null
    widget_size: string | null
    is_visible: boolean | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Dashboard_widgetsCountAggregateOutputType = {
    id: number
    admin_id: number
    widget_type: number
    widget_position: number
    widget_size: number
    widget_config: number
    is_visible: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Dashboard_widgetsAvgAggregateInputType = {
    id?: true
    admin_id?: true
    widget_position?: true
  }

  export type Dashboard_widgetsSumAggregateInputType = {
    id?: true
    admin_id?: true
    widget_position?: true
  }

  export type Dashboard_widgetsMinAggregateInputType = {
    id?: true
    admin_id?: true
    widget_type?: true
    widget_position?: true
    widget_size?: true
    is_visible?: true
    created_at?: true
    updated_at?: true
  }

  export type Dashboard_widgetsMaxAggregateInputType = {
    id?: true
    admin_id?: true
    widget_type?: true
    widget_position?: true
    widget_size?: true
    is_visible?: true
    created_at?: true
    updated_at?: true
  }

  export type Dashboard_widgetsCountAggregateInputType = {
    id?: true
    admin_id?: true
    widget_type?: true
    widget_position?: true
    widget_size?: true
    widget_config?: true
    is_visible?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Dashboard_widgetsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which dashboard_widgets to aggregate.
     */
    where?: dashboard_widgetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of dashboard_widgets to fetch.
     */
    orderBy?: dashboard_widgetsOrderByWithRelationInput | dashboard_widgetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: dashboard_widgetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` dashboard_widgets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` dashboard_widgets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned dashboard_widgets
    **/
    _count?: true | Dashboard_widgetsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Dashboard_widgetsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Dashboard_widgetsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Dashboard_widgetsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Dashboard_widgetsMaxAggregateInputType
  }

  export type GetDashboard_widgetsAggregateType<T extends Dashboard_widgetsAggregateArgs> = {
        [P in keyof T & keyof AggregateDashboard_widgets]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDashboard_widgets[P]>
      : GetScalarType<T[P], AggregateDashboard_widgets[P]>
  }




  export type dashboard_widgetsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: dashboard_widgetsWhereInput
    orderBy?: dashboard_widgetsOrderByWithAggregationInput | dashboard_widgetsOrderByWithAggregationInput[]
    by: Dashboard_widgetsScalarFieldEnum[] | Dashboard_widgetsScalarFieldEnum
    having?: dashboard_widgetsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Dashboard_widgetsCountAggregateInputType | true
    _avg?: Dashboard_widgetsAvgAggregateInputType
    _sum?: Dashboard_widgetsSumAggregateInputType
    _min?: Dashboard_widgetsMinAggregateInputType
    _max?: Dashboard_widgetsMaxAggregateInputType
  }

  export type Dashboard_widgetsGroupByOutputType = {
    id: number
    admin_id: number
    widget_type: string
    widget_position: number
    widget_size: string
    widget_config: JsonValue
    is_visible: boolean
    created_at: Date
    updated_at: Date
    _count: Dashboard_widgetsCountAggregateOutputType | null
    _avg: Dashboard_widgetsAvgAggregateOutputType | null
    _sum: Dashboard_widgetsSumAggregateOutputType | null
    _min: Dashboard_widgetsMinAggregateOutputType | null
    _max: Dashboard_widgetsMaxAggregateOutputType | null
  }

  type GetDashboard_widgetsGroupByPayload<T extends dashboard_widgetsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Dashboard_widgetsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Dashboard_widgetsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Dashboard_widgetsGroupByOutputType[P]>
            : GetScalarType<T[P], Dashboard_widgetsGroupByOutputType[P]>
        }
      >
    >


  export type dashboard_widgetsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    admin_id?: boolean
    widget_type?: boolean
    widget_position?: boolean
    widget_size?: boolean
    widget_config?: boolean
    is_visible?: boolean
    created_at?: boolean
    updated_at?: boolean
    admin_users?: boolean | admin_usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["dashboard_widgets"]>

  export type dashboard_widgetsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    admin_id?: boolean
    widget_type?: boolean
    widget_position?: boolean
    widget_size?: boolean
    widget_config?: boolean
    is_visible?: boolean
    created_at?: boolean
    updated_at?: boolean
    admin_users?: boolean | admin_usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["dashboard_widgets"]>

  export type dashboard_widgetsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    admin_id?: boolean
    widget_type?: boolean
    widget_position?: boolean
    widget_size?: boolean
    widget_config?: boolean
    is_visible?: boolean
    created_at?: boolean
    updated_at?: boolean
    admin_users?: boolean | admin_usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["dashboard_widgets"]>

  export type dashboard_widgetsSelectScalar = {
    id?: boolean
    admin_id?: boolean
    widget_type?: boolean
    widget_position?: boolean
    widget_size?: boolean
    widget_config?: boolean
    is_visible?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type dashboard_widgetsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "admin_id" | "widget_type" | "widget_position" | "widget_size" | "widget_config" | "is_visible" | "created_at" | "updated_at", ExtArgs["result"]["dashboard_widgets"]>
  export type dashboard_widgetsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin_users?: boolean | admin_usersDefaultArgs<ExtArgs>
  }
  export type dashboard_widgetsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin_users?: boolean | admin_usersDefaultArgs<ExtArgs>
  }
  export type dashboard_widgetsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin_users?: boolean | admin_usersDefaultArgs<ExtArgs>
  }

  export type $dashboard_widgetsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "dashboard_widgets"
    objects: {
      admin_users: Prisma.$admin_usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      admin_id: number
      widget_type: string
      widget_position: number
      widget_size: string
      widget_config: Prisma.JsonValue
      is_visible: boolean
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["dashboard_widgets"]>
    composites: {}
  }

  type dashboard_widgetsGetPayload<S extends boolean | null | undefined | dashboard_widgetsDefaultArgs> = $Result.GetResult<Prisma.$dashboard_widgetsPayload, S>

  type dashboard_widgetsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<dashboard_widgetsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Dashboard_widgetsCountAggregateInputType | true
    }

  export interface dashboard_widgetsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['dashboard_widgets'], meta: { name: 'dashboard_widgets' } }
    /**
     * Find zero or one Dashboard_widgets that matches the filter.
     * @param {dashboard_widgetsFindUniqueArgs} args - Arguments to find a Dashboard_widgets
     * @example
     * // Get one Dashboard_widgets
     * const dashboard_widgets = await prisma.dashboard_widgets.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends dashboard_widgetsFindUniqueArgs>(args: SelectSubset<T, dashboard_widgetsFindUniqueArgs<ExtArgs>>): Prisma__dashboard_widgetsClient<$Result.GetResult<Prisma.$dashboard_widgetsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Dashboard_widgets that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {dashboard_widgetsFindUniqueOrThrowArgs} args - Arguments to find a Dashboard_widgets
     * @example
     * // Get one Dashboard_widgets
     * const dashboard_widgets = await prisma.dashboard_widgets.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends dashboard_widgetsFindUniqueOrThrowArgs>(args: SelectSubset<T, dashboard_widgetsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__dashboard_widgetsClient<$Result.GetResult<Prisma.$dashboard_widgetsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Dashboard_widgets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dashboard_widgetsFindFirstArgs} args - Arguments to find a Dashboard_widgets
     * @example
     * // Get one Dashboard_widgets
     * const dashboard_widgets = await prisma.dashboard_widgets.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends dashboard_widgetsFindFirstArgs>(args?: SelectSubset<T, dashboard_widgetsFindFirstArgs<ExtArgs>>): Prisma__dashboard_widgetsClient<$Result.GetResult<Prisma.$dashboard_widgetsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Dashboard_widgets that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dashboard_widgetsFindFirstOrThrowArgs} args - Arguments to find a Dashboard_widgets
     * @example
     * // Get one Dashboard_widgets
     * const dashboard_widgets = await prisma.dashboard_widgets.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends dashboard_widgetsFindFirstOrThrowArgs>(args?: SelectSubset<T, dashboard_widgetsFindFirstOrThrowArgs<ExtArgs>>): Prisma__dashboard_widgetsClient<$Result.GetResult<Prisma.$dashboard_widgetsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Dashboard_widgets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dashboard_widgetsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Dashboard_widgets
     * const dashboard_widgets = await prisma.dashboard_widgets.findMany()
     * 
     * // Get first 10 Dashboard_widgets
     * const dashboard_widgets = await prisma.dashboard_widgets.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const dashboard_widgetsWithIdOnly = await prisma.dashboard_widgets.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends dashboard_widgetsFindManyArgs>(args?: SelectSubset<T, dashboard_widgetsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$dashboard_widgetsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Dashboard_widgets.
     * @param {dashboard_widgetsCreateArgs} args - Arguments to create a Dashboard_widgets.
     * @example
     * // Create one Dashboard_widgets
     * const Dashboard_widgets = await prisma.dashboard_widgets.create({
     *   data: {
     *     // ... data to create a Dashboard_widgets
     *   }
     * })
     * 
     */
    create<T extends dashboard_widgetsCreateArgs>(args: SelectSubset<T, dashboard_widgetsCreateArgs<ExtArgs>>): Prisma__dashboard_widgetsClient<$Result.GetResult<Prisma.$dashboard_widgetsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Dashboard_widgets.
     * @param {dashboard_widgetsCreateManyArgs} args - Arguments to create many Dashboard_widgets.
     * @example
     * // Create many Dashboard_widgets
     * const dashboard_widgets = await prisma.dashboard_widgets.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends dashboard_widgetsCreateManyArgs>(args?: SelectSubset<T, dashboard_widgetsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Dashboard_widgets and returns the data saved in the database.
     * @param {dashboard_widgetsCreateManyAndReturnArgs} args - Arguments to create many Dashboard_widgets.
     * @example
     * // Create many Dashboard_widgets
     * const dashboard_widgets = await prisma.dashboard_widgets.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Dashboard_widgets and only return the `id`
     * const dashboard_widgetsWithIdOnly = await prisma.dashboard_widgets.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends dashboard_widgetsCreateManyAndReturnArgs>(args?: SelectSubset<T, dashboard_widgetsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$dashboard_widgetsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Dashboard_widgets.
     * @param {dashboard_widgetsDeleteArgs} args - Arguments to delete one Dashboard_widgets.
     * @example
     * // Delete one Dashboard_widgets
     * const Dashboard_widgets = await prisma.dashboard_widgets.delete({
     *   where: {
     *     // ... filter to delete one Dashboard_widgets
     *   }
     * })
     * 
     */
    delete<T extends dashboard_widgetsDeleteArgs>(args: SelectSubset<T, dashboard_widgetsDeleteArgs<ExtArgs>>): Prisma__dashboard_widgetsClient<$Result.GetResult<Prisma.$dashboard_widgetsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Dashboard_widgets.
     * @param {dashboard_widgetsUpdateArgs} args - Arguments to update one Dashboard_widgets.
     * @example
     * // Update one Dashboard_widgets
     * const dashboard_widgets = await prisma.dashboard_widgets.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends dashboard_widgetsUpdateArgs>(args: SelectSubset<T, dashboard_widgetsUpdateArgs<ExtArgs>>): Prisma__dashboard_widgetsClient<$Result.GetResult<Prisma.$dashboard_widgetsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Dashboard_widgets.
     * @param {dashboard_widgetsDeleteManyArgs} args - Arguments to filter Dashboard_widgets to delete.
     * @example
     * // Delete a few Dashboard_widgets
     * const { count } = await prisma.dashboard_widgets.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends dashboard_widgetsDeleteManyArgs>(args?: SelectSubset<T, dashboard_widgetsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Dashboard_widgets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dashboard_widgetsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Dashboard_widgets
     * const dashboard_widgets = await prisma.dashboard_widgets.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends dashboard_widgetsUpdateManyArgs>(args: SelectSubset<T, dashboard_widgetsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Dashboard_widgets and returns the data updated in the database.
     * @param {dashboard_widgetsUpdateManyAndReturnArgs} args - Arguments to update many Dashboard_widgets.
     * @example
     * // Update many Dashboard_widgets
     * const dashboard_widgets = await prisma.dashboard_widgets.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Dashboard_widgets and only return the `id`
     * const dashboard_widgetsWithIdOnly = await prisma.dashboard_widgets.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends dashboard_widgetsUpdateManyAndReturnArgs>(args: SelectSubset<T, dashboard_widgetsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$dashboard_widgetsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Dashboard_widgets.
     * @param {dashboard_widgetsUpsertArgs} args - Arguments to update or create a Dashboard_widgets.
     * @example
     * // Update or create a Dashboard_widgets
     * const dashboard_widgets = await prisma.dashboard_widgets.upsert({
     *   create: {
     *     // ... data to create a Dashboard_widgets
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Dashboard_widgets we want to update
     *   }
     * })
     */
    upsert<T extends dashboard_widgetsUpsertArgs>(args: SelectSubset<T, dashboard_widgetsUpsertArgs<ExtArgs>>): Prisma__dashboard_widgetsClient<$Result.GetResult<Prisma.$dashboard_widgetsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Dashboard_widgets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dashboard_widgetsCountArgs} args - Arguments to filter Dashboard_widgets to count.
     * @example
     * // Count the number of Dashboard_widgets
     * const count = await prisma.dashboard_widgets.count({
     *   where: {
     *     // ... the filter for the Dashboard_widgets we want to count
     *   }
     * })
    **/
    count<T extends dashboard_widgetsCountArgs>(
      args?: Subset<T, dashboard_widgetsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Dashboard_widgetsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Dashboard_widgets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Dashboard_widgetsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Dashboard_widgetsAggregateArgs>(args: Subset<T, Dashboard_widgetsAggregateArgs>): Prisma.PrismaPromise<GetDashboard_widgetsAggregateType<T>>

    /**
     * Group by Dashboard_widgets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {dashboard_widgetsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends dashboard_widgetsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: dashboard_widgetsGroupByArgs['orderBy'] }
        : { orderBy?: dashboard_widgetsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, dashboard_widgetsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDashboard_widgetsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the dashboard_widgets model
   */
  readonly fields: dashboard_widgetsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for dashboard_widgets.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__dashboard_widgetsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    admin_users<T extends admin_usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, admin_usersDefaultArgs<ExtArgs>>): Prisma__admin_usersClient<$Result.GetResult<Prisma.$admin_usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the dashboard_widgets model
   */
  interface dashboard_widgetsFieldRefs {
    readonly id: FieldRef<"dashboard_widgets", 'Int'>
    readonly admin_id: FieldRef<"dashboard_widgets", 'Int'>
    readonly widget_type: FieldRef<"dashboard_widgets", 'String'>
    readonly widget_position: FieldRef<"dashboard_widgets", 'Int'>
    readonly widget_size: FieldRef<"dashboard_widgets", 'String'>
    readonly widget_config: FieldRef<"dashboard_widgets", 'Json'>
    readonly is_visible: FieldRef<"dashboard_widgets", 'Boolean'>
    readonly created_at: FieldRef<"dashboard_widgets", 'DateTime'>
    readonly updated_at: FieldRef<"dashboard_widgets", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * dashboard_widgets findUnique
   */
  export type dashboard_widgetsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dashboard_widgets
     */
    select?: dashboard_widgetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dashboard_widgets
     */
    omit?: dashboard_widgetsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dashboard_widgetsInclude<ExtArgs> | null
    /**
     * Filter, which dashboard_widgets to fetch.
     */
    where: dashboard_widgetsWhereUniqueInput
  }

  /**
   * dashboard_widgets findUniqueOrThrow
   */
  export type dashboard_widgetsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dashboard_widgets
     */
    select?: dashboard_widgetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dashboard_widgets
     */
    omit?: dashboard_widgetsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dashboard_widgetsInclude<ExtArgs> | null
    /**
     * Filter, which dashboard_widgets to fetch.
     */
    where: dashboard_widgetsWhereUniqueInput
  }

  /**
   * dashboard_widgets findFirst
   */
  export type dashboard_widgetsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dashboard_widgets
     */
    select?: dashboard_widgetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dashboard_widgets
     */
    omit?: dashboard_widgetsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dashboard_widgetsInclude<ExtArgs> | null
    /**
     * Filter, which dashboard_widgets to fetch.
     */
    where?: dashboard_widgetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of dashboard_widgets to fetch.
     */
    orderBy?: dashboard_widgetsOrderByWithRelationInput | dashboard_widgetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for dashboard_widgets.
     */
    cursor?: dashboard_widgetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` dashboard_widgets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` dashboard_widgets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of dashboard_widgets.
     */
    distinct?: Dashboard_widgetsScalarFieldEnum | Dashboard_widgetsScalarFieldEnum[]
  }

  /**
   * dashboard_widgets findFirstOrThrow
   */
  export type dashboard_widgetsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dashboard_widgets
     */
    select?: dashboard_widgetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dashboard_widgets
     */
    omit?: dashboard_widgetsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dashboard_widgetsInclude<ExtArgs> | null
    /**
     * Filter, which dashboard_widgets to fetch.
     */
    where?: dashboard_widgetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of dashboard_widgets to fetch.
     */
    orderBy?: dashboard_widgetsOrderByWithRelationInput | dashboard_widgetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for dashboard_widgets.
     */
    cursor?: dashboard_widgetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` dashboard_widgets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` dashboard_widgets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of dashboard_widgets.
     */
    distinct?: Dashboard_widgetsScalarFieldEnum | Dashboard_widgetsScalarFieldEnum[]
  }

  /**
   * dashboard_widgets findMany
   */
  export type dashboard_widgetsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dashboard_widgets
     */
    select?: dashboard_widgetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dashboard_widgets
     */
    omit?: dashboard_widgetsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dashboard_widgetsInclude<ExtArgs> | null
    /**
     * Filter, which dashboard_widgets to fetch.
     */
    where?: dashboard_widgetsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of dashboard_widgets to fetch.
     */
    orderBy?: dashboard_widgetsOrderByWithRelationInput | dashboard_widgetsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing dashboard_widgets.
     */
    cursor?: dashboard_widgetsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` dashboard_widgets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` dashboard_widgets.
     */
    skip?: number
    distinct?: Dashboard_widgetsScalarFieldEnum | Dashboard_widgetsScalarFieldEnum[]
  }

  /**
   * dashboard_widgets create
   */
  export type dashboard_widgetsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dashboard_widgets
     */
    select?: dashboard_widgetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dashboard_widgets
     */
    omit?: dashboard_widgetsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dashboard_widgetsInclude<ExtArgs> | null
    /**
     * The data needed to create a dashboard_widgets.
     */
    data: XOR<dashboard_widgetsCreateInput, dashboard_widgetsUncheckedCreateInput>
  }

  /**
   * dashboard_widgets createMany
   */
  export type dashboard_widgetsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many dashboard_widgets.
     */
    data: dashboard_widgetsCreateManyInput | dashboard_widgetsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * dashboard_widgets createManyAndReturn
   */
  export type dashboard_widgetsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dashboard_widgets
     */
    select?: dashboard_widgetsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the dashboard_widgets
     */
    omit?: dashboard_widgetsOmit<ExtArgs> | null
    /**
     * The data used to create many dashboard_widgets.
     */
    data: dashboard_widgetsCreateManyInput | dashboard_widgetsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dashboard_widgetsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * dashboard_widgets update
   */
  export type dashboard_widgetsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dashboard_widgets
     */
    select?: dashboard_widgetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dashboard_widgets
     */
    omit?: dashboard_widgetsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dashboard_widgetsInclude<ExtArgs> | null
    /**
     * The data needed to update a dashboard_widgets.
     */
    data: XOR<dashboard_widgetsUpdateInput, dashboard_widgetsUncheckedUpdateInput>
    /**
     * Choose, which dashboard_widgets to update.
     */
    where: dashboard_widgetsWhereUniqueInput
  }

  /**
   * dashboard_widgets updateMany
   */
  export type dashboard_widgetsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update dashboard_widgets.
     */
    data: XOR<dashboard_widgetsUpdateManyMutationInput, dashboard_widgetsUncheckedUpdateManyInput>
    /**
     * Filter which dashboard_widgets to update
     */
    where?: dashboard_widgetsWhereInput
    /**
     * Limit how many dashboard_widgets to update.
     */
    limit?: number
  }

  /**
   * dashboard_widgets updateManyAndReturn
   */
  export type dashboard_widgetsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dashboard_widgets
     */
    select?: dashboard_widgetsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the dashboard_widgets
     */
    omit?: dashboard_widgetsOmit<ExtArgs> | null
    /**
     * The data used to update dashboard_widgets.
     */
    data: XOR<dashboard_widgetsUpdateManyMutationInput, dashboard_widgetsUncheckedUpdateManyInput>
    /**
     * Filter which dashboard_widgets to update
     */
    where?: dashboard_widgetsWhereInput
    /**
     * Limit how many dashboard_widgets to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dashboard_widgetsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * dashboard_widgets upsert
   */
  export type dashboard_widgetsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dashboard_widgets
     */
    select?: dashboard_widgetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dashboard_widgets
     */
    omit?: dashboard_widgetsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dashboard_widgetsInclude<ExtArgs> | null
    /**
     * The filter to search for the dashboard_widgets to update in case it exists.
     */
    where: dashboard_widgetsWhereUniqueInput
    /**
     * In case the dashboard_widgets found by the `where` argument doesn't exist, create a new dashboard_widgets with this data.
     */
    create: XOR<dashboard_widgetsCreateInput, dashboard_widgetsUncheckedCreateInput>
    /**
     * In case the dashboard_widgets was found with the provided `where` argument, update it with this data.
     */
    update: XOR<dashboard_widgetsUpdateInput, dashboard_widgetsUncheckedUpdateInput>
  }

  /**
   * dashboard_widgets delete
   */
  export type dashboard_widgetsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dashboard_widgets
     */
    select?: dashboard_widgetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dashboard_widgets
     */
    omit?: dashboard_widgetsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dashboard_widgetsInclude<ExtArgs> | null
    /**
     * Filter which dashboard_widgets to delete.
     */
    where: dashboard_widgetsWhereUniqueInput
  }

  /**
   * dashboard_widgets deleteMany
   */
  export type dashboard_widgetsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which dashboard_widgets to delete
     */
    where?: dashboard_widgetsWhereInput
    /**
     * Limit how many dashboard_widgets to delete.
     */
    limit?: number
  }

  /**
   * dashboard_widgets without action
   */
  export type dashboard_widgetsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the dashboard_widgets
     */
    select?: dashboard_widgetsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the dashboard_widgets
     */
    omit?: dashboard_widgetsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: dashboard_widgetsInclude<ExtArgs> | null
  }


  /**
   * Model document_uploads
   */

  export type AggregateDocument_uploads = {
    _count: Document_uploadsCountAggregateOutputType | null
    _avg: Document_uploadsAvgAggregateOutputType | null
    _sum: Document_uploadsSumAggregateOutputType | null
    _min: Document_uploadsMinAggregateOutputType | null
    _max: Document_uploadsMaxAggregateOutputType | null
  }

  export type Document_uploadsAvgAggregateOutputType = {
    id: number | null
  }

  export type Document_uploadsSumAggregateOutputType = {
    id: number | null
  }

  export type Document_uploadsMinAggregateOutputType = {
    id: number | null
    registration_id: string | null
    appointment_letter_path: string | null
    educational_certificates_path: string | null
    promotion_letter_path: string | null
    other_documents_path: string | null
    profile_image_path: string | null
    signature_path: string | null
    upload_date: Date | null
    status: string | null
  }

  export type Document_uploadsMaxAggregateOutputType = {
    id: number | null
    registration_id: string | null
    appointment_letter_path: string | null
    educational_certificates_path: string | null
    promotion_letter_path: string | null
    other_documents_path: string | null
    profile_image_path: string | null
    signature_path: string | null
    upload_date: Date | null
    status: string | null
  }

  export type Document_uploadsCountAggregateOutputType = {
    id: number
    registration_id: number
    appointment_letter_path: number
    educational_certificates_path: number
    promotion_letter_path: number
    other_documents_path: number
    profile_image_path: number
    signature_path: number
    upload_date: number
    status: number
    _all: number
  }


  export type Document_uploadsAvgAggregateInputType = {
    id?: true
  }

  export type Document_uploadsSumAggregateInputType = {
    id?: true
  }

  export type Document_uploadsMinAggregateInputType = {
    id?: true
    registration_id?: true
    appointment_letter_path?: true
    educational_certificates_path?: true
    promotion_letter_path?: true
    other_documents_path?: true
    profile_image_path?: true
    signature_path?: true
    upload_date?: true
    status?: true
  }

  export type Document_uploadsMaxAggregateInputType = {
    id?: true
    registration_id?: true
    appointment_letter_path?: true
    educational_certificates_path?: true
    promotion_letter_path?: true
    other_documents_path?: true
    profile_image_path?: true
    signature_path?: true
    upload_date?: true
    status?: true
  }

  export type Document_uploadsCountAggregateInputType = {
    id?: true
    registration_id?: true
    appointment_letter_path?: true
    educational_certificates_path?: true
    promotion_letter_path?: true
    other_documents_path?: true
    profile_image_path?: true
    signature_path?: true
    upload_date?: true
    status?: true
    _all?: true
  }

  export type Document_uploadsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which document_uploads to aggregate.
     */
    where?: document_uploadsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of document_uploads to fetch.
     */
    orderBy?: document_uploadsOrderByWithRelationInput | document_uploadsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: document_uploadsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` document_uploads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` document_uploads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned document_uploads
    **/
    _count?: true | Document_uploadsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Document_uploadsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Document_uploadsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Document_uploadsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Document_uploadsMaxAggregateInputType
  }

  export type GetDocument_uploadsAggregateType<T extends Document_uploadsAggregateArgs> = {
        [P in keyof T & keyof AggregateDocument_uploads]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDocument_uploads[P]>
      : GetScalarType<T[P], AggregateDocument_uploads[P]>
  }




  export type document_uploadsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: document_uploadsWhereInput
    orderBy?: document_uploadsOrderByWithAggregationInput | document_uploadsOrderByWithAggregationInput[]
    by: Document_uploadsScalarFieldEnum[] | Document_uploadsScalarFieldEnum
    having?: document_uploadsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Document_uploadsCountAggregateInputType | true
    _avg?: Document_uploadsAvgAggregateInputType
    _sum?: Document_uploadsSumAggregateInputType
    _min?: Document_uploadsMinAggregateInputType
    _max?: Document_uploadsMaxAggregateInputType
  }

  export type Document_uploadsGroupByOutputType = {
    id: number
    registration_id: string
    appointment_letter_path: string
    educational_certificates_path: string
    promotion_letter_path: string | null
    other_documents_path: string | null
    profile_image_path: string
    signature_path: string
    upload_date: Date
    status: string | null
    _count: Document_uploadsCountAggregateOutputType | null
    _avg: Document_uploadsAvgAggregateOutputType | null
    _sum: Document_uploadsSumAggregateOutputType | null
    _min: Document_uploadsMinAggregateOutputType | null
    _max: Document_uploadsMaxAggregateOutputType | null
  }

  type GetDocument_uploadsGroupByPayload<T extends document_uploadsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Document_uploadsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Document_uploadsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Document_uploadsGroupByOutputType[P]>
            : GetScalarType<T[P], Document_uploadsGroupByOutputType[P]>
        }
      >
    >


  export type document_uploadsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    registration_id?: boolean
    appointment_letter_path?: boolean
    educational_certificates_path?: boolean
    promotion_letter_path?: boolean
    other_documents_path?: boolean
    profile_image_path?: boolean
    signature_path?: boolean
    upload_date?: boolean
    status?: boolean
    registrations?: boolean | registrationsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["document_uploads"]>

  export type document_uploadsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    registration_id?: boolean
    appointment_letter_path?: boolean
    educational_certificates_path?: boolean
    promotion_letter_path?: boolean
    other_documents_path?: boolean
    profile_image_path?: boolean
    signature_path?: boolean
    upload_date?: boolean
    status?: boolean
    registrations?: boolean | registrationsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["document_uploads"]>

  export type document_uploadsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    registration_id?: boolean
    appointment_letter_path?: boolean
    educational_certificates_path?: boolean
    promotion_letter_path?: boolean
    other_documents_path?: boolean
    profile_image_path?: boolean
    signature_path?: boolean
    upload_date?: boolean
    status?: boolean
    registrations?: boolean | registrationsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["document_uploads"]>

  export type document_uploadsSelectScalar = {
    id?: boolean
    registration_id?: boolean
    appointment_letter_path?: boolean
    educational_certificates_path?: boolean
    promotion_letter_path?: boolean
    other_documents_path?: boolean
    profile_image_path?: boolean
    signature_path?: boolean
    upload_date?: boolean
    status?: boolean
  }

  export type document_uploadsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "registration_id" | "appointment_letter_path" | "educational_certificates_path" | "promotion_letter_path" | "other_documents_path" | "profile_image_path" | "signature_path" | "upload_date" | "status", ExtArgs["result"]["document_uploads"]>
  export type document_uploadsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registrations?: boolean | registrationsDefaultArgs<ExtArgs>
  }
  export type document_uploadsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registrations?: boolean | registrationsDefaultArgs<ExtArgs>
  }
  export type document_uploadsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registrations?: boolean | registrationsDefaultArgs<ExtArgs>
  }

  export type $document_uploadsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "document_uploads"
    objects: {
      registrations: Prisma.$registrationsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      registration_id: string
      appointment_letter_path: string
      educational_certificates_path: string
      promotion_letter_path: string | null
      other_documents_path: string | null
      profile_image_path: string
      signature_path: string
      upload_date: Date
      status: string | null
    }, ExtArgs["result"]["document_uploads"]>
    composites: {}
  }

  type document_uploadsGetPayload<S extends boolean | null | undefined | document_uploadsDefaultArgs> = $Result.GetResult<Prisma.$document_uploadsPayload, S>

  type document_uploadsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<document_uploadsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Document_uploadsCountAggregateInputType | true
    }

  export interface document_uploadsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['document_uploads'], meta: { name: 'document_uploads' } }
    /**
     * Find zero or one Document_uploads that matches the filter.
     * @param {document_uploadsFindUniqueArgs} args - Arguments to find a Document_uploads
     * @example
     * // Get one Document_uploads
     * const document_uploads = await prisma.document_uploads.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends document_uploadsFindUniqueArgs>(args: SelectSubset<T, document_uploadsFindUniqueArgs<ExtArgs>>): Prisma__document_uploadsClient<$Result.GetResult<Prisma.$document_uploadsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Document_uploads that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {document_uploadsFindUniqueOrThrowArgs} args - Arguments to find a Document_uploads
     * @example
     * // Get one Document_uploads
     * const document_uploads = await prisma.document_uploads.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends document_uploadsFindUniqueOrThrowArgs>(args: SelectSubset<T, document_uploadsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__document_uploadsClient<$Result.GetResult<Prisma.$document_uploadsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Document_uploads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_uploadsFindFirstArgs} args - Arguments to find a Document_uploads
     * @example
     * // Get one Document_uploads
     * const document_uploads = await prisma.document_uploads.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends document_uploadsFindFirstArgs>(args?: SelectSubset<T, document_uploadsFindFirstArgs<ExtArgs>>): Prisma__document_uploadsClient<$Result.GetResult<Prisma.$document_uploadsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Document_uploads that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_uploadsFindFirstOrThrowArgs} args - Arguments to find a Document_uploads
     * @example
     * // Get one Document_uploads
     * const document_uploads = await prisma.document_uploads.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends document_uploadsFindFirstOrThrowArgs>(args?: SelectSubset<T, document_uploadsFindFirstOrThrowArgs<ExtArgs>>): Prisma__document_uploadsClient<$Result.GetResult<Prisma.$document_uploadsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Document_uploads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_uploadsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Document_uploads
     * const document_uploads = await prisma.document_uploads.findMany()
     * 
     * // Get first 10 Document_uploads
     * const document_uploads = await prisma.document_uploads.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const document_uploadsWithIdOnly = await prisma.document_uploads.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends document_uploadsFindManyArgs>(args?: SelectSubset<T, document_uploadsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$document_uploadsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Document_uploads.
     * @param {document_uploadsCreateArgs} args - Arguments to create a Document_uploads.
     * @example
     * // Create one Document_uploads
     * const Document_uploads = await prisma.document_uploads.create({
     *   data: {
     *     // ... data to create a Document_uploads
     *   }
     * })
     * 
     */
    create<T extends document_uploadsCreateArgs>(args: SelectSubset<T, document_uploadsCreateArgs<ExtArgs>>): Prisma__document_uploadsClient<$Result.GetResult<Prisma.$document_uploadsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Document_uploads.
     * @param {document_uploadsCreateManyArgs} args - Arguments to create many Document_uploads.
     * @example
     * // Create many Document_uploads
     * const document_uploads = await prisma.document_uploads.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends document_uploadsCreateManyArgs>(args?: SelectSubset<T, document_uploadsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Document_uploads and returns the data saved in the database.
     * @param {document_uploadsCreateManyAndReturnArgs} args - Arguments to create many Document_uploads.
     * @example
     * // Create many Document_uploads
     * const document_uploads = await prisma.document_uploads.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Document_uploads and only return the `id`
     * const document_uploadsWithIdOnly = await prisma.document_uploads.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends document_uploadsCreateManyAndReturnArgs>(args?: SelectSubset<T, document_uploadsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$document_uploadsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Document_uploads.
     * @param {document_uploadsDeleteArgs} args - Arguments to delete one Document_uploads.
     * @example
     * // Delete one Document_uploads
     * const Document_uploads = await prisma.document_uploads.delete({
     *   where: {
     *     // ... filter to delete one Document_uploads
     *   }
     * })
     * 
     */
    delete<T extends document_uploadsDeleteArgs>(args: SelectSubset<T, document_uploadsDeleteArgs<ExtArgs>>): Prisma__document_uploadsClient<$Result.GetResult<Prisma.$document_uploadsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Document_uploads.
     * @param {document_uploadsUpdateArgs} args - Arguments to update one Document_uploads.
     * @example
     * // Update one Document_uploads
     * const document_uploads = await prisma.document_uploads.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends document_uploadsUpdateArgs>(args: SelectSubset<T, document_uploadsUpdateArgs<ExtArgs>>): Prisma__document_uploadsClient<$Result.GetResult<Prisma.$document_uploadsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Document_uploads.
     * @param {document_uploadsDeleteManyArgs} args - Arguments to filter Document_uploads to delete.
     * @example
     * // Delete a few Document_uploads
     * const { count } = await prisma.document_uploads.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends document_uploadsDeleteManyArgs>(args?: SelectSubset<T, document_uploadsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Document_uploads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_uploadsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Document_uploads
     * const document_uploads = await prisma.document_uploads.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends document_uploadsUpdateManyArgs>(args: SelectSubset<T, document_uploadsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Document_uploads and returns the data updated in the database.
     * @param {document_uploadsUpdateManyAndReturnArgs} args - Arguments to update many Document_uploads.
     * @example
     * // Update many Document_uploads
     * const document_uploads = await prisma.document_uploads.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Document_uploads and only return the `id`
     * const document_uploadsWithIdOnly = await prisma.document_uploads.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends document_uploadsUpdateManyAndReturnArgs>(args: SelectSubset<T, document_uploadsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$document_uploadsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Document_uploads.
     * @param {document_uploadsUpsertArgs} args - Arguments to update or create a Document_uploads.
     * @example
     * // Update or create a Document_uploads
     * const document_uploads = await prisma.document_uploads.upsert({
     *   create: {
     *     // ... data to create a Document_uploads
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Document_uploads we want to update
     *   }
     * })
     */
    upsert<T extends document_uploadsUpsertArgs>(args: SelectSubset<T, document_uploadsUpsertArgs<ExtArgs>>): Prisma__document_uploadsClient<$Result.GetResult<Prisma.$document_uploadsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Document_uploads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_uploadsCountArgs} args - Arguments to filter Document_uploads to count.
     * @example
     * // Count the number of Document_uploads
     * const count = await prisma.document_uploads.count({
     *   where: {
     *     // ... the filter for the Document_uploads we want to count
     *   }
     * })
    **/
    count<T extends document_uploadsCountArgs>(
      args?: Subset<T, document_uploadsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Document_uploadsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Document_uploads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Document_uploadsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Document_uploadsAggregateArgs>(args: Subset<T, Document_uploadsAggregateArgs>): Prisma.PrismaPromise<GetDocument_uploadsAggregateType<T>>

    /**
     * Group by Document_uploads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {document_uploadsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends document_uploadsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: document_uploadsGroupByArgs['orderBy'] }
        : { orderBy?: document_uploadsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, document_uploadsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDocument_uploadsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the document_uploads model
   */
  readonly fields: document_uploadsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for document_uploads.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__document_uploadsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    registrations<T extends registrationsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, registrationsDefaultArgs<ExtArgs>>): Prisma__registrationsClient<$Result.GetResult<Prisma.$registrationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the document_uploads model
   */
  interface document_uploadsFieldRefs {
    readonly id: FieldRef<"document_uploads", 'Int'>
    readonly registration_id: FieldRef<"document_uploads", 'String'>
    readonly appointment_letter_path: FieldRef<"document_uploads", 'String'>
    readonly educational_certificates_path: FieldRef<"document_uploads", 'String'>
    readonly promotion_letter_path: FieldRef<"document_uploads", 'String'>
    readonly other_documents_path: FieldRef<"document_uploads", 'String'>
    readonly profile_image_path: FieldRef<"document_uploads", 'String'>
    readonly signature_path: FieldRef<"document_uploads", 'String'>
    readonly upload_date: FieldRef<"document_uploads", 'DateTime'>
    readonly status: FieldRef<"document_uploads", 'String'>
  }
    

  // Custom InputTypes
  /**
   * document_uploads findUnique
   */
  export type document_uploadsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_uploads
     */
    select?: document_uploadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the document_uploads
     */
    omit?: document_uploadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_uploadsInclude<ExtArgs> | null
    /**
     * Filter, which document_uploads to fetch.
     */
    where: document_uploadsWhereUniqueInput
  }

  /**
   * document_uploads findUniqueOrThrow
   */
  export type document_uploadsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_uploads
     */
    select?: document_uploadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the document_uploads
     */
    omit?: document_uploadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_uploadsInclude<ExtArgs> | null
    /**
     * Filter, which document_uploads to fetch.
     */
    where: document_uploadsWhereUniqueInput
  }

  /**
   * document_uploads findFirst
   */
  export type document_uploadsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_uploads
     */
    select?: document_uploadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the document_uploads
     */
    omit?: document_uploadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_uploadsInclude<ExtArgs> | null
    /**
     * Filter, which document_uploads to fetch.
     */
    where?: document_uploadsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of document_uploads to fetch.
     */
    orderBy?: document_uploadsOrderByWithRelationInput | document_uploadsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for document_uploads.
     */
    cursor?: document_uploadsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` document_uploads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` document_uploads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of document_uploads.
     */
    distinct?: Document_uploadsScalarFieldEnum | Document_uploadsScalarFieldEnum[]
  }

  /**
   * document_uploads findFirstOrThrow
   */
  export type document_uploadsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_uploads
     */
    select?: document_uploadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the document_uploads
     */
    omit?: document_uploadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_uploadsInclude<ExtArgs> | null
    /**
     * Filter, which document_uploads to fetch.
     */
    where?: document_uploadsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of document_uploads to fetch.
     */
    orderBy?: document_uploadsOrderByWithRelationInput | document_uploadsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for document_uploads.
     */
    cursor?: document_uploadsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` document_uploads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` document_uploads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of document_uploads.
     */
    distinct?: Document_uploadsScalarFieldEnum | Document_uploadsScalarFieldEnum[]
  }

  /**
   * document_uploads findMany
   */
  export type document_uploadsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_uploads
     */
    select?: document_uploadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the document_uploads
     */
    omit?: document_uploadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_uploadsInclude<ExtArgs> | null
    /**
     * Filter, which document_uploads to fetch.
     */
    where?: document_uploadsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of document_uploads to fetch.
     */
    orderBy?: document_uploadsOrderByWithRelationInput | document_uploadsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing document_uploads.
     */
    cursor?: document_uploadsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` document_uploads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` document_uploads.
     */
    skip?: number
    distinct?: Document_uploadsScalarFieldEnum | Document_uploadsScalarFieldEnum[]
  }

  /**
   * document_uploads create
   */
  export type document_uploadsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_uploads
     */
    select?: document_uploadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the document_uploads
     */
    omit?: document_uploadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_uploadsInclude<ExtArgs> | null
    /**
     * The data needed to create a document_uploads.
     */
    data: XOR<document_uploadsCreateInput, document_uploadsUncheckedCreateInput>
  }

  /**
   * document_uploads createMany
   */
  export type document_uploadsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many document_uploads.
     */
    data: document_uploadsCreateManyInput | document_uploadsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * document_uploads createManyAndReturn
   */
  export type document_uploadsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_uploads
     */
    select?: document_uploadsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the document_uploads
     */
    omit?: document_uploadsOmit<ExtArgs> | null
    /**
     * The data used to create many document_uploads.
     */
    data: document_uploadsCreateManyInput | document_uploadsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_uploadsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * document_uploads update
   */
  export type document_uploadsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_uploads
     */
    select?: document_uploadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the document_uploads
     */
    omit?: document_uploadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_uploadsInclude<ExtArgs> | null
    /**
     * The data needed to update a document_uploads.
     */
    data: XOR<document_uploadsUpdateInput, document_uploadsUncheckedUpdateInput>
    /**
     * Choose, which document_uploads to update.
     */
    where: document_uploadsWhereUniqueInput
  }

  /**
   * document_uploads updateMany
   */
  export type document_uploadsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update document_uploads.
     */
    data: XOR<document_uploadsUpdateManyMutationInput, document_uploadsUncheckedUpdateManyInput>
    /**
     * Filter which document_uploads to update
     */
    where?: document_uploadsWhereInput
    /**
     * Limit how many document_uploads to update.
     */
    limit?: number
  }

  /**
   * document_uploads updateManyAndReturn
   */
  export type document_uploadsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_uploads
     */
    select?: document_uploadsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the document_uploads
     */
    omit?: document_uploadsOmit<ExtArgs> | null
    /**
     * The data used to update document_uploads.
     */
    data: XOR<document_uploadsUpdateManyMutationInput, document_uploadsUncheckedUpdateManyInput>
    /**
     * Filter which document_uploads to update
     */
    where?: document_uploadsWhereInput
    /**
     * Limit how many document_uploads to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_uploadsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * document_uploads upsert
   */
  export type document_uploadsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_uploads
     */
    select?: document_uploadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the document_uploads
     */
    omit?: document_uploadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_uploadsInclude<ExtArgs> | null
    /**
     * The filter to search for the document_uploads to update in case it exists.
     */
    where: document_uploadsWhereUniqueInput
    /**
     * In case the document_uploads found by the `where` argument doesn't exist, create a new document_uploads with this data.
     */
    create: XOR<document_uploadsCreateInput, document_uploadsUncheckedCreateInput>
    /**
     * In case the document_uploads was found with the provided `where` argument, update it with this data.
     */
    update: XOR<document_uploadsUpdateInput, document_uploadsUncheckedUpdateInput>
  }

  /**
   * document_uploads delete
   */
  export type document_uploadsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_uploads
     */
    select?: document_uploadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the document_uploads
     */
    omit?: document_uploadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_uploadsInclude<ExtArgs> | null
    /**
     * Filter which document_uploads to delete.
     */
    where: document_uploadsWhereUniqueInput
  }

  /**
   * document_uploads deleteMany
   */
  export type document_uploadsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which document_uploads to delete
     */
    where?: document_uploadsWhereInput
    /**
     * Limit how many document_uploads to delete.
     */
    limit?: number
  }

  /**
   * document_uploads without action
   */
  export type document_uploadsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_uploads
     */
    select?: document_uploadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the document_uploads
     */
    omit?: document_uploadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_uploadsInclude<ExtArgs> | null
  }


  /**
   * Model employees
   */

  export type AggregateEmployees = {
    _count: EmployeesCountAggregateOutputType | null
    _min: EmployeesMinAggregateOutputType | null
    _max: EmployeesMaxAggregateOutputType | null
  }

  export type EmployeesMinAggregateOutputType = {
    id: string | null
    name: string | null
    email: string | null
    department: string | null
    position: string | null
    status: string | null
    join_date: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type EmployeesMaxAggregateOutputType = {
    id: string | null
    name: string | null
    email: string | null
    department: string | null
    position: string | null
    status: string | null
    join_date: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type EmployeesCountAggregateOutputType = {
    id: number
    name: number
    email: number
    department: number
    position: number
    status: number
    join_date: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type EmployeesMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    department?: true
    position?: true
    status?: true
    join_date?: true
    created_at?: true
    updated_at?: true
  }

  export type EmployeesMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    department?: true
    position?: true
    status?: true
    join_date?: true
    created_at?: true
    updated_at?: true
  }

  export type EmployeesCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    department?: true
    position?: true
    status?: true
    join_date?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type EmployeesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which employees to aggregate.
     */
    where?: employeesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of employees to fetch.
     */
    orderBy?: employeesOrderByWithRelationInput | employeesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: employeesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` employees from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` employees.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned employees
    **/
    _count?: true | EmployeesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EmployeesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EmployeesMaxAggregateInputType
  }

  export type GetEmployeesAggregateType<T extends EmployeesAggregateArgs> = {
        [P in keyof T & keyof AggregateEmployees]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmployees[P]>
      : GetScalarType<T[P], AggregateEmployees[P]>
  }




  export type employeesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: employeesWhereInput
    orderBy?: employeesOrderByWithAggregationInput | employeesOrderByWithAggregationInput[]
    by: EmployeesScalarFieldEnum[] | EmployeesScalarFieldEnum
    having?: employeesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EmployeesCountAggregateInputType | true
    _min?: EmployeesMinAggregateInputType
    _max?: EmployeesMaxAggregateInputType
  }

  export type EmployeesGroupByOutputType = {
    id: string
    name: string
    email: string
    department: string
    position: string
    status: string
    join_date: Date
    created_at: Date
    updated_at: Date
    _count: EmployeesCountAggregateOutputType | null
    _min: EmployeesMinAggregateOutputType | null
    _max: EmployeesMaxAggregateOutputType | null
  }

  type GetEmployeesGroupByPayload<T extends employeesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EmployeesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EmployeesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EmployeesGroupByOutputType[P]>
            : GetScalarType<T[P], EmployeesGroupByOutputType[P]>
        }
      >
    >


  export type employeesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    department?: boolean
    position?: boolean
    status?: boolean
    join_date?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["employees"]>

  export type employeesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    department?: boolean
    position?: boolean
    status?: boolean
    join_date?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["employees"]>

  export type employeesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    department?: boolean
    position?: boolean
    status?: boolean
    join_date?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["employees"]>

  export type employeesSelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    department?: boolean
    position?: boolean
    status?: boolean
    join_date?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type employeesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "email" | "department" | "position" | "status" | "join_date" | "created_at" | "updated_at", ExtArgs["result"]["employees"]>

  export type $employeesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "employees"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      email: string
      department: string
      position: string
      status: string
      join_date: Date
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["employees"]>
    composites: {}
  }

  type employeesGetPayload<S extends boolean | null | undefined | employeesDefaultArgs> = $Result.GetResult<Prisma.$employeesPayload, S>

  type employeesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<employeesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EmployeesCountAggregateInputType | true
    }

  export interface employeesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['employees'], meta: { name: 'employees' } }
    /**
     * Find zero or one Employees that matches the filter.
     * @param {employeesFindUniqueArgs} args - Arguments to find a Employees
     * @example
     * // Get one Employees
     * const employees = await prisma.employees.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends employeesFindUniqueArgs>(args: SelectSubset<T, employeesFindUniqueArgs<ExtArgs>>): Prisma__employeesClient<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Employees that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {employeesFindUniqueOrThrowArgs} args - Arguments to find a Employees
     * @example
     * // Get one Employees
     * const employees = await prisma.employees.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends employeesFindUniqueOrThrowArgs>(args: SelectSubset<T, employeesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__employeesClient<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Employees that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employeesFindFirstArgs} args - Arguments to find a Employees
     * @example
     * // Get one Employees
     * const employees = await prisma.employees.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends employeesFindFirstArgs>(args?: SelectSubset<T, employeesFindFirstArgs<ExtArgs>>): Prisma__employeesClient<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Employees that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employeesFindFirstOrThrowArgs} args - Arguments to find a Employees
     * @example
     * // Get one Employees
     * const employees = await prisma.employees.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends employeesFindFirstOrThrowArgs>(args?: SelectSubset<T, employeesFindFirstOrThrowArgs<ExtArgs>>): Prisma__employeesClient<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Employees that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employeesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Employees
     * const employees = await prisma.employees.findMany()
     * 
     * // Get first 10 Employees
     * const employees = await prisma.employees.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const employeesWithIdOnly = await prisma.employees.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends employeesFindManyArgs>(args?: SelectSubset<T, employeesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Employees.
     * @param {employeesCreateArgs} args - Arguments to create a Employees.
     * @example
     * // Create one Employees
     * const Employees = await prisma.employees.create({
     *   data: {
     *     // ... data to create a Employees
     *   }
     * })
     * 
     */
    create<T extends employeesCreateArgs>(args: SelectSubset<T, employeesCreateArgs<ExtArgs>>): Prisma__employeesClient<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Employees.
     * @param {employeesCreateManyArgs} args - Arguments to create many Employees.
     * @example
     * // Create many Employees
     * const employees = await prisma.employees.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends employeesCreateManyArgs>(args?: SelectSubset<T, employeesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Employees and returns the data saved in the database.
     * @param {employeesCreateManyAndReturnArgs} args - Arguments to create many Employees.
     * @example
     * // Create many Employees
     * const employees = await prisma.employees.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Employees and only return the `id`
     * const employeesWithIdOnly = await prisma.employees.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends employeesCreateManyAndReturnArgs>(args?: SelectSubset<T, employeesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Employees.
     * @param {employeesDeleteArgs} args - Arguments to delete one Employees.
     * @example
     * // Delete one Employees
     * const Employees = await prisma.employees.delete({
     *   where: {
     *     // ... filter to delete one Employees
     *   }
     * })
     * 
     */
    delete<T extends employeesDeleteArgs>(args: SelectSubset<T, employeesDeleteArgs<ExtArgs>>): Prisma__employeesClient<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Employees.
     * @param {employeesUpdateArgs} args - Arguments to update one Employees.
     * @example
     * // Update one Employees
     * const employees = await prisma.employees.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends employeesUpdateArgs>(args: SelectSubset<T, employeesUpdateArgs<ExtArgs>>): Prisma__employeesClient<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Employees.
     * @param {employeesDeleteManyArgs} args - Arguments to filter Employees to delete.
     * @example
     * // Delete a few Employees
     * const { count } = await prisma.employees.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends employeesDeleteManyArgs>(args?: SelectSubset<T, employeesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Employees.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employeesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Employees
     * const employees = await prisma.employees.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends employeesUpdateManyArgs>(args: SelectSubset<T, employeesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Employees and returns the data updated in the database.
     * @param {employeesUpdateManyAndReturnArgs} args - Arguments to update many Employees.
     * @example
     * // Update many Employees
     * const employees = await prisma.employees.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Employees and only return the `id`
     * const employeesWithIdOnly = await prisma.employees.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends employeesUpdateManyAndReturnArgs>(args: SelectSubset<T, employeesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Employees.
     * @param {employeesUpsertArgs} args - Arguments to update or create a Employees.
     * @example
     * // Update or create a Employees
     * const employees = await prisma.employees.upsert({
     *   create: {
     *     // ... data to create a Employees
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Employees we want to update
     *   }
     * })
     */
    upsert<T extends employeesUpsertArgs>(args: SelectSubset<T, employeesUpsertArgs<ExtArgs>>): Prisma__employeesClient<$Result.GetResult<Prisma.$employeesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Employees.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employeesCountArgs} args - Arguments to filter Employees to count.
     * @example
     * // Count the number of Employees
     * const count = await prisma.employees.count({
     *   where: {
     *     // ... the filter for the Employees we want to count
     *   }
     * })
    **/
    count<T extends employeesCountArgs>(
      args?: Subset<T, employeesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EmployeesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Employees.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EmployeesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EmployeesAggregateArgs>(args: Subset<T, EmployeesAggregateArgs>): Prisma.PrismaPromise<GetEmployeesAggregateType<T>>

    /**
     * Group by Employees.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employeesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends employeesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: employeesGroupByArgs['orderBy'] }
        : { orderBy?: employeesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, employeesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmployeesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the employees model
   */
  readonly fields: employeesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for employees.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__employeesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the employees model
   */
  interface employeesFieldRefs {
    readonly id: FieldRef<"employees", 'String'>
    readonly name: FieldRef<"employees", 'String'>
    readonly email: FieldRef<"employees", 'String'>
    readonly department: FieldRef<"employees", 'String'>
    readonly position: FieldRef<"employees", 'String'>
    readonly status: FieldRef<"employees", 'String'>
    readonly join_date: FieldRef<"employees", 'DateTime'>
    readonly created_at: FieldRef<"employees", 'DateTime'>
    readonly updated_at: FieldRef<"employees", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * employees findUnique
   */
  export type employeesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employees
     */
    select?: employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employees
     */
    omit?: employeesOmit<ExtArgs> | null
    /**
     * Filter, which employees to fetch.
     */
    where: employeesWhereUniqueInput
  }

  /**
   * employees findUniqueOrThrow
   */
  export type employeesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employees
     */
    select?: employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employees
     */
    omit?: employeesOmit<ExtArgs> | null
    /**
     * Filter, which employees to fetch.
     */
    where: employeesWhereUniqueInput
  }

  /**
   * employees findFirst
   */
  export type employeesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employees
     */
    select?: employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employees
     */
    omit?: employeesOmit<ExtArgs> | null
    /**
     * Filter, which employees to fetch.
     */
    where?: employeesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of employees to fetch.
     */
    orderBy?: employeesOrderByWithRelationInput | employeesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for employees.
     */
    cursor?: employeesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` employees from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` employees.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of employees.
     */
    distinct?: EmployeesScalarFieldEnum | EmployeesScalarFieldEnum[]
  }

  /**
   * employees findFirstOrThrow
   */
  export type employeesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employees
     */
    select?: employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employees
     */
    omit?: employeesOmit<ExtArgs> | null
    /**
     * Filter, which employees to fetch.
     */
    where?: employeesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of employees to fetch.
     */
    orderBy?: employeesOrderByWithRelationInput | employeesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for employees.
     */
    cursor?: employeesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` employees from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` employees.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of employees.
     */
    distinct?: EmployeesScalarFieldEnum | EmployeesScalarFieldEnum[]
  }

  /**
   * employees findMany
   */
  export type employeesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employees
     */
    select?: employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employees
     */
    omit?: employeesOmit<ExtArgs> | null
    /**
     * Filter, which employees to fetch.
     */
    where?: employeesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of employees to fetch.
     */
    orderBy?: employeesOrderByWithRelationInput | employeesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing employees.
     */
    cursor?: employeesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` employees from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` employees.
     */
    skip?: number
    distinct?: EmployeesScalarFieldEnum | EmployeesScalarFieldEnum[]
  }

  /**
   * employees create
   */
  export type employeesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employees
     */
    select?: employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employees
     */
    omit?: employeesOmit<ExtArgs> | null
    /**
     * The data needed to create a employees.
     */
    data: XOR<employeesCreateInput, employeesUncheckedCreateInput>
  }

  /**
   * employees createMany
   */
  export type employeesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many employees.
     */
    data: employeesCreateManyInput | employeesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * employees createManyAndReturn
   */
  export type employeesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employees
     */
    select?: employeesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the employees
     */
    omit?: employeesOmit<ExtArgs> | null
    /**
     * The data used to create many employees.
     */
    data: employeesCreateManyInput | employeesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * employees update
   */
  export type employeesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employees
     */
    select?: employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employees
     */
    omit?: employeesOmit<ExtArgs> | null
    /**
     * The data needed to update a employees.
     */
    data: XOR<employeesUpdateInput, employeesUncheckedUpdateInput>
    /**
     * Choose, which employees to update.
     */
    where: employeesWhereUniqueInput
  }

  /**
   * employees updateMany
   */
  export type employeesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update employees.
     */
    data: XOR<employeesUpdateManyMutationInput, employeesUncheckedUpdateManyInput>
    /**
     * Filter which employees to update
     */
    where?: employeesWhereInput
    /**
     * Limit how many employees to update.
     */
    limit?: number
  }

  /**
   * employees updateManyAndReturn
   */
  export type employeesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employees
     */
    select?: employeesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the employees
     */
    omit?: employeesOmit<ExtArgs> | null
    /**
     * The data used to update employees.
     */
    data: XOR<employeesUpdateManyMutationInput, employeesUncheckedUpdateManyInput>
    /**
     * Filter which employees to update
     */
    where?: employeesWhereInput
    /**
     * Limit how many employees to update.
     */
    limit?: number
  }

  /**
   * employees upsert
   */
  export type employeesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employees
     */
    select?: employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employees
     */
    omit?: employeesOmit<ExtArgs> | null
    /**
     * The filter to search for the employees to update in case it exists.
     */
    where: employeesWhereUniqueInput
    /**
     * In case the employees found by the `where` argument doesn't exist, create a new employees with this data.
     */
    create: XOR<employeesCreateInput, employeesUncheckedCreateInput>
    /**
     * In case the employees was found with the provided `where` argument, update it with this data.
     */
    update: XOR<employeesUpdateInput, employeesUncheckedUpdateInput>
  }

  /**
   * employees delete
   */
  export type employeesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employees
     */
    select?: employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employees
     */
    omit?: employeesOmit<ExtArgs> | null
    /**
     * Filter which employees to delete.
     */
    where: employeesWhereUniqueInput
  }

  /**
   * employees deleteMany
   */
  export type employeesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which employees to delete
     */
    where?: employeesWhereInput
    /**
     * Limit how many employees to delete.
     */
    limit?: number
  }

  /**
   * employees without action
   */
  export type employeesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employees
     */
    select?: employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employees
     */
    omit?: employeesOmit<ExtArgs> | null
  }


  /**
   * Model employment_info
   */

  export type AggregateEmployment_info = {
    _count: Employment_infoCountAggregateOutputType | null
    _avg: Employment_infoAvgAggregateOutputType | null
    _sum: Employment_infoSumAggregateOutputType | null
    _min: Employment_infoMinAggregateOutputType | null
    _max: Employment_infoMaxAggregateOutputType | null
  }

  export type Employment_infoAvgAggregateOutputType = {
    id: number | null
  }

  export type Employment_infoSumAggregateOutputType = {
    id: number | null
  }

  export type Employment_infoMinAggregateOutputType = {
    id: number | null
    registration_id: string | null
    employment_id_no: string | null
    service_no: string | null
    file_no: string | null
    rank_position: string | null
    department: string | null
    organization: string | null
    employment_type: string | null
    probation_period: string | null
    work_location: string | null
    date_of_first_appointment: Date | null
    gl: string | null
    step: string | null
    salary_structure: string | null
    cadre: string | null
    name_of_bank: string | null
    account_number: string | null
    pfa_name: string | null
    rsapin: string | null
    educational_background: string | null
    certifications: string | null
  }

  export type Employment_infoMaxAggregateOutputType = {
    id: number | null
    registration_id: string | null
    employment_id_no: string | null
    service_no: string | null
    file_no: string | null
    rank_position: string | null
    department: string | null
    organization: string | null
    employment_type: string | null
    probation_period: string | null
    work_location: string | null
    date_of_first_appointment: Date | null
    gl: string | null
    step: string | null
    salary_structure: string | null
    cadre: string | null
    name_of_bank: string | null
    account_number: string | null
    pfa_name: string | null
    rsapin: string | null
    educational_background: string | null
    certifications: string | null
  }

  export type Employment_infoCountAggregateOutputType = {
    id: number
    registration_id: number
    employment_id_no: number
    service_no: number
    file_no: number
    rank_position: number
    department: number
    organization: number
    employment_type: number
    probation_period: number
    work_location: number
    date_of_first_appointment: number
    gl: number
    step: number
    salary_structure: number
    cadre: number
    name_of_bank: number
    account_number: number
    pfa_name: number
    rsapin: number
    educational_background: number
    certifications: number
    _all: number
  }


  export type Employment_infoAvgAggregateInputType = {
    id?: true
  }

  export type Employment_infoSumAggregateInputType = {
    id?: true
  }

  export type Employment_infoMinAggregateInputType = {
    id?: true
    registration_id?: true
    employment_id_no?: true
    service_no?: true
    file_no?: true
    rank_position?: true
    department?: true
    organization?: true
    employment_type?: true
    probation_period?: true
    work_location?: true
    date_of_first_appointment?: true
    gl?: true
    step?: true
    salary_structure?: true
    cadre?: true
    name_of_bank?: true
    account_number?: true
    pfa_name?: true
    rsapin?: true
    educational_background?: true
    certifications?: true
  }

  export type Employment_infoMaxAggregateInputType = {
    id?: true
    registration_id?: true
    employment_id_no?: true
    service_no?: true
    file_no?: true
    rank_position?: true
    department?: true
    organization?: true
    employment_type?: true
    probation_period?: true
    work_location?: true
    date_of_first_appointment?: true
    gl?: true
    step?: true
    salary_structure?: true
    cadre?: true
    name_of_bank?: true
    account_number?: true
    pfa_name?: true
    rsapin?: true
    educational_background?: true
    certifications?: true
  }

  export type Employment_infoCountAggregateInputType = {
    id?: true
    registration_id?: true
    employment_id_no?: true
    service_no?: true
    file_no?: true
    rank_position?: true
    department?: true
    organization?: true
    employment_type?: true
    probation_period?: true
    work_location?: true
    date_of_first_appointment?: true
    gl?: true
    step?: true
    salary_structure?: true
    cadre?: true
    name_of_bank?: true
    account_number?: true
    pfa_name?: true
    rsapin?: true
    educational_background?: true
    certifications?: true
    _all?: true
  }

  export type Employment_infoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which employment_info to aggregate.
     */
    where?: employment_infoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of employment_infos to fetch.
     */
    orderBy?: employment_infoOrderByWithRelationInput | employment_infoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: employment_infoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` employment_infos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` employment_infos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned employment_infos
    **/
    _count?: true | Employment_infoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Employment_infoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Employment_infoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Employment_infoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Employment_infoMaxAggregateInputType
  }

  export type GetEmployment_infoAggregateType<T extends Employment_infoAggregateArgs> = {
        [P in keyof T & keyof AggregateEmployment_info]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmployment_info[P]>
      : GetScalarType<T[P], AggregateEmployment_info[P]>
  }




  export type employment_infoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: employment_infoWhereInput
    orderBy?: employment_infoOrderByWithAggregationInput | employment_infoOrderByWithAggregationInput[]
    by: Employment_infoScalarFieldEnum[] | Employment_infoScalarFieldEnum
    having?: employment_infoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Employment_infoCountAggregateInputType | true
    _avg?: Employment_infoAvgAggregateInputType
    _sum?: Employment_infoSumAggregateInputType
    _min?: Employment_infoMinAggregateInputType
    _max?: Employment_infoMaxAggregateInputType
  }

  export type Employment_infoGroupByOutputType = {
    id: number
    registration_id: string
    employment_id_no: string
    service_no: string
    file_no: string
    rank_position: string
    department: string
    organization: string
    employment_type: string
    probation_period: string
    work_location: string
    date_of_first_appointment: Date
    gl: string
    step: string
    salary_structure: string
    cadre: string
    name_of_bank: string
    account_number: string
    pfa_name: string
    rsapin: string
    educational_background: string | null
    certifications: string | null
    _count: Employment_infoCountAggregateOutputType | null
    _avg: Employment_infoAvgAggregateOutputType | null
    _sum: Employment_infoSumAggregateOutputType | null
    _min: Employment_infoMinAggregateOutputType | null
    _max: Employment_infoMaxAggregateOutputType | null
  }

  type GetEmployment_infoGroupByPayload<T extends employment_infoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Employment_infoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Employment_infoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Employment_infoGroupByOutputType[P]>
            : GetScalarType<T[P], Employment_infoGroupByOutputType[P]>
        }
      >
    >


  export type employment_infoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    registration_id?: boolean
    employment_id_no?: boolean
    service_no?: boolean
    file_no?: boolean
    rank_position?: boolean
    department?: boolean
    organization?: boolean
    employment_type?: boolean
    probation_period?: boolean
    work_location?: boolean
    date_of_first_appointment?: boolean
    gl?: boolean
    step?: boolean
    salary_structure?: boolean
    cadre?: boolean
    name_of_bank?: boolean
    account_number?: boolean
    pfa_name?: boolean
    rsapin?: boolean
    educational_background?: boolean
    certifications?: boolean
    registrations?: boolean | registrationsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["employment_info"]>

  export type employment_infoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    registration_id?: boolean
    employment_id_no?: boolean
    service_no?: boolean
    file_no?: boolean
    rank_position?: boolean
    department?: boolean
    organization?: boolean
    employment_type?: boolean
    probation_period?: boolean
    work_location?: boolean
    date_of_first_appointment?: boolean
    gl?: boolean
    step?: boolean
    salary_structure?: boolean
    cadre?: boolean
    name_of_bank?: boolean
    account_number?: boolean
    pfa_name?: boolean
    rsapin?: boolean
    educational_background?: boolean
    certifications?: boolean
    registrations?: boolean | registrationsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["employment_info"]>

  export type employment_infoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    registration_id?: boolean
    employment_id_no?: boolean
    service_no?: boolean
    file_no?: boolean
    rank_position?: boolean
    department?: boolean
    organization?: boolean
    employment_type?: boolean
    probation_period?: boolean
    work_location?: boolean
    date_of_first_appointment?: boolean
    gl?: boolean
    step?: boolean
    salary_structure?: boolean
    cadre?: boolean
    name_of_bank?: boolean
    account_number?: boolean
    pfa_name?: boolean
    rsapin?: boolean
    educational_background?: boolean
    certifications?: boolean
    registrations?: boolean | registrationsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["employment_info"]>

  export type employment_infoSelectScalar = {
    id?: boolean
    registration_id?: boolean
    employment_id_no?: boolean
    service_no?: boolean
    file_no?: boolean
    rank_position?: boolean
    department?: boolean
    organization?: boolean
    employment_type?: boolean
    probation_period?: boolean
    work_location?: boolean
    date_of_first_appointment?: boolean
    gl?: boolean
    step?: boolean
    salary_structure?: boolean
    cadre?: boolean
    name_of_bank?: boolean
    account_number?: boolean
    pfa_name?: boolean
    rsapin?: boolean
    educational_background?: boolean
    certifications?: boolean
  }

  export type employment_infoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "registration_id" | "employment_id_no" | "service_no" | "file_no" | "rank_position" | "department" | "organization" | "employment_type" | "probation_period" | "work_location" | "date_of_first_appointment" | "gl" | "step" | "salary_structure" | "cadre" | "name_of_bank" | "account_number" | "pfa_name" | "rsapin" | "educational_background" | "certifications", ExtArgs["result"]["employment_info"]>
  export type employment_infoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registrations?: boolean | registrationsDefaultArgs<ExtArgs>
  }
  export type employment_infoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registrations?: boolean | registrationsDefaultArgs<ExtArgs>
  }
  export type employment_infoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registrations?: boolean | registrationsDefaultArgs<ExtArgs>
  }

  export type $employment_infoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "employment_info"
    objects: {
      registrations: Prisma.$registrationsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      registration_id: string
      employment_id_no: string
      service_no: string
      file_no: string
      rank_position: string
      department: string
      organization: string
      employment_type: string
      probation_period: string
      work_location: string
      date_of_first_appointment: Date
      gl: string
      step: string
      salary_structure: string
      cadre: string
      name_of_bank: string
      account_number: string
      pfa_name: string
      rsapin: string
      educational_background: string | null
      certifications: string | null
    }, ExtArgs["result"]["employment_info"]>
    composites: {}
  }

  type employment_infoGetPayload<S extends boolean | null | undefined | employment_infoDefaultArgs> = $Result.GetResult<Prisma.$employment_infoPayload, S>

  type employment_infoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<employment_infoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Employment_infoCountAggregateInputType | true
    }

  export interface employment_infoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['employment_info'], meta: { name: 'employment_info' } }
    /**
     * Find zero or one Employment_info that matches the filter.
     * @param {employment_infoFindUniqueArgs} args - Arguments to find a Employment_info
     * @example
     * // Get one Employment_info
     * const employment_info = await prisma.employment_info.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends employment_infoFindUniqueArgs>(args: SelectSubset<T, employment_infoFindUniqueArgs<ExtArgs>>): Prisma__employment_infoClient<$Result.GetResult<Prisma.$employment_infoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Employment_info that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {employment_infoFindUniqueOrThrowArgs} args - Arguments to find a Employment_info
     * @example
     * // Get one Employment_info
     * const employment_info = await prisma.employment_info.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends employment_infoFindUniqueOrThrowArgs>(args: SelectSubset<T, employment_infoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__employment_infoClient<$Result.GetResult<Prisma.$employment_infoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Employment_info that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employment_infoFindFirstArgs} args - Arguments to find a Employment_info
     * @example
     * // Get one Employment_info
     * const employment_info = await prisma.employment_info.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends employment_infoFindFirstArgs>(args?: SelectSubset<T, employment_infoFindFirstArgs<ExtArgs>>): Prisma__employment_infoClient<$Result.GetResult<Prisma.$employment_infoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Employment_info that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employment_infoFindFirstOrThrowArgs} args - Arguments to find a Employment_info
     * @example
     * // Get one Employment_info
     * const employment_info = await prisma.employment_info.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends employment_infoFindFirstOrThrowArgs>(args?: SelectSubset<T, employment_infoFindFirstOrThrowArgs<ExtArgs>>): Prisma__employment_infoClient<$Result.GetResult<Prisma.$employment_infoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Employment_infos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employment_infoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Employment_infos
     * const employment_infos = await prisma.employment_info.findMany()
     * 
     * // Get first 10 Employment_infos
     * const employment_infos = await prisma.employment_info.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const employment_infoWithIdOnly = await prisma.employment_info.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends employment_infoFindManyArgs>(args?: SelectSubset<T, employment_infoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$employment_infoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Employment_info.
     * @param {employment_infoCreateArgs} args - Arguments to create a Employment_info.
     * @example
     * // Create one Employment_info
     * const Employment_info = await prisma.employment_info.create({
     *   data: {
     *     // ... data to create a Employment_info
     *   }
     * })
     * 
     */
    create<T extends employment_infoCreateArgs>(args: SelectSubset<T, employment_infoCreateArgs<ExtArgs>>): Prisma__employment_infoClient<$Result.GetResult<Prisma.$employment_infoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Employment_infos.
     * @param {employment_infoCreateManyArgs} args - Arguments to create many Employment_infos.
     * @example
     * // Create many Employment_infos
     * const employment_info = await prisma.employment_info.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends employment_infoCreateManyArgs>(args?: SelectSubset<T, employment_infoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Employment_infos and returns the data saved in the database.
     * @param {employment_infoCreateManyAndReturnArgs} args - Arguments to create many Employment_infos.
     * @example
     * // Create many Employment_infos
     * const employment_info = await prisma.employment_info.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Employment_infos and only return the `id`
     * const employment_infoWithIdOnly = await prisma.employment_info.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends employment_infoCreateManyAndReturnArgs>(args?: SelectSubset<T, employment_infoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$employment_infoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Employment_info.
     * @param {employment_infoDeleteArgs} args - Arguments to delete one Employment_info.
     * @example
     * // Delete one Employment_info
     * const Employment_info = await prisma.employment_info.delete({
     *   where: {
     *     // ... filter to delete one Employment_info
     *   }
     * })
     * 
     */
    delete<T extends employment_infoDeleteArgs>(args: SelectSubset<T, employment_infoDeleteArgs<ExtArgs>>): Prisma__employment_infoClient<$Result.GetResult<Prisma.$employment_infoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Employment_info.
     * @param {employment_infoUpdateArgs} args - Arguments to update one Employment_info.
     * @example
     * // Update one Employment_info
     * const employment_info = await prisma.employment_info.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends employment_infoUpdateArgs>(args: SelectSubset<T, employment_infoUpdateArgs<ExtArgs>>): Prisma__employment_infoClient<$Result.GetResult<Prisma.$employment_infoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Employment_infos.
     * @param {employment_infoDeleteManyArgs} args - Arguments to filter Employment_infos to delete.
     * @example
     * // Delete a few Employment_infos
     * const { count } = await prisma.employment_info.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends employment_infoDeleteManyArgs>(args?: SelectSubset<T, employment_infoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Employment_infos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employment_infoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Employment_infos
     * const employment_info = await prisma.employment_info.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends employment_infoUpdateManyArgs>(args: SelectSubset<T, employment_infoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Employment_infos and returns the data updated in the database.
     * @param {employment_infoUpdateManyAndReturnArgs} args - Arguments to update many Employment_infos.
     * @example
     * // Update many Employment_infos
     * const employment_info = await prisma.employment_info.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Employment_infos and only return the `id`
     * const employment_infoWithIdOnly = await prisma.employment_info.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends employment_infoUpdateManyAndReturnArgs>(args: SelectSubset<T, employment_infoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$employment_infoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Employment_info.
     * @param {employment_infoUpsertArgs} args - Arguments to update or create a Employment_info.
     * @example
     * // Update or create a Employment_info
     * const employment_info = await prisma.employment_info.upsert({
     *   create: {
     *     // ... data to create a Employment_info
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Employment_info we want to update
     *   }
     * })
     */
    upsert<T extends employment_infoUpsertArgs>(args: SelectSubset<T, employment_infoUpsertArgs<ExtArgs>>): Prisma__employment_infoClient<$Result.GetResult<Prisma.$employment_infoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Employment_infos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employment_infoCountArgs} args - Arguments to filter Employment_infos to count.
     * @example
     * // Count the number of Employment_infos
     * const count = await prisma.employment_info.count({
     *   where: {
     *     // ... the filter for the Employment_infos we want to count
     *   }
     * })
    **/
    count<T extends employment_infoCountArgs>(
      args?: Subset<T, employment_infoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Employment_infoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Employment_info.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Employment_infoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Employment_infoAggregateArgs>(args: Subset<T, Employment_infoAggregateArgs>): Prisma.PrismaPromise<GetEmployment_infoAggregateType<T>>

    /**
     * Group by Employment_info.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employment_infoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends employment_infoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: employment_infoGroupByArgs['orderBy'] }
        : { orderBy?: employment_infoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, employment_infoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmployment_infoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the employment_info model
   */
  readonly fields: employment_infoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for employment_info.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__employment_infoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    registrations<T extends registrationsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, registrationsDefaultArgs<ExtArgs>>): Prisma__registrationsClient<$Result.GetResult<Prisma.$registrationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the employment_info model
   */
  interface employment_infoFieldRefs {
    readonly id: FieldRef<"employment_info", 'Int'>
    readonly registration_id: FieldRef<"employment_info", 'String'>
    readonly employment_id_no: FieldRef<"employment_info", 'String'>
    readonly service_no: FieldRef<"employment_info", 'String'>
    readonly file_no: FieldRef<"employment_info", 'String'>
    readonly rank_position: FieldRef<"employment_info", 'String'>
    readonly department: FieldRef<"employment_info", 'String'>
    readonly organization: FieldRef<"employment_info", 'String'>
    readonly employment_type: FieldRef<"employment_info", 'String'>
    readonly probation_period: FieldRef<"employment_info", 'String'>
    readonly work_location: FieldRef<"employment_info", 'String'>
    readonly date_of_first_appointment: FieldRef<"employment_info", 'DateTime'>
    readonly gl: FieldRef<"employment_info", 'String'>
    readonly step: FieldRef<"employment_info", 'String'>
    readonly salary_structure: FieldRef<"employment_info", 'String'>
    readonly cadre: FieldRef<"employment_info", 'String'>
    readonly name_of_bank: FieldRef<"employment_info", 'String'>
    readonly account_number: FieldRef<"employment_info", 'String'>
    readonly pfa_name: FieldRef<"employment_info", 'String'>
    readonly rsapin: FieldRef<"employment_info", 'String'>
    readonly educational_background: FieldRef<"employment_info", 'String'>
    readonly certifications: FieldRef<"employment_info", 'String'>
  }
    

  // Custom InputTypes
  /**
   * employment_info findUnique
   */
  export type employment_infoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employment_info
     */
    select?: employment_infoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employment_info
     */
    omit?: employment_infoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employment_infoInclude<ExtArgs> | null
    /**
     * Filter, which employment_info to fetch.
     */
    where: employment_infoWhereUniqueInput
  }

  /**
   * employment_info findUniqueOrThrow
   */
  export type employment_infoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employment_info
     */
    select?: employment_infoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employment_info
     */
    omit?: employment_infoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employment_infoInclude<ExtArgs> | null
    /**
     * Filter, which employment_info to fetch.
     */
    where: employment_infoWhereUniqueInput
  }

  /**
   * employment_info findFirst
   */
  export type employment_infoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employment_info
     */
    select?: employment_infoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employment_info
     */
    omit?: employment_infoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employment_infoInclude<ExtArgs> | null
    /**
     * Filter, which employment_info to fetch.
     */
    where?: employment_infoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of employment_infos to fetch.
     */
    orderBy?: employment_infoOrderByWithRelationInput | employment_infoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for employment_infos.
     */
    cursor?: employment_infoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` employment_infos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` employment_infos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of employment_infos.
     */
    distinct?: Employment_infoScalarFieldEnum | Employment_infoScalarFieldEnum[]
  }

  /**
   * employment_info findFirstOrThrow
   */
  export type employment_infoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employment_info
     */
    select?: employment_infoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employment_info
     */
    omit?: employment_infoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employment_infoInclude<ExtArgs> | null
    /**
     * Filter, which employment_info to fetch.
     */
    where?: employment_infoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of employment_infos to fetch.
     */
    orderBy?: employment_infoOrderByWithRelationInput | employment_infoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for employment_infos.
     */
    cursor?: employment_infoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` employment_infos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` employment_infos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of employment_infos.
     */
    distinct?: Employment_infoScalarFieldEnum | Employment_infoScalarFieldEnum[]
  }

  /**
   * employment_info findMany
   */
  export type employment_infoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employment_info
     */
    select?: employment_infoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employment_info
     */
    omit?: employment_infoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employment_infoInclude<ExtArgs> | null
    /**
     * Filter, which employment_infos to fetch.
     */
    where?: employment_infoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of employment_infos to fetch.
     */
    orderBy?: employment_infoOrderByWithRelationInput | employment_infoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing employment_infos.
     */
    cursor?: employment_infoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` employment_infos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` employment_infos.
     */
    skip?: number
    distinct?: Employment_infoScalarFieldEnum | Employment_infoScalarFieldEnum[]
  }

  /**
   * employment_info create
   */
  export type employment_infoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employment_info
     */
    select?: employment_infoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employment_info
     */
    omit?: employment_infoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employment_infoInclude<ExtArgs> | null
    /**
     * The data needed to create a employment_info.
     */
    data: XOR<employment_infoCreateInput, employment_infoUncheckedCreateInput>
  }

  /**
   * employment_info createMany
   */
  export type employment_infoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many employment_infos.
     */
    data: employment_infoCreateManyInput | employment_infoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * employment_info createManyAndReturn
   */
  export type employment_infoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employment_info
     */
    select?: employment_infoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the employment_info
     */
    omit?: employment_infoOmit<ExtArgs> | null
    /**
     * The data used to create many employment_infos.
     */
    data: employment_infoCreateManyInput | employment_infoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employment_infoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * employment_info update
   */
  export type employment_infoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employment_info
     */
    select?: employment_infoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employment_info
     */
    omit?: employment_infoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employment_infoInclude<ExtArgs> | null
    /**
     * The data needed to update a employment_info.
     */
    data: XOR<employment_infoUpdateInput, employment_infoUncheckedUpdateInput>
    /**
     * Choose, which employment_info to update.
     */
    where: employment_infoWhereUniqueInput
  }

  /**
   * employment_info updateMany
   */
  export type employment_infoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update employment_infos.
     */
    data: XOR<employment_infoUpdateManyMutationInput, employment_infoUncheckedUpdateManyInput>
    /**
     * Filter which employment_infos to update
     */
    where?: employment_infoWhereInput
    /**
     * Limit how many employment_infos to update.
     */
    limit?: number
  }

  /**
   * employment_info updateManyAndReturn
   */
  export type employment_infoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employment_info
     */
    select?: employment_infoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the employment_info
     */
    omit?: employment_infoOmit<ExtArgs> | null
    /**
     * The data used to update employment_infos.
     */
    data: XOR<employment_infoUpdateManyMutationInput, employment_infoUncheckedUpdateManyInput>
    /**
     * Filter which employment_infos to update
     */
    where?: employment_infoWhereInput
    /**
     * Limit how many employment_infos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employment_infoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * employment_info upsert
   */
  export type employment_infoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employment_info
     */
    select?: employment_infoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employment_info
     */
    omit?: employment_infoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employment_infoInclude<ExtArgs> | null
    /**
     * The filter to search for the employment_info to update in case it exists.
     */
    where: employment_infoWhereUniqueInput
    /**
     * In case the employment_info found by the `where` argument doesn't exist, create a new employment_info with this data.
     */
    create: XOR<employment_infoCreateInput, employment_infoUncheckedCreateInput>
    /**
     * In case the employment_info was found with the provided `where` argument, update it with this data.
     */
    update: XOR<employment_infoUpdateInput, employment_infoUncheckedUpdateInput>
  }

  /**
   * employment_info delete
   */
  export type employment_infoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employment_info
     */
    select?: employment_infoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employment_info
     */
    omit?: employment_infoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employment_infoInclude<ExtArgs> | null
    /**
     * Filter which employment_info to delete.
     */
    where: employment_infoWhereUniqueInput
  }

  /**
   * employment_info deleteMany
   */
  export type employment_infoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which employment_infos to delete
     */
    where?: employment_infoWhereInput
    /**
     * Limit how many employment_infos to delete.
     */
    limit?: number
  }

  /**
   * employment_info without action
   */
  export type employment_infoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employment_info
     */
    select?: employment_infoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employment_info
     */
    omit?: employment_infoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employment_infoInclude<ExtArgs> | null
  }


  /**
   * Model password_reset_tokens
   */

  export type AggregatePassword_reset_tokens = {
    _count: Password_reset_tokensCountAggregateOutputType | null
    _avg: Password_reset_tokensAvgAggregateOutputType | null
    _sum: Password_reset_tokensSumAggregateOutputType | null
    _min: Password_reset_tokensMinAggregateOutputType | null
    _max: Password_reset_tokensMaxAggregateOutputType | null
  }

  export type Password_reset_tokensAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
  }

  export type Password_reset_tokensSumAggregateOutputType = {
    id: number | null
    user_id: number | null
  }

  export type Password_reset_tokensMinAggregateOutputType = {
    id: number | null
    user_id: number | null
    token: string | null
    expires_at: Date | null
    created_at: Date | null
  }

  export type Password_reset_tokensMaxAggregateOutputType = {
    id: number | null
    user_id: number | null
    token: string | null
    expires_at: Date | null
    created_at: Date | null
  }

  export type Password_reset_tokensCountAggregateOutputType = {
    id: number
    user_id: number
    token: number
    expires_at: number
    created_at: number
    _all: number
  }


  export type Password_reset_tokensAvgAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type Password_reset_tokensSumAggregateInputType = {
    id?: true
    user_id?: true
  }

  export type Password_reset_tokensMinAggregateInputType = {
    id?: true
    user_id?: true
    token?: true
    expires_at?: true
    created_at?: true
  }

  export type Password_reset_tokensMaxAggregateInputType = {
    id?: true
    user_id?: true
    token?: true
    expires_at?: true
    created_at?: true
  }

  export type Password_reset_tokensCountAggregateInputType = {
    id?: true
    user_id?: true
    token?: true
    expires_at?: true
    created_at?: true
    _all?: true
  }

  export type Password_reset_tokensAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which password_reset_tokens to aggregate.
     */
    where?: password_reset_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of password_reset_tokens to fetch.
     */
    orderBy?: password_reset_tokensOrderByWithRelationInput | password_reset_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: password_reset_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` password_reset_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` password_reset_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned password_reset_tokens
    **/
    _count?: true | Password_reset_tokensCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Password_reset_tokensAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Password_reset_tokensSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Password_reset_tokensMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Password_reset_tokensMaxAggregateInputType
  }

  export type GetPassword_reset_tokensAggregateType<T extends Password_reset_tokensAggregateArgs> = {
        [P in keyof T & keyof AggregatePassword_reset_tokens]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePassword_reset_tokens[P]>
      : GetScalarType<T[P], AggregatePassword_reset_tokens[P]>
  }




  export type password_reset_tokensGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: password_reset_tokensWhereInput
    orderBy?: password_reset_tokensOrderByWithAggregationInput | password_reset_tokensOrderByWithAggregationInput[]
    by: Password_reset_tokensScalarFieldEnum[] | Password_reset_tokensScalarFieldEnum
    having?: password_reset_tokensScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Password_reset_tokensCountAggregateInputType | true
    _avg?: Password_reset_tokensAvgAggregateInputType
    _sum?: Password_reset_tokensSumAggregateInputType
    _min?: Password_reset_tokensMinAggregateInputType
    _max?: Password_reset_tokensMaxAggregateInputType
  }

  export type Password_reset_tokensGroupByOutputType = {
    id: number
    user_id: number
    token: string
    expires_at: Date
    created_at: Date
    _count: Password_reset_tokensCountAggregateOutputType | null
    _avg: Password_reset_tokensAvgAggregateOutputType | null
    _sum: Password_reset_tokensSumAggregateOutputType | null
    _min: Password_reset_tokensMinAggregateOutputType | null
    _max: Password_reset_tokensMaxAggregateOutputType | null
  }

  type GetPassword_reset_tokensGroupByPayload<T extends password_reset_tokensGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Password_reset_tokensGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Password_reset_tokensGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Password_reset_tokensGroupByOutputType[P]>
            : GetScalarType<T[P], Password_reset_tokensGroupByOutputType[P]>
        }
      >
    >


  export type password_reset_tokensSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    token?: boolean
    expires_at?: boolean
    created_at?: boolean
    admin_users?: boolean | admin_usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["password_reset_tokens"]>

  export type password_reset_tokensSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    token?: boolean
    expires_at?: boolean
    created_at?: boolean
    admin_users?: boolean | admin_usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["password_reset_tokens"]>

  export type password_reset_tokensSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    token?: boolean
    expires_at?: boolean
    created_at?: boolean
    admin_users?: boolean | admin_usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["password_reset_tokens"]>

  export type password_reset_tokensSelectScalar = {
    id?: boolean
    user_id?: boolean
    token?: boolean
    expires_at?: boolean
    created_at?: boolean
  }

  export type password_reset_tokensOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "token" | "expires_at" | "created_at", ExtArgs["result"]["password_reset_tokens"]>
  export type password_reset_tokensInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin_users?: boolean | admin_usersDefaultArgs<ExtArgs>
  }
  export type password_reset_tokensIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin_users?: boolean | admin_usersDefaultArgs<ExtArgs>
  }
  export type password_reset_tokensIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    admin_users?: boolean | admin_usersDefaultArgs<ExtArgs>
  }

  export type $password_reset_tokensPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "password_reset_tokens"
    objects: {
      admin_users: Prisma.$admin_usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      user_id: number
      token: string
      expires_at: Date
      created_at: Date
    }, ExtArgs["result"]["password_reset_tokens"]>
    composites: {}
  }

  type password_reset_tokensGetPayload<S extends boolean | null | undefined | password_reset_tokensDefaultArgs> = $Result.GetResult<Prisma.$password_reset_tokensPayload, S>

  type password_reset_tokensCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<password_reset_tokensFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Password_reset_tokensCountAggregateInputType | true
    }

  export interface password_reset_tokensDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['password_reset_tokens'], meta: { name: 'password_reset_tokens' } }
    /**
     * Find zero or one Password_reset_tokens that matches the filter.
     * @param {password_reset_tokensFindUniqueArgs} args - Arguments to find a Password_reset_tokens
     * @example
     * // Get one Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends password_reset_tokensFindUniqueArgs>(args: SelectSubset<T, password_reset_tokensFindUniqueArgs<ExtArgs>>): Prisma__password_reset_tokensClient<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Password_reset_tokens that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {password_reset_tokensFindUniqueOrThrowArgs} args - Arguments to find a Password_reset_tokens
     * @example
     * // Get one Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends password_reset_tokensFindUniqueOrThrowArgs>(args: SelectSubset<T, password_reset_tokensFindUniqueOrThrowArgs<ExtArgs>>): Prisma__password_reset_tokensClient<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Password_reset_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {password_reset_tokensFindFirstArgs} args - Arguments to find a Password_reset_tokens
     * @example
     * // Get one Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends password_reset_tokensFindFirstArgs>(args?: SelectSubset<T, password_reset_tokensFindFirstArgs<ExtArgs>>): Prisma__password_reset_tokensClient<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Password_reset_tokens that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {password_reset_tokensFindFirstOrThrowArgs} args - Arguments to find a Password_reset_tokens
     * @example
     * // Get one Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends password_reset_tokensFindFirstOrThrowArgs>(args?: SelectSubset<T, password_reset_tokensFindFirstOrThrowArgs<ExtArgs>>): Prisma__password_reset_tokensClient<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Password_reset_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {password_reset_tokensFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.findMany()
     * 
     * // Get first 10 Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const password_reset_tokensWithIdOnly = await prisma.password_reset_tokens.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends password_reset_tokensFindManyArgs>(args?: SelectSubset<T, password_reset_tokensFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Password_reset_tokens.
     * @param {password_reset_tokensCreateArgs} args - Arguments to create a Password_reset_tokens.
     * @example
     * // Create one Password_reset_tokens
     * const Password_reset_tokens = await prisma.password_reset_tokens.create({
     *   data: {
     *     // ... data to create a Password_reset_tokens
     *   }
     * })
     * 
     */
    create<T extends password_reset_tokensCreateArgs>(args: SelectSubset<T, password_reset_tokensCreateArgs<ExtArgs>>): Prisma__password_reset_tokensClient<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Password_reset_tokens.
     * @param {password_reset_tokensCreateManyArgs} args - Arguments to create many Password_reset_tokens.
     * @example
     * // Create many Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends password_reset_tokensCreateManyArgs>(args?: SelectSubset<T, password_reset_tokensCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Password_reset_tokens and returns the data saved in the database.
     * @param {password_reset_tokensCreateManyAndReturnArgs} args - Arguments to create many Password_reset_tokens.
     * @example
     * // Create many Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Password_reset_tokens and only return the `id`
     * const password_reset_tokensWithIdOnly = await prisma.password_reset_tokens.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends password_reset_tokensCreateManyAndReturnArgs>(args?: SelectSubset<T, password_reset_tokensCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Password_reset_tokens.
     * @param {password_reset_tokensDeleteArgs} args - Arguments to delete one Password_reset_tokens.
     * @example
     * // Delete one Password_reset_tokens
     * const Password_reset_tokens = await prisma.password_reset_tokens.delete({
     *   where: {
     *     // ... filter to delete one Password_reset_tokens
     *   }
     * })
     * 
     */
    delete<T extends password_reset_tokensDeleteArgs>(args: SelectSubset<T, password_reset_tokensDeleteArgs<ExtArgs>>): Prisma__password_reset_tokensClient<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Password_reset_tokens.
     * @param {password_reset_tokensUpdateArgs} args - Arguments to update one Password_reset_tokens.
     * @example
     * // Update one Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends password_reset_tokensUpdateArgs>(args: SelectSubset<T, password_reset_tokensUpdateArgs<ExtArgs>>): Prisma__password_reset_tokensClient<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Password_reset_tokens.
     * @param {password_reset_tokensDeleteManyArgs} args - Arguments to filter Password_reset_tokens to delete.
     * @example
     * // Delete a few Password_reset_tokens
     * const { count } = await prisma.password_reset_tokens.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends password_reset_tokensDeleteManyArgs>(args?: SelectSubset<T, password_reset_tokensDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Password_reset_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {password_reset_tokensUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends password_reset_tokensUpdateManyArgs>(args: SelectSubset<T, password_reset_tokensUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Password_reset_tokens and returns the data updated in the database.
     * @param {password_reset_tokensUpdateManyAndReturnArgs} args - Arguments to update many Password_reset_tokens.
     * @example
     * // Update many Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Password_reset_tokens and only return the `id`
     * const password_reset_tokensWithIdOnly = await prisma.password_reset_tokens.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends password_reset_tokensUpdateManyAndReturnArgs>(args: SelectSubset<T, password_reset_tokensUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Password_reset_tokens.
     * @param {password_reset_tokensUpsertArgs} args - Arguments to update or create a Password_reset_tokens.
     * @example
     * // Update or create a Password_reset_tokens
     * const password_reset_tokens = await prisma.password_reset_tokens.upsert({
     *   create: {
     *     // ... data to create a Password_reset_tokens
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Password_reset_tokens we want to update
     *   }
     * })
     */
    upsert<T extends password_reset_tokensUpsertArgs>(args: SelectSubset<T, password_reset_tokensUpsertArgs<ExtArgs>>): Prisma__password_reset_tokensClient<$Result.GetResult<Prisma.$password_reset_tokensPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Password_reset_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {password_reset_tokensCountArgs} args - Arguments to filter Password_reset_tokens to count.
     * @example
     * // Count the number of Password_reset_tokens
     * const count = await prisma.password_reset_tokens.count({
     *   where: {
     *     // ... the filter for the Password_reset_tokens we want to count
     *   }
     * })
    **/
    count<T extends password_reset_tokensCountArgs>(
      args?: Subset<T, password_reset_tokensCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Password_reset_tokensCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Password_reset_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Password_reset_tokensAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Password_reset_tokensAggregateArgs>(args: Subset<T, Password_reset_tokensAggregateArgs>): Prisma.PrismaPromise<GetPassword_reset_tokensAggregateType<T>>

    /**
     * Group by Password_reset_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {password_reset_tokensGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends password_reset_tokensGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: password_reset_tokensGroupByArgs['orderBy'] }
        : { orderBy?: password_reset_tokensGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, password_reset_tokensGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPassword_reset_tokensGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the password_reset_tokens model
   */
  readonly fields: password_reset_tokensFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for password_reset_tokens.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__password_reset_tokensClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    admin_users<T extends admin_usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, admin_usersDefaultArgs<ExtArgs>>): Prisma__admin_usersClient<$Result.GetResult<Prisma.$admin_usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the password_reset_tokens model
   */
  interface password_reset_tokensFieldRefs {
    readonly id: FieldRef<"password_reset_tokens", 'Int'>
    readonly user_id: FieldRef<"password_reset_tokens", 'Int'>
    readonly token: FieldRef<"password_reset_tokens", 'String'>
    readonly expires_at: FieldRef<"password_reset_tokens", 'DateTime'>
    readonly created_at: FieldRef<"password_reset_tokens", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * password_reset_tokens findUnique
   */
  export type password_reset_tokensFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    /**
     * Filter, which password_reset_tokens to fetch.
     */
    where: password_reset_tokensWhereUniqueInput
  }

  /**
   * password_reset_tokens findUniqueOrThrow
   */
  export type password_reset_tokensFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    /**
     * Filter, which password_reset_tokens to fetch.
     */
    where: password_reset_tokensWhereUniqueInput
  }

  /**
   * password_reset_tokens findFirst
   */
  export type password_reset_tokensFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    /**
     * Filter, which password_reset_tokens to fetch.
     */
    where?: password_reset_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of password_reset_tokens to fetch.
     */
    orderBy?: password_reset_tokensOrderByWithRelationInput | password_reset_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for password_reset_tokens.
     */
    cursor?: password_reset_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` password_reset_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` password_reset_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of password_reset_tokens.
     */
    distinct?: Password_reset_tokensScalarFieldEnum | Password_reset_tokensScalarFieldEnum[]
  }

  /**
   * password_reset_tokens findFirstOrThrow
   */
  export type password_reset_tokensFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    /**
     * Filter, which password_reset_tokens to fetch.
     */
    where?: password_reset_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of password_reset_tokens to fetch.
     */
    orderBy?: password_reset_tokensOrderByWithRelationInput | password_reset_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for password_reset_tokens.
     */
    cursor?: password_reset_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` password_reset_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` password_reset_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of password_reset_tokens.
     */
    distinct?: Password_reset_tokensScalarFieldEnum | Password_reset_tokensScalarFieldEnum[]
  }

  /**
   * password_reset_tokens findMany
   */
  export type password_reset_tokensFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    /**
     * Filter, which password_reset_tokens to fetch.
     */
    where?: password_reset_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of password_reset_tokens to fetch.
     */
    orderBy?: password_reset_tokensOrderByWithRelationInput | password_reset_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing password_reset_tokens.
     */
    cursor?: password_reset_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` password_reset_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` password_reset_tokens.
     */
    skip?: number
    distinct?: Password_reset_tokensScalarFieldEnum | Password_reset_tokensScalarFieldEnum[]
  }

  /**
   * password_reset_tokens create
   */
  export type password_reset_tokensCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    /**
     * The data needed to create a password_reset_tokens.
     */
    data: XOR<password_reset_tokensCreateInput, password_reset_tokensUncheckedCreateInput>
  }

  /**
   * password_reset_tokens createMany
   */
  export type password_reset_tokensCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many password_reset_tokens.
     */
    data: password_reset_tokensCreateManyInput | password_reset_tokensCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * password_reset_tokens createManyAndReturn
   */
  export type password_reset_tokensCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * The data used to create many password_reset_tokens.
     */
    data: password_reset_tokensCreateManyInput | password_reset_tokensCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * password_reset_tokens update
   */
  export type password_reset_tokensUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    /**
     * The data needed to update a password_reset_tokens.
     */
    data: XOR<password_reset_tokensUpdateInput, password_reset_tokensUncheckedUpdateInput>
    /**
     * Choose, which password_reset_tokens to update.
     */
    where: password_reset_tokensWhereUniqueInput
  }

  /**
   * password_reset_tokens updateMany
   */
  export type password_reset_tokensUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update password_reset_tokens.
     */
    data: XOR<password_reset_tokensUpdateManyMutationInput, password_reset_tokensUncheckedUpdateManyInput>
    /**
     * Filter which password_reset_tokens to update
     */
    where?: password_reset_tokensWhereInput
    /**
     * Limit how many password_reset_tokens to update.
     */
    limit?: number
  }

  /**
   * password_reset_tokens updateManyAndReturn
   */
  export type password_reset_tokensUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * The data used to update password_reset_tokens.
     */
    data: XOR<password_reset_tokensUpdateManyMutationInput, password_reset_tokensUncheckedUpdateManyInput>
    /**
     * Filter which password_reset_tokens to update
     */
    where?: password_reset_tokensWhereInput
    /**
     * Limit how many password_reset_tokens to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * password_reset_tokens upsert
   */
  export type password_reset_tokensUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    /**
     * The filter to search for the password_reset_tokens to update in case it exists.
     */
    where: password_reset_tokensWhereUniqueInput
    /**
     * In case the password_reset_tokens found by the `where` argument doesn't exist, create a new password_reset_tokens with this data.
     */
    create: XOR<password_reset_tokensCreateInput, password_reset_tokensUncheckedCreateInput>
    /**
     * In case the password_reset_tokens was found with the provided `where` argument, update it with this data.
     */
    update: XOR<password_reset_tokensUpdateInput, password_reset_tokensUncheckedUpdateInput>
  }

  /**
   * password_reset_tokens delete
   */
  export type password_reset_tokensDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
    /**
     * Filter which password_reset_tokens to delete.
     */
    where: password_reset_tokensWhereUniqueInput
  }

  /**
   * password_reset_tokens deleteMany
   */
  export type password_reset_tokensDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which password_reset_tokens to delete
     */
    where?: password_reset_tokensWhereInput
    /**
     * Limit how many password_reset_tokens to delete.
     */
    limit?: number
  }

  /**
   * password_reset_tokens without action
   */
  export type password_reset_tokensDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the password_reset_tokens
     */
    select?: password_reset_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the password_reset_tokens
     */
    omit?: password_reset_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: password_reset_tokensInclude<ExtArgs> | null
  }


  /**
   * Model pending_employees
   */

  export type AggregatePending_employees = {
    _count: Pending_employeesCountAggregateOutputType | null
    _avg: Pending_employeesAvgAggregateOutputType | null
    _sum: Pending_employeesSumAggregateOutputType | null
    _min: Pending_employeesMinAggregateOutputType | null
    _max: Pending_employeesMaxAggregateOutputType | null
  }

  export type Pending_employeesAvgAggregateOutputType = {
    id: number | null
  }

  export type Pending_employeesSumAggregateOutputType = {
    id: number | null
  }

  export type Pending_employeesMinAggregateOutputType = {
    id: number | null
    registration_id: string | null
    surname: string | null
    firstname: string | null
    email: string | null
    department: string | null
    position: string | null
    status: string | null
    source: string | null
    submission_date: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Pending_employeesMaxAggregateOutputType = {
    id: number | null
    registration_id: string | null
    surname: string | null
    firstname: string | null
    email: string | null
    department: string | null
    position: string | null
    status: string | null
    source: string | null
    submission_date: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Pending_employeesCountAggregateOutputType = {
    id: number
    registration_id: number
    surname: number
    firstname: number
    email: number
    department: number
    position: number
    status: number
    source: number
    submission_date: number
    created_at: number
    updated_at: number
    missing_fields: number
    metadata: number
    _all: number
  }


  export type Pending_employeesAvgAggregateInputType = {
    id?: true
  }

  export type Pending_employeesSumAggregateInputType = {
    id?: true
  }

  export type Pending_employeesMinAggregateInputType = {
    id?: true
    registration_id?: true
    surname?: true
    firstname?: true
    email?: true
    department?: true
    position?: true
    status?: true
    source?: true
    submission_date?: true
    created_at?: true
    updated_at?: true
  }

  export type Pending_employeesMaxAggregateInputType = {
    id?: true
    registration_id?: true
    surname?: true
    firstname?: true
    email?: true
    department?: true
    position?: true
    status?: true
    source?: true
    submission_date?: true
    created_at?: true
    updated_at?: true
  }

  export type Pending_employeesCountAggregateInputType = {
    id?: true
    registration_id?: true
    surname?: true
    firstname?: true
    email?: true
    department?: true
    position?: true
    status?: true
    source?: true
    submission_date?: true
    created_at?: true
    updated_at?: true
    missing_fields?: true
    metadata?: true
    _all?: true
  }

  export type Pending_employeesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pending_employees to aggregate.
     */
    where?: pending_employeesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pending_employees to fetch.
     */
    orderBy?: pending_employeesOrderByWithRelationInput | pending_employeesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: pending_employeesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pending_employees from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pending_employees.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned pending_employees
    **/
    _count?: true | Pending_employeesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Pending_employeesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Pending_employeesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Pending_employeesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Pending_employeesMaxAggregateInputType
  }

  export type GetPending_employeesAggregateType<T extends Pending_employeesAggregateArgs> = {
        [P in keyof T & keyof AggregatePending_employees]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePending_employees[P]>
      : GetScalarType<T[P], AggregatePending_employees[P]>
  }




  export type pending_employeesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: pending_employeesWhereInput
    orderBy?: pending_employeesOrderByWithAggregationInput | pending_employeesOrderByWithAggregationInput[]
    by: Pending_employeesScalarFieldEnum[] | Pending_employeesScalarFieldEnum
    having?: pending_employeesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Pending_employeesCountAggregateInputType | true
    _avg?: Pending_employeesAvgAggregateInputType
    _sum?: Pending_employeesSumAggregateInputType
    _min?: Pending_employeesMinAggregateInputType
    _max?: Pending_employeesMaxAggregateInputType
  }

  export type Pending_employeesGroupByOutputType = {
    id: number
    registration_id: string | null
    surname: string
    firstname: string
    email: string
    department: string | null
    position: string | null
    status: string
    source: string
    submission_date: Date | null
    created_at: Date | null
    updated_at: Date | null
    missing_fields: JsonValue | null
    metadata: JsonValue | null
    _count: Pending_employeesCountAggregateOutputType | null
    _avg: Pending_employeesAvgAggregateOutputType | null
    _sum: Pending_employeesSumAggregateOutputType | null
    _min: Pending_employeesMinAggregateOutputType | null
    _max: Pending_employeesMaxAggregateOutputType | null
  }

  type GetPending_employeesGroupByPayload<T extends pending_employeesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Pending_employeesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Pending_employeesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Pending_employeesGroupByOutputType[P]>
            : GetScalarType<T[P], Pending_employeesGroupByOutputType[P]>
        }
      >
    >


  export type pending_employeesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    registration_id?: boolean
    surname?: boolean
    firstname?: boolean
    email?: boolean
    department?: boolean
    position?: boolean
    status?: boolean
    source?: boolean
    submission_date?: boolean
    created_at?: boolean
    updated_at?: boolean
    missing_fields?: boolean
    metadata?: boolean
  }, ExtArgs["result"]["pending_employees"]>

  export type pending_employeesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    registration_id?: boolean
    surname?: boolean
    firstname?: boolean
    email?: boolean
    department?: boolean
    position?: boolean
    status?: boolean
    source?: boolean
    submission_date?: boolean
    created_at?: boolean
    updated_at?: boolean
    missing_fields?: boolean
    metadata?: boolean
  }, ExtArgs["result"]["pending_employees"]>

  export type pending_employeesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    registration_id?: boolean
    surname?: boolean
    firstname?: boolean
    email?: boolean
    department?: boolean
    position?: boolean
    status?: boolean
    source?: boolean
    submission_date?: boolean
    created_at?: boolean
    updated_at?: boolean
    missing_fields?: boolean
    metadata?: boolean
  }, ExtArgs["result"]["pending_employees"]>

  export type pending_employeesSelectScalar = {
    id?: boolean
    registration_id?: boolean
    surname?: boolean
    firstname?: boolean
    email?: boolean
    department?: boolean
    position?: boolean
    status?: boolean
    source?: boolean
    submission_date?: boolean
    created_at?: boolean
    updated_at?: boolean
    missing_fields?: boolean
    metadata?: boolean
  }

  export type pending_employeesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "registration_id" | "surname" | "firstname" | "email" | "department" | "position" | "status" | "source" | "submission_date" | "created_at" | "updated_at" | "missing_fields" | "metadata", ExtArgs["result"]["pending_employees"]>

  export type $pending_employeesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "pending_employees"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      registration_id: string | null
      surname: string
      firstname: string
      email: string
      department: string | null
      position: string | null
      status: string
      source: string
      submission_date: Date | null
      created_at: Date | null
      updated_at: Date | null
      missing_fields: Prisma.JsonValue | null
      metadata: Prisma.JsonValue | null
    }, ExtArgs["result"]["pending_employees"]>
    composites: {}
  }

  type pending_employeesGetPayload<S extends boolean | null | undefined | pending_employeesDefaultArgs> = $Result.GetResult<Prisma.$pending_employeesPayload, S>

  type pending_employeesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<pending_employeesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Pending_employeesCountAggregateInputType | true
    }

  export interface pending_employeesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['pending_employees'], meta: { name: 'pending_employees' } }
    /**
     * Find zero or one Pending_employees that matches the filter.
     * @param {pending_employeesFindUniqueArgs} args - Arguments to find a Pending_employees
     * @example
     * // Get one Pending_employees
     * const pending_employees = await prisma.pending_employees.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends pending_employeesFindUniqueArgs>(args: SelectSubset<T, pending_employeesFindUniqueArgs<ExtArgs>>): Prisma__pending_employeesClient<$Result.GetResult<Prisma.$pending_employeesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Pending_employees that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {pending_employeesFindUniqueOrThrowArgs} args - Arguments to find a Pending_employees
     * @example
     * // Get one Pending_employees
     * const pending_employees = await prisma.pending_employees.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends pending_employeesFindUniqueOrThrowArgs>(args: SelectSubset<T, pending_employeesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__pending_employeesClient<$Result.GetResult<Prisma.$pending_employeesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pending_employees that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pending_employeesFindFirstArgs} args - Arguments to find a Pending_employees
     * @example
     * // Get one Pending_employees
     * const pending_employees = await prisma.pending_employees.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends pending_employeesFindFirstArgs>(args?: SelectSubset<T, pending_employeesFindFirstArgs<ExtArgs>>): Prisma__pending_employeesClient<$Result.GetResult<Prisma.$pending_employeesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Pending_employees that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pending_employeesFindFirstOrThrowArgs} args - Arguments to find a Pending_employees
     * @example
     * // Get one Pending_employees
     * const pending_employees = await prisma.pending_employees.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends pending_employeesFindFirstOrThrowArgs>(args?: SelectSubset<T, pending_employeesFindFirstOrThrowArgs<ExtArgs>>): Prisma__pending_employeesClient<$Result.GetResult<Prisma.$pending_employeesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Pending_employees that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pending_employeesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pending_employees
     * const pending_employees = await prisma.pending_employees.findMany()
     * 
     * // Get first 10 Pending_employees
     * const pending_employees = await prisma.pending_employees.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pending_employeesWithIdOnly = await prisma.pending_employees.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends pending_employeesFindManyArgs>(args?: SelectSubset<T, pending_employeesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pending_employeesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Pending_employees.
     * @param {pending_employeesCreateArgs} args - Arguments to create a Pending_employees.
     * @example
     * // Create one Pending_employees
     * const Pending_employees = await prisma.pending_employees.create({
     *   data: {
     *     // ... data to create a Pending_employees
     *   }
     * })
     * 
     */
    create<T extends pending_employeesCreateArgs>(args: SelectSubset<T, pending_employeesCreateArgs<ExtArgs>>): Prisma__pending_employeesClient<$Result.GetResult<Prisma.$pending_employeesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Pending_employees.
     * @param {pending_employeesCreateManyArgs} args - Arguments to create many Pending_employees.
     * @example
     * // Create many Pending_employees
     * const pending_employees = await prisma.pending_employees.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends pending_employeesCreateManyArgs>(args?: SelectSubset<T, pending_employeesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pending_employees and returns the data saved in the database.
     * @param {pending_employeesCreateManyAndReturnArgs} args - Arguments to create many Pending_employees.
     * @example
     * // Create many Pending_employees
     * const pending_employees = await prisma.pending_employees.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pending_employees and only return the `id`
     * const pending_employeesWithIdOnly = await prisma.pending_employees.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends pending_employeesCreateManyAndReturnArgs>(args?: SelectSubset<T, pending_employeesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pending_employeesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Pending_employees.
     * @param {pending_employeesDeleteArgs} args - Arguments to delete one Pending_employees.
     * @example
     * // Delete one Pending_employees
     * const Pending_employees = await prisma.pending_employees.delete({
     *   where: {
     *     // ... filter to delete one Pending_employees
     *   }
     * })
     * 
     */
    delete<T extends pending_employeesDeleteArgs>(args: SelectSubset<T, pending_employeesDeleteArgs<ExtArgs>>): Prisma__pending_employeesClient<$Result.GetResult<Prisma.$pending_employeesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Pending_employees.
     * @param {pending_employeesUpdateArgs} args - Arguments to update one Pending_employees.
     * @example
     * // Update one Pending_employees
     * const pending_employees = await prisma.pending_employees.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends pending_employeesUpdateArgs>(args: SelectSubset<T, pending_employeesUpdateArgs<ExtArgs>>): Prisma__pending_employeesClient<$Result.GetResult<Prisma.$pending_employeesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Pending_employees.
     * @param {pending_employeesDeleteManyArgs} args - Arguments to filter Pending_employees to delete.
     * @example
     * // Delete a few Pending_employees
     * const { count } = await prisma.pending_employees.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends pending_employeesDeleteManyArgs>(args?: SelectSubset<T, pending_employeesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pending_employees.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pending_employeesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pending_employees
     * const pending_employees = await prisma.pending_employees.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends pending_employeesUpdateManyArgs>(args: SelectSubset<T, pending_employeesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pending_employees and returns the data updated in the database.
     * @param {pending_employeesUpdateManyAndReturnArgs} args - Arguments to update many Pending_employees.
     * @example
     * // Update many Pending_employees
     * const pending_employees = await prisma.pending_employees.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Pending_employees and only return the `id`
     * const pending_employeesWithIdOnly = await prisma.pending_employees.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends pending_employeesUpdateManyAndReturnArgs>(args: SelectSubset<T, pending_employeesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$pending_employeesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Pending_employees.
     * @param {pending_employeesUpsertArgs} args - Arguments to update or create a Pending_employees.
     * @example
     * // Update or create a Pending_employees
     * const pending_employees = await prisma.pending_employees.upsert({
     *   create: {
     *     // ... data to create a Pending_employees
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pending_employees we want to update
     *   }
     * })
     */
    upsert<T extends pending_employeesUpsertArgs>(args: SelectSubset<T, pending_employeesUpsertArgs<ExtArgs>>): Prisma__pending_employeesClient<$Result.GetResult<Prisma.$pending_employeesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Pending_employees.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pending_employeesCountArgs} args - Arguments to filter Pending_employees to count.
     * @example
     * // Count the number of Pending_employees
     * const count = await prisma.pending_employees.count({
     *   where: {
     *     // ... the filter for the Pending_employees we want to count
     *   }
     * })
    **/
    count<T extends pending_employeesCountArgs>(
      args?: Subset<T, pending_employeesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Pending_employeesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pending_employees.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Pending_employeesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Pending_employeesAggregateArgs>(args: Subset<T, Pending_employeesAggregateArgs>): Prisma.PrismaPromise<GetPending_employeesAggregateType<T>>

    /**
     * Group by Pending_employees.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {pending_employeesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends pending_employeesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: pending_employeesGroupByArgs['orderBy'] }
        : { orderBy?: pending_employeesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, pending_employeesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPending_employeesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the pending_employees model
   */
  readonly fields: pending_employeesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for pending_employees.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__pending_employeesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the pending_employees model
   */
  interface pending_employeesFieldRefs {
    readonly id: FieldRef<"pending_employees", 'Int'>
    readonly registration_id: FieldRef<"pending_employees", 'String'>
    readonly surname: FieldRef<"pending_employees", 'String'>
    readonly firstname: FieldRef<"pending_employees", 'String'>
    readonly email: FieldRef<"pending_employees", 'String'>
    readonly department: FieldRef<"pending_employees", 'String'>
    readonly position: FieldRef<"pending_employees", 'String'>
    readonly status: FieldRef<"pending_employees", 'String'>
    readonly source: FieldRef<"pending_employees", 'String'>
    readonly submission_date: FieldRef<"pending_employees", 'DateTime'>
    readonly created_at: FieldRef<"pending_employees", 'DateTime'>
    readonly updated_at: FieldRef<"pending_employees", 'DateTime'>
    readonly missing_fields: FieldRef<"pending_employees", 'Json'>
    readonly metadata: FieldRef<"pending_employees", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * pending_employees findUnique
   */
  export type pending_employeesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pending_employees
     */
    select?: pending_employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pending_employees
     */
    omit?: pending_employeesOmit<ExtArgs> | null
    /**
     * Filter, which pending_employees to fetch.
     */
    where: pending_employeesWhereUniqueInput
  }

  /**
   * pending_employees findUniqueOrThrow
   */
  export type pending_employeesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pending_employees
     */
    select?: pending_employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pending_employees
     */
    omit?: pending_employeesOmit<ExtArgs> | null
    /**
     * Filter, which pending_employees to fetch.
     */
    where: pending_employeesWhereUniqueInput
  }

  /**
   * pending_employees findFirst
   */
  export type pending_employeesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pending_employees
     */
    select?: pending_employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pending_employees
     */
    omit?: pending_employeesOmit<ExtArgs> | null
    /**
     * Filter, which pending_employees to fetch.
     */
    where?: pending_employeesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pending_employees to fetch.
     */
    orderBy?: pending_employeesOrderByWithRelationInput | pending_employeesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pending_employees.
     */
    cursor?: pending_employeesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pending_employees from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pending_employees.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pending_employees.
     */
    distinct?: Pending_employeesScalarFieldEnum | Pending_employeesScalarFieldEnum[]
  }

  /**
   * pending_employees findFirstOrThrow
   */
  export type pending_employeesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pending_employees
     */
    select?: pending_employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pending_employees
     */
    omit?: pending_employeesOmit<ExtArgs> | null
    /**
     * Filter, which pending_employees to fetch.
     */
    where?: pending_employeesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pending_employees to fetch.
     */
    orderBy?: pending_employeesOrderByWithRelationInput | pending_employeesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for pending_employees.
     */
    cursor?: pending_employeesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pending_employees from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pending_employees.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of pending_employees.
     */
    distinct?: Pending_employeesScalarFieldEnum | Pending_employeesScalarFieldEnum[]
  }

  /**
   * pending_employees findMany
   */
  export type pending_employeesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pending_employees
     */
    select?: pending_employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pending_employees
     */
    omit?: pending_employeesOmit<ExtArgs> | null
    /**
     * Filter, which pending_employees to fetch.
     */
    where?: pending_employeesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of pending_employees to fetch.
     */
    orderBy?: pending_employeesOrderByWithRelationInput | pending_employeesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing pending_employees.
     */
    cursor?: pending_employeesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` pending_employees from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` pending_employees.
     */
    skip?: number
    distinct?: Pending_employeesScalarFieldEnum | Pending_employeesScalarFieldEnum[]
  }

  /**
   * pending_employees create
   */
  export type pending_employeesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pending_employees
     */
    select?: pending_employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pending_employees
     */
    omit?: pending_employeesOmit<ExtArgs> | null
    /**
     * The data needed to create a pending_employees.
     */
    data: XOR<pending_employeesCreateInput, pending_employeesUncheckedCreateInput>
  }

  /**
   * pending_employees createMany
   */
  export type pending_employeesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many pending_employees.
     */
    data: pending_employeesCreateManyInput | pending_employeesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * pending_employees createManyAndReturn
   */
  export type pending_employeesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pending_employees
     */
    select?: pending_employeesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the pending_employees
     */
    omit?: pending_employeesOmit<ExtArgs> | null
    /**
     * The data used to create many pending_employees.
     */
    data: pending_employeesCreateManyInput | pending_employeesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * pending_employees update
   */
  export type pending_employeesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pending_employees
     */
    select?: pending_employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pending_employees
     */
    omit?: pending_employeesOmit<ExtArgs> | null
    /**
     * The data needed to update a pending_employees.
     */
    data: XOR<pending_employeesUpdateInput, pending_employeesUncheckedUpdateInput>
    /**
     * Choose, which pending_employees to update.
     */
    where: pending_employeesWhereUniqueInput
  }

  /**
   * pending_employees updateMany
   */
  export type pending_employeesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update pending_employees.
     */
    data: XOR<pending_employeesUpdateManyMutationInput, pending_employeesUncheckedUpdateManyInput>
    /**
     * Filter which pending_employees to update
     */
    where?: pending_employeesWhereInput
    /**
     * Limit how many pending_employees to update.
     */
    limit?: number
  }

  /**
   * pending_employees updateManyAndReturn
   */
  export type pending_employeesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pending_employees
     */
    select?: pending_employeesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the pending_employees
     */
    omit?: pending_employeesOmit<ExtArgs> | null
    /**
     * The data used to update pending_employees.
     */
    data: XOR<pending_employeesUpdateManyMutationInput, pending_employeesUncheckedUpdateManyInput>
    /**
     * Filter which pending_employees to update
     */
    where?: pending_employeesWhereInput
    /**
     * Limit how many pending_employees to update.
     */
    limit?: number
  }

  /**
   * pending_employees upsert
   */
  export type pending_employeesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pending_employees
     */
    select?: pending_employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pending_employees
     */
    omit?: pending_employeesOmit<ExtArgs> | null
    /**
     * The filter to search for the pending_employees to update in case it exists.
     */
    where: pending_employeesWhereUniqueInput
    /**
     * In case the pending_employees found by the `where` argument doesn't exist, create a new pending_employees with this data.
     */
    create: XOR<pending_employeesCreateInput, pending_employeesUncheckedCreateInput>
    /**
     * In case the pending_employees was found with the provided `where` argument, update it with this data.
     */
    update: XOR<pending_employeesUpdateInput, pending_employeesUncheckedUpdateInput>
  }

  /**
   * pending_employees delete
   */
  export type pending_employeesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pending_employees
     */
    select?: pending_employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pending_employees
     */
    omit?: pending_employeesOmit<ExtArgs> | null
    /**
     * Filter which pending_employees to delete.
     */
    where: pending_employeesWhereUniqueInput
  }

  /**
   * pending_employees deleteMany
   */
  export type pending_employeesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which pending_employees to delete
     */
    where?: pending_employeesWhereInput
    /**
     * Limit how many pending_employees to delete.
     */
    limit?: number
  }

  /**
   * pending_employees without action
   */
  export type pending_employeesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the pending_employees
     */
    select?: pending_employeesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the pending_employees
     */
    omit?: pending_employeesOmit<ExtArgs> | null
  }


  /**
   * Model personal_info
   */

  export type AggregatePersonal_info = {
    _count: Personal_infoCountAggregateOutputType | null
    _avg: Personal_infoAvgAggregateOutputType | null
    _sum: Personal_infoSumAggregateOutputType | null
    _min: Personal_infoMinAggregateOutputType | null
    _max: Personal_infoMaxAggregateOutputType | null
  }

  export type Personal_infoAvgAggregateOutputType = {
    id: number | null
  }

  export type Personal_infoSumAggregateOutputType = {
    id: number | null
  }

  export type Personal_infoMinAggregateOutputType = {
    id: number | null
    registration_id: string | null
    title: string | null
    surname: string | null
    first_name: string | null
    other_names: string | null
    phone_number: string | null
    email: string | null
    date_of_birth: Date | null
    sex: string | null
    marital_status: string | null
    state_of_origin: string | null
    lga: string | null
    state_of_residence: string | null
    address_state_of_residence: string | null
    next_of_kin_name: string | null
    next_of_kin_relationship: string | null
    next_of_kin_phone_number: string | null
    next_of_kin_address: string | null
  }

  export type Personal_infoMaxAggregateOutputType = {
    id: number | null
    registration_id: string | null
    title: string | null
    surname: string | null
    first_name: string | null
    other_names: string | null
    phone_number: string | null
    email: string | null
    date_of_birth: Date | null
    sex: string | null
    marital_status: string | null
    state_of_origin: string | null
    lga: string | null
    state_of_residence: string | null
    address_state_of_residence: string | null
    next_of_kin_name: string | null
    next_of_kin_relationship: string | null
    next_of_kin_phone_number: string | null
    next_of_kin_address: string | null
  }

  export type Personal_infoCountAggregateOutputType = {
    id: number
    registration_id: number
    title: number
    surname: number
    first_name: number
    other_names: number
    phone_number: number
    email: number
    date_of_birth: number
    sex: number
    marital_status: number
    state_of_origin: number
    lga: number
    state_of_residence: number
    address_state_of_residence: number
    next_of_kin_name: number
    next_of_kin_relationship: number
    next_of_kin_phone_number: number
    next_of_kin_address: number
    _all: number
  }


  export type Personal_infoAvgAggregateInputType = {
    id?: true
  }

  export type Personal_infoSumAggregateInputType = {
    id?: true
  }

  export type Personal_infoMinAggregateInputType = {
    id?: true
    registration_id?: true
    title?: true
    surname?: true
    first_name?: true
    other_names?: true
    phone_number?: true
    email?: true
    date_of_birth?: true
    sex?: true
    marital_status?: true
    state_of_origin?: true
    lga?: true
    state_of_residence?: true
    address_state_of_residence?: true
    next_of_kin_name?: true
    next_of_kin_relationship?: true
    next_of_kin_phone_number?: true
    next_of_kin_address?: true
  }

  export type Personal_infoMaxAggregateInputType = {
    id?: true
    registration_id?: true
    title?: true
    surname?: true
    first_name?: true
    other_names?: true
    phone_number?: true
    email?: true
    date_of_birth?: true
    sex?: true
    marital_status?: true
    state_of_origin?: true
    lga?: true
    state_of_residence?: true
    address_state_of_residence?: true
    next_of_kin_name?: true
    next_of_kin_relationship?: true
    next_of_kin_phone_number?: true
    next_of_kin_address?: true
  }

  export type Personal_infoCountAggregateInputType = {
    id?: true
    registration_id?: true
    title?: true
    surname?: true
    first_name?: true
    other_names?: true
    phone_number?: true
    email?: true
    date_of_birth?: true
    sex?: true
    marital_status?: true
    state_of_origin?: true
    lga?: true
    state_of_residence?: true
    address_state_of_residence?: true
    next_of_kin_name?: true
    next_of_kin_relationship?: true
    next_of_kin_phone_number?: true
    next_of_kin_address?: true
    _all?: true
  }

  export type Personal_infoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which personal_info to aggregate.
     */
    where?: personal_infoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of personal_infos to fetch.
     */
    orderBy?: personal_infoOrderByWithRelationInput | personal_infoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: personal_infoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` personal_infos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` personal_infos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned personal_infos
    **/
    _count?: true | Personal_infoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Personal_infoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Personal_infoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Personal_infoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Personal_infoMaxAggregateInputType
  }

  export type GetPersonal_infoAggregateType<T extends Personal_infoAggregateArgs> = {
        [P in keyof T & keyof AggregatePersonal_info]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePersonal_info[P]>
      : GetScalarType<T[P], AggregatePersonal_info[P]>
  }




  export type personal_infoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: personal_infoWhereInput
    orderBy?: personal_infoOrderByWithAggregationInput | personal_infoOrderByWithAggregationInput[]
    by: Personal_infoScalarFieldEnum[] | Personal_infoScalarFieldEnum
    having?: personal_infoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Personal_infoCountAggregateInputType | true
    _avg?: Personal_infoAvgAggregateInputType
    _sum?: Personal_infoSumAggregateInputType
    _min?: Personal_infoMinAggregateInputType
    _max?: Personal_infoMaxAggregateInputType
  }

  export type Personal_infoGroupByOutputType = {
    id: number
    registration_id: string
    title: string
    surname: string
    first_name: string
    other_names: string | null
    phone_number: string
    email: string
    date_of_birth: Date
    sex: string
    marital_status: string
    state_of_origin: string
    lga: string
    state_of_residence: string
    address_state_of_residence: string
    next_of_kin_name: string
    next_of_kin_relationship: string
    next_of_kin_phone_number: string
    next_of_kin_address: string
    _count: Personal_infoCountAggregateOutputType | null
    _avg: Personal_infoAvgAggregateOutputType | null
    _sum: Personal_infoSumAggregateOutputType | null
    _min: Personal_infoMinAggregateOutputType | null
    _max: Personal_infoMaxAggregateOutputType | null
  }

  type GetPersonal_infoGroupByPayload<T extends personal_infoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Personal_infoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Personal_infoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Personal_infoGroupByOutputType[P]>
            : GetScalarType<T[P], Personal_infoGroupByOutputType[P]>
        }
      >
    >


  export type personal_infoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    registration_id?: boolean
    title?: boolean
    surname?: boolean
    first_name?: boolean
    other_names?: boolean
    phone_number?: boolean
    email?: boolean
    date_of_birth?: boolean
    sex?: boolean
    marital_status?: boolean
    state_of_origin?: boolean
    lga?: boolean
    state_of_residence?: boolean
    address_state_of_residence?: boolean
    next_of_kin_name?: boolean
    next_of_kin_relationship?: boolean
    next_of_kin_phone_number?: boolean
    next_of_kin_address?: boolean
    registrations?: boolean | registrationsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["personal_info"]>

  export type personal_infoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    registration_id?: boolean
    title?: boolean
    surname?: boolean
    first_name?: boolean
    other_names?: boolean
    phone_number?: boolean
    email?: boolean
    date_of_birth?: boolean
    sex?: boolean
    marital_status?: boolean
    state_of_origin?: boolean
    lga?: boolean
    state_of_residence?: boolean
    address_state_of_residence?: boolean
    next_of_kin_name?: boolean
    next_of_kin_relationship?: boolean
    next_of_kin_phone_number?: boolean
    next_of_kin_address?: boolean
    registrations?: boolean | registrationsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["personal_info"]>

  export type personal_infoSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    registration_id?: boolean
    title?: boolean
    surname?: boolean
    first_name?: boolean
    other_names?: boolean
    phone_number?: boolean
    email?: boolean
    date_of_birth?: boolean
    sex?: boolean
    marital_status?: boolean
    state_of_origin?: boolean
    lga?: boolean
    state_of_residence?: boolean
    address_state_of_residence?: boolean
    next_of_kin_name?: boolean
    next_of_kin_relationship?: boolean
    next_of_kin_phone_number?: boolean
    next_of_kin_address?: boolean
    registrations?: boolean | registrationsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["personal_info"]>

  export type personal_infoSelectScalar = {
    id?: boolean
    registration_id?: boolean
    title?: boolean
    surname?: boolean
    first_name?: boolean
    other_names?: boolean
    phone_number?: boolean
    email?: boolean
    date_of_birth?: boolean
    sex?: boolean
    marital_status?: boolean
    state_of_origin?: boolean
    lga?: boolean
    state_of_residence?: boolean
    address_state_of_residence?: boolean
    next_of_kin_name?: boolean
    next_of_kin_relationship?: boolean
    next_of_kin_phone_number?: boolean
    next_of_kin_address?: boolean
  }

  export type personal_infoOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "registration_id" | "title" | "surname" | "first_name" | "other_names" | "phone_number" | "email" | "date_of_birth" | "sex" | "marital_status" | "state_of_origin" | "lga" | "state_of_residence" | "address_state_of_residence" | "next_of_kin_name" | "next_of_kin_relationship" | "next_of_kin_phone_number" | "next_of_kin_address", ExtArgs["result"]["personal_info"]>
  export type personal_infoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registrations?: boolean | registrationsDefaultArgs<ExtArgs>
  }
  export type personal_infoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registrations?: boolean | registrationsDefaultArgs<ExtArgs>
  }
  export type personal_infoIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registrations?: boolean | registrationsDefaultArgs<ExtArgs>
  }

  export type $personal_infoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "personal_info"
    objects: {
      registrations: Prisma.$registrationsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      registration_id: string
      title: string
      surname: string
      first_name: string
      other_names: string | null
      phone_number: string
      email: string
      date_of_birth: Date
      sex: string
      marital_status: string
      state_of_origin: string
      lga: string
      state_of_residence: string
      address_state_of_residence: string
      next_of_kin_name: string
      next_of_kin_relationship: string
      next_of_kin_phone_number: string
      next_of_kin_address: string
    }, ExtArgs["result"]["personal_info"]>
    composites: {}
  }

  type personal_infoGetPayload<S extends boolean | null | undefined | personal_infoDefaultArgs> = $Result.GetResult<Prisma.$personal_infoPayload, S>

  type personal_infoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<personal_infoFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Personal_infoCountAggregateInputType | true
    }

  export interface personal_infoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['personal_info'], meta: { name: 'personal_info' } }
    /**
     * Find zero or one Personal_info that matches the filter.
     * @param {personal_infoFindUniqueArgs} args - Arguments to find a Personal_info
     * @example
     * // Get one Personal_info
     * const personal_info = await prisma.personal_info.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends personal_infoFindUniqueArgs>(args: SelectSubset<T, personal_infoFindUniqueArgs<ExtArgs>>): Prisma__personal_infoClient<$Result.GetResult<Prisma.$personal_infoPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Personal_info that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {personal_infoFindUniqueOrThrowArgs} args - Arguments to find a Personal_info
     * @example
     * // Get one Personal_info
     * const personal_info = await prisma.personal_info.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends personal_infoFindUniqueOrThrowArgs>(args: SelectSubset<T, personal_infoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__personal_infoClient<$Result.GetResult<Prisma.$personal_infoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Personal_info that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {personal_infoFindFirstArgs} args - Arguments to find a Personal_info
     * @example
     * // Get one Personal_info
     * const personal_info = await prisma.personal_info.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends personal_infoFindFirstArgs>(args?: SelectSubset<T, personal_infoFindFirstArgs<ExtArgs>>): Prisma__personal_infoClient<$Result.GetResult<Prisma.$personal_infoPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Personal_info that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {personal_infoFindFirstOrThrowArgs} args - Arguments to find a Personal_info
     * @example
     * // Get one Personal_info
     * const personal_info = await prisma.personal_info.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends personal_infoFindFirstOrThrowArgs>(args?: SelectSubset<T, personal_infoFindFirstOrThrowArgs<ExtArgs>>): Prisma__personal_infoClient<$Result.GetResult<Prisma.$personal_infoPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Personal_infos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {personal_infoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Personal_infos
     * const personal_infos = await prisma.personal_info.findMany()
     * 
     * // Get first 10 Personal_infos
     * const personal_infos = await prisma.personal_info.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const personal_infoWithIdOnly = await prisma.personal_info.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends personal_infoFindManyArgs>(args?: SelectSubset<T, personal_infoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$personal_infoPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Personal_info.
     * @param {personal_infoCreateArgs} args - Arguments to create a Personal_info.
     * @example
     * // Create one Personal_info
     * const Personal_info = await prisma.personal_info.create({
     *   data: {
     *     // ... data to create a Personal_info
     *   }
     * })
     * 
     */
    create<T extends personal_infoCreateArgs>(args: SelectSubset<T, personal_infoCreateArgs<ExtArgs>>): Prisma__personal_infoClient<$Result.GetResult<Prisma.$personal_infoPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Personal_infos.
     * @param {personal_infoCreateManyArgs} args - Arguments to create many Personal_infos.
     * @example
     * // Create many Personal_infos
     * const personal_info = await prisma.personal_info.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends personal_infoCreateManyArgs>(args?: SelectSubset<T, personal_infoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Personal_infos and returns the data saved in the database.
     * @param {personal_infoCreateManyAndReturnArgs} args - Arguments to create many Personal_infos.
     * @example
     * // Create many Personal_infos
     * const personal_info = await prisma.personal_info.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Personal_infos and only return the `id`
     * const personal_infoWithIdOnly = await prisma.personal_info.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends personal_infoCreateManyAndReturnArgs>(args?: SelectSubset<T, personal_infoCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$personal_infoPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Personal_info.
     * @param {personal_infoDeleteArgs} args - Arguments to delete one Personal_info.
     * @example
     * // Delete one Personal_info
     * const Personal_info = await prisma.personal_info.delete({
     *   where: {
     *     // ... filter to delete one Personal_info
     *   }
     * })
     * 
     */
    delete<T extends personal_infoDeleteArgs>(args: SelectSubset<T, personal_infoDeleteArgs<ExtArgs>>): Prisma__personal_infoClient<$Result.GetResult<Prisma.$personal_infoPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Personal_info.
     * @param {personal_infoUpdateArgs} args - Arguments to update one Personal_info.
     * @example
     * // Update one Personal_info
     * const personal_info = await prisma.personal_info.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends personal_infoUpdateArgs>(args: SelectSubset<T, personal_infoUpdateArgs<ExtArgs>>): Prisma__personal_infoClient<$Result.GetResult<Prisma.$personal_infoPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Personal_infos.
     * @param {personal_infoDeleteManyArgs} args - Arguments to filter Personal_infos to delete.
     * @example
     * // Delete a few Personal_infos
     * const { count } = await prisma.personal_info.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends personal_infoDeleteManyArgs>(args?: SelectSubset<T, personal_infoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Personal_infos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {personal_infoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Personal_infos
     * const personal_info = await prisma.personal_info.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends personal_infoUpdateManyArgs>(args: SelectSubset<T, personal_infoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Personal_infos and returns the data updated in the database.
     * @param {personal_infoUpdateManyAndReturnArgs} args - Arguments to update many Personal_infos.
     * @example
     * // Update many Personal_infos
     * const personal_info = await prisma.personal_info.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Personal_infos and only return the `id`
     * const personal_infoWithIdOnly = await prisma.personal_info.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends personal_infoUpdateManyAndReturnArgs>(args: SelectSubset<T, personal_infoUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$personal_infoPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Personal_info.
     * @param {personal_infoUpsertArgs} args - Arguments to update or create a Personal_info.
     * @example
     * // Update or create a Personal_info
     * const personal_info = await prisma.personal_info.upsert({
     *   create: {
     *     // ... data to create a Personal_info
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Personal_info we want to update
     *   }
     * })
     */
    upsert<T extends personal_infoUpsertArgs>(args: SelectSubset<T, personal_infoUpsertArgs<ExtArgs>>): Prisma__personal_infoClient<$Result.GetResult<Prisma.$personal_infoPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Personal_infos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {personal_infoCountArgs} args - Arguments to filter Personal_infos to count.
     * @example
     * // Count the number of Personal_infos
     * const count = await prisma.personal_info.count({
     *   where: {
     *     // ... the filter for the Personal_infos we want to count
     *   }
     * })
    **/
    count<T extends personal_infoCountArgs>(
      args?: Subset<T, personal_infoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Personal_infoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Personal_info.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Personal_infoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Personal_infoAggregateArgs>(args: Subset<T, Personal_infoAggregateArgs>): Prisma.PrismaPromise<GetPersonal_infoAggregateType<T>>

    /**
     * Group by Personal_info.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {personal_infoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends personal_infoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: personal_infoGroupByArgs['orderBy'] }
        : { orderBy?: personal_infoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, personal_infoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPersonal_infoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the personal_info model
   */
  readonly fields: personal_infoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for personal_info.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__personal_infoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    registrations<T extends registrationsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, registrationsDefaultArgs<ExtArgs>>): Prisma__registrationsClient<$Result.GetResult<Prisma.$registrationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the personal_info model
   */
  interface personal_infoFieldRefs {
    readonly id: FieldRef<"personal_info", 'Int'>
    readonly registration_id: FieldRef<"personal_info", 'String'>
    readonly title: FieldRef<"personal_info", 'String'>
    readonly surname: FieldRef<"personal_info", 'String'>
    readonly first_name: FieldRef<"personal_info", 'String'>
    readonly other_names: FieldRef<"personal_info", 'String'>
    readonly phone_number: FieldRef<"personal_info", 'String'>
    readonly email: FieldRef<"personal_info", 'String'>
    readonly date_of_birth: FieldRef<"personal_info", 'DateTime'>
    readonly sex: FieldRef<"personal_info", 'String'>
    readonly marital_status: FieldRef<"personal_info", 'String'>
    readonly state_of_origin: FieldRef<"personal_info", 'String'>
    readonly lga: FieldRef<"personal_info", 'String'>
    readonly state_of_residence: FieldRef<"personal_info", 'String'>
    readonly address_state_of_residence: FieldRef<"personal_info", 'String'>
    readonly next_of_kin_name: FieldRef<"personal_info", 'String'>
    readonly next_of_kin_relationship: FieldRef<"personal_info", 'String'>
    readonly next_of_kin_phone_number: FieldRef<"personal_info", 'String'>
    readonly next_of_kin_address: FieldRef<"personal_info", 'String'>
  }
    

  // Custom InputTypes
  /**
   * personal_info findUnique
   */
  export type personal_infoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personal_info
     */
    select?: personal_infoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the personal_info
     */
    omit?: personal_infoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: personal_infoInclude<ExtArgs> | null
    /**
     * Filter, which personal_info to fetch.
     */
    where: personal_infoWhereUniqueInput
  }

  /**
   * personal_info findUniqueOrThrow
   */
  export type personal_infoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personal_info
     */
    select?: personal_infoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the personal_info
     */
    omit?: personal_infoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: personal_infoInclude<ExtArgs> | null
    /**
     * Filter, which personal_info to fetch.
     */
    where: personal_infoWhereUniqueInput
  }

  /**
   * personal_info findFirst
   */
  export type personal_infoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personal_info
     */
    select?: personal_infoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the personal_info
     */
    omit?: personal_infoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: personal_infoInclude<ExtArgs> | null
    /**
     * Filter, which personal_info to fetch.
     */
    where?: personal_infoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of personal_infos to fetch.
     */
    orderBy?: personal_infoOrderByWithRelationInput | personal_infoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for personal_infos.
     */
    cursor?: personal_infoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` personal_infos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` personal_infos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of personal_infos.
     */
    distinct?: Personal_infoScalarFieldEnum | Personal_infoScalarFieldEnum[]
  }

  /**
   * personal_info findFirstOrThrow
   */
  export type personal_infoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personal_info
     */
    select?: personal_infoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the personal_info
     */
    omit?: personal_infoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: personal_infoInclude<ExtArgs> | null
    /**
     * Filter, which personal_info to fetch.
     */
    where?: personal_infoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of personal_infos to fetch.
     */
    orderBy?: personal_infoOrderByWithRelationInput | personal_infoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for personal_infos.
     */
    cursor?: personal_infoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` personal_infos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` personal_infos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of personal_infos.
     */
    distinct?: Personal_infoScalarFieldEnum | Personal_infoScalarFieldEnum[]
  }

  /**
   * personal_info findMany
   */
  export type personal_infoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personal_info
     */
    select?: personal_infoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the personal_info
     */
    omit?: personal_infoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: personal_infoInclude<ExtArgs> | null
    /**
     * Filter, which personal_infos to fetch.
     */
    where?: personal_infoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of personal_infos to fetch.
     */
    orderBy?: personal_infoOrderByWithRelationInput | personal_infoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing personal_infos.
     */
    cursor?: personal_infoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` personal_infos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` personal_infos.
     */
    skip?: number
    distinct?: Personal_infoScalarFieldEnum | Personal_infoScalarFieldEnum[]
  }

  /**
   * personal_info create
   */
  export type personal_infoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personal_info
     */
    select?: personal_infoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the personal_info
     */
    omit?: personal_infoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: personal_infoInclude<ExtArgs> | null
    /**
     * The data needed to create a personal_info.
     */
    data: XOR<personal_infoCreateInput, personal_infoUncheckedCreateInput>
  }

  /**
   * personal_info createMany
   */
  export type personal_infoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many personal_infos.
     */
    data: personal_infoCreateManyInput | personal_infoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * personal_info createManyAndReturn
   */
  export type personal_infoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personal_info
     */
    select?: personal_infoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the personal_info
     */
    omit?: personal_infoOmit<ExtArgs> | null
    /**
     * The data used to create many personal_infos.
     */
    data: personal_infoCreateManyInput | personal_infoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: personal_infoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * personal_info update
   */
  export type personal_infoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personal_info
     */
    select?: personal_infoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the personal_info
     */
    omit?: personal_infoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: personal_infoInclude<ExtArgs> | null
    /**
     * The data needed to update a personal_info.
     */
    data: XOR<personal_infoUpdateInput, personal_infoUncheckedUpdateInput>
    /**
     * Choose, which personal_info to update.
     */
    where: personal_infoWhereUniqueInput
  }

  /**
   * personal_info updateMany
   */
  export type personal_infoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update personal_infos.
     */
    data: XOR<personal_infoUpdateManyMutationInput, personal_infoUncheckedUpdateManyInput>
    /**
     * Filter which personal_infos to update
     */
    where?: personal_infoWhereInput
    /**
     * Limit how many personal_infos to update.
     */
    limit?: number
  }

  /**
   * personal_info updateManyAndReturn
   */
  export type personal_infoUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personal_info
     */
    select?: personal_infoSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the personal_info
     */
    omit?: personal_infoOmit<ExtArgs> | null
    /**
     * The data used to update personal_infos.
     */
    data: XOR<personal_infoUpdateManyMutationInput, personal_infoUncheckedUpdateManyInput>
    /**
     * Filter which personal_infos to update
     */
    where?: personal_infoWhereInput
    /**
     * Limit how many personal_infos to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: personal_infoIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * personal_info upsert
   */
  export type personal_infoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personal_info
     */
    select?: personal_infoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the personal_info
     */
    omit?: personal_infoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: personal_infoInclude<ExtArgs> | null
    /**
     * The filter to search for the personal_info to update in case it exists.
     */
    where: personal_infoWhereUniqueInput
    /**
     * In case the personal_info found by the `where` argument doesn't exist, create a new personal_info with this data.
     */
    create: XOR<personal_infoCreateInput, personal_infoUncheckedCreateInput>
    /**
     * In case the personal_info was found with the provided `where` argument, update it with this data.
     */
    update: XOR<personal_infoUpdateInput, personal_infoUncheckedUpdateInput>
  }

  /**
   * personal_info delete
   */
  export type personal_infoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personal_info
     */
    select?: personal_infoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the personal_info
     */
    omit?: personal_infoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: personal_infoInclude<ExtArgs> | null
    /**
     * Filter which personal_info to delete.
     */
    where: personal_infoWhereUniqueInput
  }

  /**
   * personal_info deleteMany
   */
  export type personal_infoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which personal_infos to delete
     */
    where?: personal_infoWhereInput
    /**
     * Limit how many personal_infos to delete.
     */
    limit?: number
  }

  /**
   * personal_info without action
   */
  export type personal_infoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personal_info
     */
    select?: personal_infoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the personal_info
     */
    omit?: personal_infoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: personal_infoInclude<ExtArgs> | null
  }


  /**
   * Model registration_comments
   */

  export type AggregateRegistration_comments = {
    _count: Registration_commentsCountAggregateOutputType | null
    _avg: Registration_commentsAvgAggregateOutputType | null
    _sum: Registration_commentsSumAggregateOutputType | null
    _min: Registration_commentsMinAggregateOutputType | null
    _max: Registration_commentsMaxAggregateOutputType | null
  }

  export type Registration_commentsAvgAggregateOutputType = {
    id: number | null
  }

  export type Registration_commentsSumAggregateOutputType = {
    id: number | null
  }

  export type Registration_commentsMinAggregateOutputType = {
    id: number | null
    registration_id: string | null
    comment_text: string | null
    author: string | null
    created_at: Date | null
  }

  export type Registration_commentsMaxAggregateOutputType = {
    id: number | null
    registration_id: string | null
    comment_text: string | null
    author: string | null
    created_at: Date | null
  }

  export type Registration_commentsCountAggregateOutputType = {
    id: number
    registration_id: number
    comment_text: number
    author: number
    created_at: number
    _all: number
  }


  export type Registration_commentsAvgAggregateInputType = {
    id?: true
  }

  export type Registration_commentsSumAggregateInputType = {
    id?: true
  }

  export type Registration_commentsMinAggregateInputType = {
    id?: true
    registration_id?: true
    comment_text?: true
    author?: true
    created_at?: true
  }

  export type Registration_commentsMaxAggregateInputType = {
    id?: true
    registration_id?: true
    comment_text?: true
    author?: true
    created_at?: true
  }

  export type Registration_commentsCountAggregateInputType = {
    id?: true
    registration_id?: true
    comment_text?: true
    author?: true
    created_at?: true
    _all?: true
  }

  export type Registration_commentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which registration_comments to aggregate.
     */
    where?: registration_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of registration_comments to fetch.
     */
    orderBy?: registration_commentsOrderByWithRelationInput | registration_commentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: registration_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` registration_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` registration_comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned registration_comments
    **/
    _count?: true | Registration_commentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Registration_commentsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Registration_commentsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Registration_commentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Registration_commentsMaxAggregateInputType
  }

  export type GetRegistration_commentsAggregateType<T extends Registration_commentsAggregateArgs> = {
        [P in keyof T & keyof AggregateRegistration_comments]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRegistration_comments[P]>
      : GetScalarType<T[P], AggregateRegistration_comments[P]>
  }




  export type registration_commentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: registration_commentsWhereInput
    orderBy?: registration_commentsOrderByWithAggregationInput | registration_commentsOrderByWithAggregationInput[]
    by: Registration_commentsScalarFieldEnum[] | Registration_commentsScalarFieldEnum
    having?: registration_commentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Registration_commentsCountAggregateInputType | true
    _avg?: Registration_commentsAvgAggregateInputType
    _sum?: Registration_commentsSumAggregateInputType
    _min?: Registration_commentsMinAggregateInputType
    _max?: Registration_commentsMaxAggregateInputType
  }

  export type Registration_commentsGroupByOutputType = {
    id: number
    registration_id: string
    comment_text: string
    author: string | null
    created_at: Date
    _count: Registration_commentsCountAggregateOutputType | null
    _avg: Registration_commentsAvgAggregateOutputType | null
    _sum: Registration_commentsSumAggregateOutputType | null
    _min: Registration_commentsMinAggregateOutputType | null
    _max: Registration_commentsMaxAggregateOutputType | null
  }

  type GetRegistration_commentsGroupByPayload<T extends registration_commentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Registration_commentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Registration_commentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Registration_commentsGroupByOutputType[P]>
            : GetScalarType<T[P], Registration_commentsGroupByOutputType[P]>
        }
      >
    >


  export type registration_commentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    registration_id?: boolean
    comment_text?: boolean
    author?: boolean
    created_at?: boolean
    registrations?: boolean | registrationsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["registration_comments"]>

  export type registration_commentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    registration_id?: boolean
    comment_text?: boolean
    author?: boolean
    created_at?: boolean
    registrations?: boolean | registrationsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["registration_comments"]>

  export type registration_commentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    registration_id?: boolean
    comment_text?: boolean
    author?: boolean
    created_at?: boolean
    registrations?: boolean | registrationsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["registration_comments"]>

  export type registration_commentsSelectScalar = {
    id?: boolean
    registration_id?: boolean
    comment_text?: boolean
    author?: boolean
    created_at?: boolean
  }

  export type registration_commentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "registration_id" | "comment_text" | "author" | "created_at", ExtArgs["result"]["registration_comments"]>
  export type registration_commentsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registrations?: boolean | registrationsDefaultArgs<ExtArgs>
  }
  export type registration_commentsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registrations?: boolean | registrationsDefaultArgs<ExtArgs>
  }
  export type registration_commentsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registrations?: boolean | registrationsDefaultArgs<ExtArgs>
  }

  export type $registration_commentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "registration_comments"
    objects: {
      registrations: Prisma.$registrationsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      registration_id: string
      comment_text: string
      author: string | null
      created_at: Date
    }, ExtArgs["result"]["registration_comments"]>
    composites: {}
  }

  type registration_commentsGetPayload<S extends boolean | null | undefined | registration_commentsDefaultArgs> = $Result.GetResult<Prisma.$registration_commentsPayload, S>

  type registration_commentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<registration_commentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Registration_commentsCountAggregateInputType | true
    }

  export interface registration_commentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['registration_comments'], meta: { name: 'registration_comments' } }
    /**
     * Find zero or one Registration_comments that matches the filter.
     * @param {registration_commentsFindUniqueArgs} args - Arguments to find a Registration_comments
     * @example
     * // Get one Registration_comments
     * const registration_comments = await prisma.registration_comments.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends registration_commentsFindUniqueArgs>(args: SelectSubset<T, registration_commentsFindUniqueArgs<ExtArgs>>): Prisma__registration_commentsClient<$Result.GetResult<Prisma.$registration_commentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Registration_comments that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {registration_commentsFindUniqueOrThrowArgs} args - Arguments to find a Registration_comments
     * @example
     * // Get one Registration_comments
     * const registration_comments = await prisma.registration_comments.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends registration_commentsFindUniqueOrThrowArgs>(args: SelectSubset<T, registration_commentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__registration_commentsClient<$Result.GetResult<Prisma.$registration_commentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Registration_comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registration_commentsFindFirstArgs} args - Arguments to find a Registration_comments
     * @example
     * // Get one Registration_comments
     * const registration_comments = await prisma.registration_comments.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends registration_commentsFindFirstArgs>(args?: SelectSubset<T, registration_commentsFindFirstArgs<ExtArgs>>): Prisma__registration_commentsClient<$Result.GetResult<Prisma.$registration_commentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Registration_comments that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registration_commentsFindFirstOrThrowArgs} args - Arguments to find a Registration_comments
     * @example
     * // Get one Registration_comments
     * const registration_comments = await prisma.registration_comments.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends registration_commentsFindFirstOrThrowArgs>(args?: SelectSubset<T, registration_commentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__registration_commentsClient<$Result.GetResult<Prisma.$registration_commentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Registration_comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registration_commentsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Registration_comments
     * const registration_comments = await prisma.registration_comments.findMany()
     * 
     * // Get first 10 Registration_comments
     * const registration_comments = await prisma.registration_comments.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const registration_commentsWithIdOnly = await prisma.registration_comments.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends registration_commentsFindManyArgs>(args?: SelectSubset<T, registration_commentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$registration_commentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Registration_comments.
     * @param {registration_commentsCreateArgs} args - Arguments to create a Registration_comments.
     * @example
     * // Create one Registration_comments
     * const Registration_comments = await prisma.registration_comments.create({
     *   data: {
     *     // ... data to create a Registration_comments
     *   }
     * })
     * 
     */
    create<T extends registration_commentsCreateArgs>(args: SelectSubset<T, registration_commentsCreateArgs<ExtArgs>>): Prisma__registration_commentsClient<$Result.GetResult<Prisma.$registration_commentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Registration_comments.
     * @param {registration_commentsCreateManyArgs} args - Arguments to create many Registration_comments.
     * @example
     * // Create many Registration_comments
     * const registration_comments = await prisma.registration_comments.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends registration_commentsCreateManyArgs>(args?: SelectSubset<T, registration_commentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Registration_comments and returns the data saved in the database.
     * @param {registration_commentsCreateManyAndReturnArgs} args - Arguments to create many Registration_comments.
     * @example
     * // Create many Registration_comments
     * const registration_comments = await prisma.registration_comments.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Registration_comments and only return the `id`
     * const registration_commentsWithIdOnly = await prisma.registration_comments.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends registration_commentsCreateManyAndReturnArgs>(args?: SelectSubset<T, registration_commentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$registration_commentsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Registration_comments.
     * @param {registration_commentsDeleteArgs} args - Arguments to delete one Registration_comments.
     * @example
     * // Delete one Registration_comments
     * const Registration_comments = await prisma.registration_comments.delete({
     *   where: {
     *     // ... filter to delete one Registration_comments
     *   }
     * })
     * 
     */
    delete<T extends registration_commentsDeleteArgs>(args: SelectSubset<T, registration_commentsDeleteArgs<ExtArgs>>): Prisma__registration_commentsClient<$Result.GetResult<Prisma.$registration_commentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Registration_comments.
     * @param {registration_commentsUpdateArgs} args - Arguments to update one Registration_comments.
     * @example
     * // Update one Registration_comments
     * const registration_comments = await prisma.registration_comments.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends registration_commentsUpdateArgs>(args: SelectSubset<T, registration_commentsUpdateArgs<ExtArgs>>): Prisma__registration_commentsClient<$Result.GetResult<Prisma.$registration_commentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Registration_comments.
     * @param {registration_commentsDeleteManyArgs} args - Arguments to filter Registration_comments to delete.
     * @example
     * // Delete a few Registration_comments
     * const { count } = await prisma.registration_comments.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends registration_commentsDeleteManyArgs>(args?: SelectSubset<T, registration_commentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Registration_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registration_commentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Registration_comments
     * const registration_comments = await prisma.registration_comments.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends registration_commentsUpdateManyArgs>(args: SelectSubset<T, registration_commentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Registration_comments and returns the data updated in the database.
     * @param {registration_commentsUpdateManyAndReturnArgs} args - Arguments to update many Registration_comments.
     * @example
     * // Update many Registration_comments
     * const registration_comments = await prisma.registration_comments.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Registration_comments and only return the `id`
     * const registration_commentsWithIdOnly = await prisma.registration_comments.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends registration_commentsUpdateManyAndReturnArgs>(args: SelectSubset<T, registration_commentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$registration_commentsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Registration_comments.
     * @param {registration_commentsUpsertArgs} args - Arguments to update or create a Registration_comments.
     * @example
     * // Update or create a Registration_comments
     * const registration_comments = await prisma.registration_comments.upsert({
     *   create: {
     *     // ... data to create a Registration_comments
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Registration_comments we want to update
     *   }
     * })
     */
    upsert<T extends registration_commentsUpsertArgs>(args: SelectSubset<T, registration_commentsUpsertArgs<ExtArgs>>): Prisma__registration_commentsClient<$Result.GetResult<Prisma.$registration_commentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Registration_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registration_commentsCountArgs} args - Arguments to filter Registration_comments to count.
     * @example
     * // Count the number of Registration_comments
     * const count = await prisma.registration_comments.count({
     *   where: {
     *     // ... the filter for the Registration_comments we want to count
     *   }
     * })
    **/
    count<T extends registration_commentsCountArgs>(
      args?: Subset<T, registration_commentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Registration_commentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Registration_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Registration_commentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Registration_commentsAggregateArgs>(args: Subset<T, Registration_commentsAggregateArgs>): Prisma.PrismaPromise<GetRegistration_commentsAggregateType<T>>

    /**
     * Group by Registration_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registration_commentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends registration_commentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: registration_commentsGroupByArgs['orderBy'] }
        : { orderBy?: registration_commentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, registration_commentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRegistration_commentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the registration_comments model
   */
  readonly fields: registration_commentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for registration_comments.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__registration_commentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    registrations<T extends registrationsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, registrationsDefaultArgs<ExtArgs>>): Prisma__registrationsClient<$Result.GetResult<Prisma.$registrationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the registration_comments model
   */
  interface registration_commentsFieldRefs {
    readonly id: FieldRef<"registration_comments", 'Int'>
    readonly registration_id: FieldRef<"registration_comments", 'String'>
    readonly comment_text: FieldRef<"registration_comments", 'String'>
    readonly author: FieldRef<"registration_comments", 'String'>
    readonly created_at: FieldRef<"registration_comments", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * registration_comments findUnique
   */
  export type registration_commentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_comments
     */
    select?: registration_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registration_comments
     */
    omit?: registration_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registration_commentsInclude<ExtArgs> | null
    /**
     * Filter, which registration_comments to fetch.
     */
    where: registration_commentsWhereUniqueInput
  }

  /**
   * registration_comments findUniqueOrThrow
   */
  export type registration_commentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_comments
     */
    select?: registration_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registration_comments
     */
    omit?: registration_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registration_commentsInclude<ExtArgs> | null
    /**
     * Filter, which registration_comments to fetch.
     */
    where: registration_commentsWhereUniqueInput
  }

  /**
   * registration_comments findFirst
   */
  export type registration_commentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_comments
     */
    select?: registration_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registration_comments
     */
    omit?: registration_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registration_commentsInclude<ExtArgs> | null
    /**
     * Filter, which registration_comments to fetch.
     */
    where?: registration_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of registration_comments to fetch.
     */
    orderBy?: registration_commentsOrderByWithRelationInput | registration_commentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for registration_comments.
     */
    cursor?: registration_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` registration_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` registration_comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of registration_comments.
     */
    distinct?: Registration_commentsScalarFieldEnum | Registration_commentsScalarFieldEnum[]
  }

  /**
   * registration_comments findFirstOrThrow
   */
  export type registration_commentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_comments
     */
    select?: registration_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registration_comments
     */
    omit?: registration_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registration_commentsInclude<ExtArgs> | null
    /**
     * Filter, which registration_comments to fetch.
     */
    where?: registration_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of registration_comments to fetch.
     */
    orderBy?: registration_commentsOrderByWithRelationInput | registration_commentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for registration_comments.
     */
    cursor?: registration_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` registration_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` registration_comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of registration_comments.
     */
    distinct?: Registration_commentsScalarFieldEnum | Registration_commentsScalarFieldEnum[]
  }

  /**
   * registration_comments findMany
   */
  export type registration_commentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_comments
     */
    select?: registration_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registration_comments
     */
    omit?: registration_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registration_commentsInclude<ExtArgs> | null
    /**
     * Filter, which registration_comments to fetch.
     */
    where?: registration_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of registration_comments to fetch.
     */
    orderBy?: registration_commentsOrderByWithRelationInput | registration_commentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing registration_comments.
     */
    cursor?: registration_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` registration_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` registration_comments.
     */
    skip?: number
    distinct?: Registration_commentsScalarFieldEnum | Registration_commentsScalarFieldEnum[]
  }

  /**
   * registration_comments create
   */
  export type registration_commentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_comments
     */
    select?: registration_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registration_comments
     */
    omit?: registration_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registration_commentsInclude<ExtArgs> | null
    /**
     * The data needed to create a registration_comments.
     */
    data: XOR<registration_commentsCreateInput, registration_commentsUncheckedCreateInput>
  }

  /**
   * registration_comments createMany
   */
  export type registration_commentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many registration_comments.
     */
    data: registration_commentsCreateManyInput | registration_commentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * registration_comments createManyAndReturn
   */
  export type registration_commentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_comments
     */
    select?: registration_commentsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the registration_comments
     */
    omit?: registration_commentsOmit<ExtArgs> | null
    /**
     * The data used to create many registration_comments.
     */
    data: registration_commentsCreateManyInput | registration_commentsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registration_commentsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * registration_comments update
   */
  export type registration_commentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_comments
     */
    select?: registration_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registration_comments
     */
    omit?: registration_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registration_commentsInclude<ExtArgs> | null
    /**
     * The data needed to update a registration_comments.
     */
    data: XOR<registration_commentsUpdateInput, registration_commentsUncheckedUpdateInput>
    /**
     * Choose, which registration_comments to update.
     */
    where: registration_commentsWhereUniqueInput
  }

  /**
   * registration_comments updateMany
   */
  export type registration_commentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update registration_comments.
     */
    data: XOR<registration_commentsUpdateManyMutationInput, registration_commentsUncheckedUpdateManyInput>
    /**
     * Filter which registration_comments to update
     */
    where?: registration_commentsWhereInput
    /**
     * Limit how many registration_comments to update.
     */
    limit?: number
  }

  /**
   * registration_comments updateManyAndReturn
   */
  export type registration_commentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_comments
     */
    select?: registration_commentsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the registration_comments
     */
    omit?: registration_commentsOmit<ExtArgs> | null
    /**
     * The data used to update registration_comments.
     */
    data: XOR<registration_commentsUpdateManyMutationInput, registration_commentsUncheckedUpdateManyInput>
    /**
     * Filter which registration_comments to update
     */
    where?: registration_commentsWhereInput
    /**
     * Limit how many registration_comments to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registration_commentsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * registration_comments upsert
   */
  export type registration_commentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_comments
     */
    select?: registration_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registration_comments
     */
    omit?: registration_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registration_commentsInclude<ExtArgs> | null
    /**
     * The filter to search for the registration_comments to update in case it exists.
     */
    where: registration_commentsWhereUniqueInput
    /**
     * In case the registration_comments found by the `where` argument doesn't exist, create a new registration_comments with this data.
     */
    create: XOR<registration_commentsCreateInput, registration_commentsUncheckedCreateInput>
    /**
     * In case the registration_comments was found with the provided `where` argument, update it with this data.
     */
    update: XOR<registration_commentsUpdateInput, registration_commentsUncheckedUpdateInput>
  }

  /**
   * registration_comments delete
   */
  export type registration_commentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_comments
     */
    select?: registration_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registration_comments
     */
    omit?: registration_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registration_commentsInclude<ExtArgs> | null
    /**
     * Filter which registration_comments to delete.
     */
    where: registration_commentsWhereUniqueInput
  }

  /**
   * registration_comments deleteMany
   */
  export type registration_commentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which registration_comments to delete
     */
    where?: registration_commentsWhereInput
    /**
     * Limit how many registration_comments to delete.
     */
    limit?: number
  }

  /**
   * registration_comments without action
   */
  export type registration_commentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_comments
     */
    select?: registration_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registration_comments
     */
    omit?: registration_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registration_commentsInclude<ExtArgs> | null
  }


  /**
   * Model registration_history
   */

  export type AggregateRegistration_history = {
    _count: Registration_historyCountAggregateOutputType | null
    _avg: Registration_historyAvgAggregateOutputType | null
    _sum: Registration_historySumAggregateOutputType | null
    _min: Registration_historyMinAggregateOutputType | null
    _max: Registration_historyMaxAggregateOutputType | null
  }

  export type Registration_historyAvgAggregateOutputType = {
    id: number | null
  }

  export type Registration_historySumAggregateOutputType = {
    id: number | null
  }

  export type Registration_historyMinAggregateOutputType = {
    id: number | null
    registration_id: string | null
    action: string | null
    details: string | null
    performed_by: string | null
    performed_at: Date | null
  }

  export type Registration_historyMaxAggregateOutputType = {
    id: number | null
    registration_id: string | null
    action: string | null
    details: string | null
    performed_by: string | null
    performed_at: Date | null
  }

  export type Registration_historyCountAggregateOutputType = {
    id: number
    registration_id: number
    action: number
    details: number
    performed_by: number
    performed_at: number
    _all: number
  }


  export type Registration_historyAvgAggregateInputType = {
    id?: true
  }

  export type Registration_historySumAggregateInputType = {
    id?: true
  }

  export type Registration_historyMinAggregateInputType = {
    id?: true
    registration_id?: true
    action?: true
    details?: true
    performed_by?: true
    performed_at?: true
  }

  export type Registration_historyMaxAggregateInputType = {
    id?: true
    registration_id?: true
    action?: true
    details?: true
    performed_by?: true
    performed_at?: true
  }

  export type Registration_historyCountAggregateInputType = {
    id?: true
    registration_id?: true
    action?: true
    details?: true
    performed_by?: true
    performed_at?: true
    _all?: true
  }

  export type Registration_historyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which registration_history to aggregate.
     */
    where?: registration_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of registration_histories to fetch.
     */
    orderBy?: registration_historyOrderByWithRelationInput | registration_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: registration_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` registration_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` registration_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned registration_histories
    **/
    _count?: true | Registration_historyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Registration_historyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Registration_historySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Registration_historyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Registration_historyMaxAggregateInputType
  }

  export type GetRegistration_historyAggregateType<T extends Registration_historyAggregateArgs> = {
        [P in keyof T & keyof AggregateRegistration_history]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRegistration_history[P]>
      : GetScalarType<T[P], AggregateRegistration_history[P]>
  }




  export type registration_historyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: registration_historyWhereInput
    orderBy?: registration_historyOrderByWithAggregationInput | registration_historyOrderByWithAggregationInput[]
    by: Registration_historyScalarFieldEnum[] | Registration_historyScalarFieldEnum
    having?: registration_historyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Registration_historyCountAggregateInputType | true
    _avg?: Registration_historyAvgAggregateInputType
    _sum?: Registration_historySumAggregateInputType
    _min?: Registration_historyMinAggregateInputType
    _max?: Registration_historyMaxAggregateInputType
  }

  export type Registration_historyGroupByOutputType = {
    id: number
    registration_id: string | null
    action: string
    details: string | null
    performed_by: string | null
    performed_at: Date
    _count: Registration_historyCountAggregateOutputType | null
    _avg: Registration_historyAvgAggregateOutputType | null
    _sum: Registration_historySumAggregateOutputType | null
    _min: Registration_historyMinAggregateOutputType | null
    _max: Registration_historyMaxAggregateOutputType | null
  }

  type GetRegistration_historyGroupByPayload<T extends registration_historyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Registration_historyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Registration_historyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Registration_historyGroupByOutputType[P]>
            : GetScalarType<T[P], Registration_historyGroupByOutputType[P]>
        }
      >
    >


  export type registration_historySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    registration_id?: boolean
    action?: boolean
    details?: boolean
    performed_by?: boolean
    performed_at?: boolean
    registrations?: boolean | registration_history$registrationsArgs<ExtArgs>
  }, ExtArgs["result"]["registration_history"]>

  export type registration_historySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    registration_id?: boolean
    action?: boolean
    details?: boolean
    performed_by?: boolean
    performed_at?: boolean
    registrations?: boolean | registration_history$registrationsArgs<ExtArgs>
  }, ExtArgs["result"]["registration_history"]>

  export type registration_historySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    registration_id?: boolean
    action?: boolean
    details?: boolean
    performed_by?: boolean
    performed_at?: boolean
    registrations?: boolean | registration_history$registrationsArgs<ExtArgs>
  }, ExtArgs["result"]["registration_history"]>

  export type registration_historySelectScalar = {
    id?: boolean
    registration_id?: boolean
    action?: boolean
    details?: boolean
    performed_by?: boolean
    performed_at?: boolean
  }

  export type registration_historyOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "registration_id" | "action" | "details" | "performed_by" | "performed_at", ExtArgs["result"]["registration_history"]>
  export type registration_historyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registrations?: boolean | registration_history$registrationsArgs<ExtArgs>
  }
  export type registration_historyIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registrations?: boolean | registration_history$registrationsArgs<ExtArgs>
  }
  export type registration_historyIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registrations?: boolean | registration_history$registrationsArgs<ExtArgs>
  }

  export type $registration_historyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "registration_history"
    objects: {
      registrations: Prisma.$registrationsPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      registration_id: string | null
      action: string
      details: string | null
      performed_by: string | null
      performed_at: Date
    }, ExtArgs["result"]["registration_history"]>
    composites: {}
  }

  type registration_historyGetPayload<S extends boolean | null | undefined | registration_historyDefaultArgs> = $Result.GetResult<Prisma.$registration_historyPayload, S>

  type registration_historyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<registration_historyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Registration_historyCountAggregateInputType | true
    }

  export interface registration_historyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['registration_history'], meta: { name: 'registration_history' } }
    /**
     * Find zero or one Registration_history that matches the filter.
     * @param {registration_historyFindUniqueArgs} args - Arguments to find a Registration_history
     * @example
     * // Get one Registration_history
     * const registration_history = await prisma.registration_history.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends registration_historyFindUniqueArgs>(args: SelectSubset<T, registration_historyFindUniqueArgs<ExtArgs>>): Prisma__registration_historyClient<$Result.GetResult<Prisma.$registration_historyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Registration_history that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {registration_historyFindUniqueOrThrowArgs} args - Arguments to find a Registration_history
     * @example
     * // Get one Registration_history
     * const registration_history = await prisma.registration_history.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends registration_historyFindUniqueOrThrowArgs>(args: SelectSubset<T, registration_historyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__registration_historyClient<$Result.GetResult<Prisma.$registration_historyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Registration_history that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registration_historyFindFirstArgs} args - Arguments to find a Registration_history
     * @example
     * // Get one Registration_history
     * const registration_history = await prisma.registration_history.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends registration_historyFindFirstArgs>(args?: SelectSubset<T, registration_historyFindFirstArgs<ExtArgs>>): Prisma__registration_historyClient<$Result.GetResult<Prisma.$registration_historyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Registration_history that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registration_historyFindFirstOrThrowArgs} args - Arguments to find a Registration_history
     * @example
     * // Get one Registration_history
     * const registration_history = await prisma.registration_history.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends registration_historyFindFirstOrThrowArgs>(args?: SelectSubset<T, registration_historyFindFirstOrThrowArgs<ExtArgs>>): Prisma__registration_historyClient<$Result.GetResult<Prisma.$registration_historyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Registration_histories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registration_historyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Registration_histories
     * const registration_histories = await prisma.registration_history.findMany()
     * 
     * // Get first 10 Registration_histories
     * const registration_histories = await prisma.registration_history.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const registration_historyWithIdOnly = await prisma.registration_history.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends registration_historyFindManyArgs>(args?: SelectSubset<T, registration_historyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$registration_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Registration_history.
     * @param {registration_historyCreateArgs} args - Arguments to create a Registration_history.
     * @example
     * // Create one Registration_history
     * const Registration_history = await prisma.registration_history.create({
     *   data: {
     *     // ... data to create a Registration_history
     *   }
     * })
     * 
     */
    create<T extends registration_historyCreateArgs>(args: SelectSubset<T, registration_historyCreateArgs<ExtArgs>>): Prisma__registration_historyClient<$Result.GetResult<Prisma.$registration_historyPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Registration_histories.
     * @param {registration_historyCreateManyArgs} args - Arguments to create many Registration_histories.
     * @example
     * // Create many Registration_histories
     * const registration_history = await prisma.registration_history.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends registration_historyCreateManyArgs>(args?: SelectSubset<T, registration_historyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Registration_histories and returns the data saved in the database.
     * @param {registration_historyCreateManyAndReturnArgs} args - Arguments to create many Registration_histories.
     * @example
     * // Create many Registration_histories
     * const registration_history = await prisma.registration_history.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Registration_histories and only return the `id`
     * const registration_historyWithIdOnly = await prisma.registration_history.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends registration_historyCreateManyAndReturnArgs>(args?: SelectSubset<T, registration_historyCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$registration_historyPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Registration_history.
     * @param {registration_historyDeleteArgs} args - Arguments to delete one Registration_history.
     * @example
     * // Delete one Registration_history
     * const Registration_history = await prisma.registration_history.delete({
     *   where: {
     *     // ... filter to delete one Registration_history
     *   }
     * })
     * 
     */
    delete<T extends registration_historyDeleteArgs>(args: SelectSubset<T, registration_historyDeleteArgs<ExtArgs>>): Prisma__registration_historyClient<$Result.GetResult<Prisma.$registration_historyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Registration_history.
     * @param {registration_historyUpdateArgs} args - Arguments to update one Registration_history.
     * @example
     * // Update one Registration_history
     * const registration_history = await prisma.registration_history.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends registration_historyUpdateArgs>(args: SelectSubset<T, registration_historyUpdateArgs<ExtArgs>>): Prisma__registration_historyClient<$Result.GetResult<Prisma.$registration_historyPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Registration_histories.
     * @param {registration_historyDeleteManyArgs} args - Arguments to filter Registration_histories to delete.
     * @example
     * // Delete a few Registration_histories
     * const { count } = await prisma.registration_history.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends registration_historyDeleteManyArgs>(args?: SelectSubset<T, registration_historyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Registration_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registration_historyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Registration_histories
     * const registration_history = await prisma.registration_history.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends registration_historyUpdateManyArgs>(args: SelectSubset<T, registration_historyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Registration_histories and returns the data updated in the database.
     * @param {registration_historyUpdateManyAndReturnArgs} args - Arguments to update many Registration_histories.
     * @example
     * // Update many Registration_histories
     * const registration_history = await prisma.registration_history.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Registration_histories and only return the `id`
     * const registration_historyWithIdOnly = await prisma.registration_history.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends registration_historyUpdateManyAndReturnArgs>(args: SelectSubset<T, registration_historyUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$registration_historyPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Registration_history.
     * @param {registration_historyUpsertArgs} args - Arguments to update or create a Registration_history.
     * @example
     * // Update or create a Registration_history
     * const registration_history = await prisma.registration_history.upsert({
     *   create: {
     *     // ... data to create a Registration_history
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Registration_history we want to update
     *   }
     * })
     */
    upsert<T extends registration_historyUpsertArgs>(args: SelectSubset<T, registration_historyUpsertArgs<ExtArgs>>): Prisma__registration_historyClient<$Result.GetResult<Prisma.$registration_historyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Registration_histories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registration_historyCountArgs} args - Arguments to filter Registration_histories to count.
     * @example
     * // Count the number of Registration_histories
     * const count = await prisma.registration_history.count({
     *   where: {
     *     // ... the filter for the Registration_histories we want to count
     *   }
     * })
    **/
    count<T extends registration_historyCountArgs>(
      args?: Subset<T, registration_historyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Registration_historyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Registration_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Registration_historyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Registration_historyAggregateArgs>(args: Subset<T, Registration_historyAggregateArgs>): Prisma.PrismaPromise<GetRegistration_historyAggregateType<T>>

    /**
     * Group by Registration_history.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registration_historyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends registration_historyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: registration_historyGroupByArgs['orderBy'] }
        : { orderBy?: registration_historyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, registration_historyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRegistration_historyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the registration_history model
   */
  readonly fields: registration_historyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for registration_history.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__registration_historyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    registrations<T extends registration_history$registrationsArgs<ExtArgs> = {}>(args?: Subset<T, registration_history$registrationsArgs<ExtArgs>>): Prisma__registrationsClient<$Result.GetResult<Prisma.$registrationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the registration_history model
   */
  interface registration_historyFieldRefs {
    readonly id: FieldRef<"registration_history", 'Int'>
    readonly registration_id: FieldRef<"registration_history", 'String'>
    readonly action: FieldRef<"registration_history", 'String'>
    readonly details: FieldRef<"registration_history", 'String'>
    readonly performed_by: FieldRef<"registration_history", 'String'>
    readonly performed_at: FieldRef<"registration_history", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * registration_history findUnique
   */
  export type registration_historyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_history
     */
    select?: registration_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the registration_history
     */
    omit?: registration_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registration_historyInclude<ExtArgs> | null
    /**
     * Filter, which registration_history to fetch.
     */
    where: registration_historyWhereUniqueInput
  }

  /**
   * registration_history findUniqueOrThrow
   */
  export type registration_historyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_history
     */
    select?: registration_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the registration_history
     */
    omit?: registration_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registration_historyInclude<ExtArgs> | null
    /**
     * Filter, which registration_history to fetch.
     */
    where: registration_historyWhereUniqueInput
  }

  /**
   * registration_history findFirst
   */
  export type registration_historyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_history
     */
    select?: registration_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the registration_history
     */
    omit?: registration_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registration_historyInclude<ExtArgs> | null
    /**
     * Filter, which registration_history to fetch.
     */
    where?: registration_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of registration_histories to fetch.
     */
    orderBy?: registration_historyOrderByWithRelationInput | registration_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for registration_histories.
     */
    cursor?: registration_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` registration_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` registration_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of registration_histories.
     */
    distinct?: Registration_historyScalarFieldEnum | Registration_historyScalarFieldEnum[]
  }

  /**
   * registration_history findFirstOrThrow
   */
  export type registration_historyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_history
     */
    select?: registration_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the registration_history
     */
    omit?: registration_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registration_historyInclude<ExtArgs> | null
    /**
     * Filter, which registration_history to fetch.
     */
    where?: registration_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of registration_histories to fetch.
     */
    orderBy?: registration_historyOrderByWithRelationInput | registration_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for registration_histories.
     */
    cursor?: registration_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` registration_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` registration_histories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of registration_histories.
     */
    distinct?: Registration_historyScalarFieldEnum | Registration_historyScalarFieldEnum[]
  }

  /**
   * registration_history findMany
   */
  export type registration_historyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_history
     */
    select?: registration_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the registration_history
     */
    omit?: registration_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registration_historyInclude<ExtArgs> | null
    /**
     * Filter, which registration_histories to fetch.
     */
    where?: registration_historyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of registration_histories to fetch.
     */
    orderBy?: registration_historyOrderByWithRelationInput | registration_historyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing registration_histories.
     */
    cursor?: registration_historyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` registration_histories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` registration_histories.
     */
    skip?: number
    distinct?: Registration_historyScalarFieldEnum | Registration_historyScalarFieldEnum[]
  }

  /**
   * registration_history create
   */
  export type registration_historyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_history
     */
    select?: registration_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the registration_history
     */
    omit?: registration_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registration_historyInclude<ExtArgs> | null
    /**
     * The data needed to create a registration_history.
     */
    data: XOR<registration_historyCreateInput, registration_historyUncheckedCreateInput>
  }

  /**
   * registration_history createMany
   */
  export type registration_historyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many registration_histories.
     */
    data: registration_historyCreateManyInput | registration_historyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * registration_history createManyAndReturn
   */
  export type registration_historyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_history
     */
    select?: registration_historySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the registration_history
     */
    omit?: registration_historyOmit<ExtArgs> | null
    /**
     * The data used to create many registration_histories.
     */
    data: registration_historyCreateManyInput | registration_historyCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registration_historyIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * registration_history update
   */
  export type registration_historyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_history
     */
    select?: registration_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the registration_history
     */
    omit?: registration_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registration_historyInclude<ExtArgs> | null
    /**
     * The data needed to update a registration_history.
     */
    data: XOR<registration_historyUpdateInput, registration_historyUncheckedUpdateInput>
    /**
     * Choose, which registration_history to update.
     */
    where: registration_historyWhereUniqueInput
  }

  /**
   * registration_history updateMany
   */
  export type registration_historyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update registration_histories.
     */
    data: XOR<registration_historyUpdateManyMutationInput, registration_historyUncheckedUpdateManyInput>
    /**
     * Filter which registration_histories to update
     */
    where?: registration_historyWhereInput
    /**
     * Limit how many registration_histories to update.
     */
    limit?: number
  }

  /**
   * registration_history updateManyAndReturn
   */
  export type registration_historyUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_history
     */
    select?: registration_historySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the registration_history
     */
    omit?: registration_historyOmit<ExtArgs> | null
    /**
     * The data used to update registration_histories.
     */
    data: XOR<registration_historyUpdateManyMutationInput, registration_historyUncheckedUpdateManyInput>
    /**
     * Filter which registration_histories to update
     */
    where?: registration_historyWhereInput
    /**
     * Limit how many registration_histories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registration_historyIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * registration_history upsert
   */
  export type registration_historyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_history
     */
    select?: registration_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the registration_history
     */
    omit?: registration_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registration_historyInclude<ExtArgs> | null
    /**
     * The filter to search for the registration_history to update in case it exists.
     */
    where: registration_historyWhereUniqueInput
    /**
     * In case the registration_history found by the `where` argument doesn't exist, create a new registration_history with this data.
     */
    create: XOR<registration_historyCreateInput, registration_historyUncheckedCreateInput>
    /**
     * In case the registration_history was found with the provided `where` argument, update it with this data.
     */
    update: XOR<registration_historyUpdateInput, registration_historyUncheckedUpdateInput>
  }

  /**
   * registration_history delete
   */
  export type registration_historyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_history
     */
    select?: registration_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the registration_history
     */
    omit?: registration_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registration_historyInclude<ExtArgs> | null
    /**
     * Filter which registration_history to delete.
     */
    where: registration_historyWhereUniqueInput
  }

  /**
   * registration_history deleteMany
   */
  export type registration_historyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which registration_histories to delete
     */
    where?: registration_historyWhereInput
    /**
     * Limit how many registration_histories to delete.
     */
    limit?: number
  }

  /**
   * registration_history.registrations
   */
  export type registration_history$registrationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registrations
     */
    select?: registrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registrations
     */
    omit?: registrationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registrationsInclude<ExtArgs> | null
    where?: registrationsWhereInput
  }

  /**
   * registration_history without action
   */
  export type registration_historyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_history
     */
    select?: registration_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the registration_history
     */
    omit?: registration_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registration_historyInclude<ExtArgs> | null
  }


  /**
   * Model registrations
   */

  export type AggregateRegistrations = {
    _count: RegistrationsCountAggregateOutputType | null
    _avg: RegistrationsAvgAggregateOutputType | null
    _sum: RegistrationsSumAggregateOutputType | null
    _min: RegistrationsMinAggregateOutputType | null
    _max: RegistrationsMaxAggregateOutputType | null
  }

  export type RegistrationsAvgAggregateOutputType = {
    id: number | null
  }

  export type RegistrationsSumAggregateOutputType = {
    id: number | null
  }

  export type RegistrationsMinAggregateOutputType = {
    id: number | null
    registration_Id: string | null
    nin: string | null
    status: string | null
    current_step: string | null
    declaration: boolean | null
    created_at: Date | null
    updated_at: Date | null
    submitted_at: Date | null
    approved_at: Date | null
    rejected_at: Date | null
  }

  export type RegistrationsMaxAggregateOutputType = {
    id: number | null
    registration_Id: string | null
    nin: string | null
    status: string | null
    current_step: string | null
    declaration: boolean | null
    created_at: Date | null
    updated_at: Date | null
    submitted_at: Date | null
    approved_at: Date | null
    rejected_at: Date | null
  }

  export type RegistrationsCountAggregateOutputType = {
    id: number
    registration_Id: number
    nin: number
    status: number
    current_step: number
    declaration: number
    created_at: number
    updated_at: number
    submitted_at: number
    approved_at: number
    rejected_at: number
    _all: number
  }


  export type RegistrationsAvgAggregateInputType = {
    id?: true
  }

  export type RegistrationsSumAggregateInputType = {
    id?: true
  }

  export type RegistrationsMinAggregateInputType = {
    id?: true
    registration_Id?: true
    nin?: true
    status?: true
    current_step?: true
    declaration?: true
    created_at?: true
    updated_at?: true
    submitted_at?: true
    approved_at?: true
    rejected_at?: true
  }

  export type RegistrationsMaxAggregateInputType = {
    id?: true
    registration_Id?: true
    nin?: true
    status?: true
    current_step?: true
    declaration?: true
    created_at?: true
    updated_at?: true
    submitted_at?: true
    approved_at?: true
    rejected_at?: true
  }

  export type RegistrationsCountAggregateInputType = {
    id?: true
    registration_Id?: true
    nin?: true
    status?: true
    current_step?: true
    declaration?: true
    created_at?: true
    updated_at?: true
    submitted_at?: true
    approved_at?: true
    rejected_at?: true
    _all?: true
  }

  export type RegistrationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which registrations to aggregate.
     */
    where?: registrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of registrations to fetch.
     */
    orderBy?: registrationsOrderByWithRelationInput | registrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: registrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` registrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` registrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned registrations
    **/
    _count?: true | RegistrationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: RegistrationsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: RegistrationsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RegistrationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RegistrationsMaxAggregateInputType
  }

  export type GetRegistrationsAggregateType<T extends RegistrationsAggregateArgs> = {
        [P in keyof T & keyof AggregateRegistrations]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRegistrations[P]>
      : GetScalarType<T[P], AggregateRegistrations[P]>
  }




  export type registrationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: registrationsWhereInput
    orderBy?: registrationsOrderByWithAggregationInput | registrationsOrderByWithAggregationInput[]
    by: RegistrationsScalarFieldEnum[] | RegistrationsScalarFieldEnum
    having?: registrationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RegistrationsCountAggregateInputType | true
    _avg?: RegistrationsAvgAggregateInputType
    _sum?: RegistrationsSumAggregateInputType
    _min?: RegistrationsMinAggregateInputType
    _max?: RegistrationsMaxAggregateInputType
  }

  export type RegistrationsGroupByOutputType = {
    id: number
    registration_Id: string
    nin: string | null
    status: string
    current_step: string
    declaration: boolean | null
    created_at: Date
    updated_at: Date
    submitted_at: Date | null
    approved_at: Date | null
    rejected_at: Date | null
    _count: RegistrationsCountAggregateOutputType | null
    _avg: RegistrationsAvgAggregateOutputType | null
    _sum: RegistrationsSumAggregateOutputType | null
    _min: RegistrationsMinAggregateOutputType | null
    _max: RegistrationsMaxAggregateOutputType | null
  }

  type GetRegistrationsGroupByPayload<T extends registrationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RegistrationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RegistrationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RegistrationsGroupByOutputType[P]>
            : GetScalarType<T[P], RegistrationsGroupByOutputType[P]>
        }
      >
    >


  export type registrationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    registration_Id?: boolean
    nin?: boolean
    status?: boolean
    current_step?: boolean
    declaration?: boolean
    created_at?: boolean
    updated_at?: boolean
    submitted_at?: boolean
    approved_at?: boolean
    rejected_at?: boolean
    VerificationData?: boolean | registrations$VerificationDataArgs<ExtArgs>
    document_uploads?: boolean | registrations$document_uploadsArgs<ExtArgs>
    employment_info?: boolean | registrations$employment_infoArgs<ExtArgs>
    personal_info?: boolean | registrations$personal_infoArgs<ExtArgs>
    registration_comments?: boolean | registrations$registration_commentsArgs<ExtArgs>
    registration_history?: boolean | registrations$registration_historyArgs<ExtArgs>
    _count?: boolean | RegistrationsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["registrations"]>

  export type registrationsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    registration_Id?: boolean
    nin?: boolean
    status?: boolean
    current_step?: boolean
    declaration?: boolean
    created_at?: boolean
    updated_at?: boolean
    submitted_at?: boolean
    approved_at?: boolean
    rejected_at?: boolean
  }, ExtArgs["result"]["registrations"]>

  export type registrationsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    registration_Id?: boolean
    nin?: boolean
    status?: boolean
    current_step?: boolean
    declaration?: boolean
    created_at?: boolean
    updated_at?: boolean
    submitted_at?: boolean
    approved_at?: boolean
    rejected_at?: boolean
  }, ExtArgs["result"]["registrations"]>

  export type registrationsSelectScalar = {
    id?: boolean
    registration_Id?: boolean
    nin?: boolean
    status?: boolean
    current_step?: boolean
    declaration?: boolean
    created_at?: boolean
    updated_at?: boolean
    submitted_at?: boolean
    approved_at?: boolean
    rejected_at?: boolean
  }

  export type registrationsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "registration_Id" | "nin" | "status" | "current_step" | "declaration" | "created_at" | "updated_at" | "submitted_at" | "approved_at" | "rejected_at", ExtArgs["result"]["registrations"]>
  export type registrationsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    VerificationData?: boolean | registrations$VerificationDataArgs<ExtArgs>
    document_uploads?: boolean | registrations$document_uploadsArgs<ExtArgs>
    employment_info?: boolean | registrations$employment_infoArgs<ExtArgs>
    personal_info?: boolean | registrations$personal_infoArgs<ExtArgs>
    registration_comments?: boolean | registrations$registration_commentsArgs<ExtArgs>
    registration_history?: boolean | registrations$registration_historyArgs<ExtArgs>
    _count?: boolean | RegistrationsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type registrationsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type registrationsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $registrationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "registrations"
    objects: {
      VerificationData: Prisma.$VerificationDataPayload<ExtArgs> | null
      document_uploads: Prisma.$document_uploadsPayload<ExtArgs> | null
      employment_info: Prisma.$employment_infoPayload<ExtArgs> | null
      personal_info: Prisma.$personal_infoPayload<ExtArgs> | null
      registration_comments: Prisma.$registration_commentsPayload<ExtArgs>[]
      registration_history: Prisma.$registration_historyPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      registration_Id: string
      nin: string | null
      status: string
      current_step: string
      declaration: boolean | null
      created_at: Date
      updated_at: Date
      submitted_at: Date | null
      approved_at: Date | null
      rejected_at: Date | null
    }, ExtArgs["result"]["registrations"]>
    composites: {}
  }

  type registrationsGetPayload<S extends boolean | null | undefined | registrationsDefaultArgs> = $Result.GetResult<Prisma.$registrationsPayload, S>

  type registrationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<registrationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: RegistrationsCountAggregateInputType | true
    }

  export interface registrationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['registrations'], meta: { name: 'registrations' } }
    /**
     * Find zero or one Registrations that matches the filter.
     * @param {registrationsFindUniqueArgs} args - Arguments to find a Registrations
     * @example
     * // Get one Registrations
     * const registrations = await prisma.registrations.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends registrationsFindUniqueArgs>(args: SelectSubset<T, registrationsFindUniqueArgs<ExtArgs>>): Prisma__registrationsClient<$Result.GetResult<Prisma.$registrationsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Registrations that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {registrationsFindUniqueOrThrowArgs} args - Arguments to find a Registrations
     * @example
     * // Get one Registrations
     * const registrations = await prisma.registrations.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends registrationsFindUniqueOrThrowArgs>(args: SelectSubset<T, registrationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__registrationsClient<$Result.GetResult<Prisma.$registrationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Registrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registrationsFindFirstArgs} args - Arguments to find a Registrations
     * @example
     * // Get one Registrations
     * const registrations = await prisma.registrations.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends registrationsFindFirstArgs>(args?: SelectSubset<T, registrationsFindFirstArgs<ExtArgs>>): Prisma__registrationsClient<$Result.GetResult<Prisma.$registrationsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Registrations that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registrationsFindFirstOrThrowArgs} args - Arguments to find a Registrations
     * @example
     * // Get one Registrations
     * const registrations = await prisma.registrations.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends registrationsFindFirstOrThrowArgs>(args?: SelectSubset<T, registrationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__registrationsClient<$Result.GetResult<Prisma.$registrationsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Registrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registrationsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Registrations
     * const registrations = await prisma.registrations.findMany()
     * 
     * // Get first 10 Registrations
     * const registrations = await prisma.registrations.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const registrationsWithIdOnly = await prisma.registrations.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends registrationsFindManyArgs>(args?: SelectSubset<T, registrationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$registrationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Registrations.
     * @param {registrationsCreateArgs} args - Arguments to create a Registrations.
     * @example
     * // Create one Registrations
     * const Registrations = await prisma.registrations.create({
     *   data: {
     *     // ... data to create a Registrations
     *   }
     * })
     * 
     */
    create<T extends registrationsCreateArgs>(args: SelectSubset<T, registrationsCreateArgs<ExtArgs>>): Prisma__registrationsClient<$Result.GetResult<Prisma.$registrationsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Registrations.
     * @param {registrationsCreateManyArgs} args - Arguments to create many Registrations.
     * @example
     * // Create many Registrations
     * const registrations = await prisma.registrations.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends registrationsCreateManyArgs>(args?: SelectSubset<T, registrationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Registrations and returns the data saved in the database.
     * @param {registrationsCreateManyAndReturnArgs} args - Arguments to create many Registrations.
     * @example
     * // Create many Registrations
     * const registrations = await prisma.registrations.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Registrations and only return the `id`
     * const registrationsWithIdOnly = await prisma.registrations.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends registrationsCreateManyAndReturnArgs>(args?: SelectSubset<T, registrationsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$registrationsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Registrations.
     * @param {registrationsDeleteArgs} args - Arguments to delete one Registrations.
     * @example
     * // Delete one Registrations
     * const Registrations = await prisma.registrations.delete({
     *   where: {
     *     // ... filter to delete one Registrations
     *   }
     * })
     * 
     */
    delete<T extends registrationsDeleteArgs>(args: SelectSubset<T, registrationsDeleteArgs<ExtArgs>>): Prisma__registrationsClient<$Result.GetResult<Prisma.$registrationsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Registrations.
     * @param {registrationsUpdateArgs} args - Arguments to update one Registrations.
     * @example
     * // Update one Registrations
     * const registrations = await prisma.registrations.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends registrationsUpdateArgs>(args: SelectSubset<T, registrationsUpdateArgs<ExtArgs>>): Prisma__registrationsClient<$Result.GetResult<Prisma.$registrationsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Registrations.
     * @param {registrationsDeleteManyArgs} args - Arguments to filter Registrations to delete.
     * @example
     * // Delete a few Registrations
     * const { count } = await prisma.registrations.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends registrationsDeleteManyArgs>(args?: SelectSubset<T, registrationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Registrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registrationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Registrations
     * const registrations = await prisma.registrations.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends registrationsUpdateManyArgs>(args: SelectSubset<T, registrationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Registrations and returns the data updated in the database.
     * @param {registrationsUpdateManyAndReturnArgs} args - Arguments to update many Registrations.
     * @example
     * // Update many Registrations
     * const registrations = await prisma.registrations.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Registrations and only return the `id`
     * const registrationsWithIdOnly = await prisma.registrations.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends registrationsUpdateManyAndReturnArgs>(args: SelectSubset<T, registrationsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$registrationsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Registrations.
     * @param {registrationsUpsertArgs} args - Arguments to update or create a Registrations.
     * @example
     * // Update or create a Registrations
     * const registrations = await prisma.registrations.upsert({
     *   create: {
     *     // ... data to create a Registrations
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Registrations we want to update
     *   }
     * })
     */
    upsert<T extends registrationsUpsertArgs>(args: SelectSubset<T, registrationsUpsertArgs<ExtArgs>>): Prisma__registrationsClient<$Result.GetResult<Prisma.$registrationsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Registrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registrationsCountArgs} args - Arguments to filter Registrations to count.
     * @example
     * // Count the number of Registrations
     * const count = await prisma.registrations.count({
     *   where: {
     *     // ... the filter for the Registrations we want to count
     *   }
     * })
    **/
    count<T extends registrationsCountArgs>(
      args?: Subset<T, registrationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RegistrationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Registrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RegistrationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RegistrationsAggregateArgs>(args: Subset<T, RegistrationsAggregateArgs>): Prisma.PrismaPromise<GetRegistrationsAggregateType<T>>

    /**
     * Group by Registrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registrationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends registrationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: registrationsGroupByArgs['orderBy'] }
        : { orderBy?: registrationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, registrationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRegistrationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the registrations model
   */
  readonly fields: registrationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for registrations.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__registrationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    VerificationData<T extends registrations$VerificationDataArgs<ExtArgs> = {}>(args?: Subset<T, registrations$VerificationDataArgs<ExtArgs>>): Prisma__VerificationDataClient<$Result.GetResult<Prisma.$VerificationDataPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    document_uploads<T extends registrations$document_uploadsArgs<ExtArgs> = {}>(args?: Subset<T, registrations$document_uploadsArgs<ExtArgs>>): Prisma__document_uploadsClient<$Result.GetResult<Prisma.$document_uploadsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    employment_info<T extends registrations$employment_infoArgs<ExtArgs> = {}>(args?: Subset<T, registrations$employment_infoArgs<ExtArgs>>): Prisma__employment_infoClient<$Result.GetResult<Prisma.$employment_infoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    personal_info<T extends registrations$personal_infoArgs<ExtArgs> = {}>(args?: Subset<T, registrations$personal_infoArgs<ExtArgs>>): Prisma__personal_infoClient<$Result.GetResult<Prisma.$personal_infoPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    registration_comments<T extends registrations$registration_commentsArgs<ExtArgs> = {}>(args?: Subset<T, registrations$registration_commentsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$registration_commentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    registration_history<T extends registrations$registration_historyArgs<ExtArgs> = {}>(args?: Subset<T, registrations$registration_historyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$registration_historyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the registrations model
   */
  interface registrationsFieldRefs {
    readonly id: FieldRef<"registrations", 'Int'>
    readonly registration_Id: FieldRef<"registrations", 'String'>
    readonly nin: FieldRef<"registrations", 'String'>
    readonly status: FieldRef<"registrations", 'String'>
    readonly current_step: FieldRef<"registrations", 'String'>
    readonly declaration: FieldRef<"registrations", 'Boolean'>
    readonly created_at: FieldRef<"registrations", 'DateTime'>
    readonly updated_at: FieldRef<"registrations", 'DateTime'>
    readonly submitted_at: FieldRef<"registrations", 'DateTime'>
    readonly approved_at: FieldRef<"registrations", 'DateTime'>
    readonly rejected_at: FieldRef<"registrations", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * registrations findUnique
   */
  export type registrationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registrations
     */
    select?: registrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registrations
     */
    omit?: registrationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registrationsInclude<ExtArgs> | null
    /**
     * Filter, which registrations to fetch.
     */
    where: registrationsWhereUniqueInput
  }

  /**
   * registrations findUniqueOrThrow
   */
  export type registrationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registrations
     */
    select?: registrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registrations
     */
    omit?: registrationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registrationsInclude<ExtArgs> | null
    /**
     * Filter, which registrations to fetch.
     */
    where: registrationsWhereUniqueInput
  }

  /**
   * registrations findFirst
   */
  export type registrationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registrations
     */
    select?: registrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registrations
     */
    omit?: registrationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registrationsInclude<ExtArgs> | null
    /**
     * Filter, which registrations to fetch.
     */
    where?: registrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of registrations to fetch.
     */
    orderBy?: registrationsOrderByWithRelationInput | registrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for registrations.
     */
    cursor?: registrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` registrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` registrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of registrations.
     */
    distinct?: RegistrationsScalarFieldEnum | RegistrationsScalarFieldEnum[]
  }

  /**
   * registrations findFirstOrThrow
   */
  export type registrationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registrations
     */
    select?: registrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registrations
     */
    omit?: registrationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registrationsInclude<ExtArgs> | null
    /**
     * Filter, which registrations to fetch.
     */
    where?: registrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of registrations to fetch.
     */
    orderBy?: registrationsOrderByWithRelationInput | registrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for registrations.
     */
    cursor?: registrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` registrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` registrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of registrations.
     */
    distinct?: RegistrationsScalarFieldEnum | RegistrationsScalarFieldEnum[]
  }

  /**
   * registrations findMany
   */
  export type registrationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registrations
     */
    select?: registrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registrations
     */
    omit?: registrationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registrationsInclude<ExtArgs> | null
    /**
     * Filter, which registrations to fetch.
     */
    where?: registrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of registrations to fetch.
     */
    orderBy?: registrationsOrderByWithRelationInput | registrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing registrations.
     */
    cursor?: registrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` registrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` registrations.
     */
    skip?: number
    distinct?: RegistrationsScalarFieldEnum | RegistrationsScalarFieldEnum[]
  }

  /**
   * registrations create
   */
  export type registrationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registrations
     */
    select?: registrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registrations
     */
    omit?: registrationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registrationsInclude<ExtArgs> | null
    /**
     * The data needed to create a registrations.
     */
    data?: XOR<registrationsCreateInput, registrationsUncheckedCreateInput>
  }

  /**
   * registrations createMany
   */
  export type registrationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many registrations.
     */
    data: registrationsCreateManyInput | registrationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * registrations createManyAndReturn
   */
  export type registrationsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registrations
     */
    select?: registrationsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the registrations
     */
    omit?: registrationsOmit<ExtArgs> | null
    /**
     * The data used to create many registrations.
     */
    data: registrationsCreateManyInput | registrationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * registrations update
   */
  export type registrationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registrations
     */
    select?: registrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registrations
     */
    omit?: registrationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registrationsInclude<ExtArgs> | null
    /**
     * The data needed to update a registrations.
     */
    data: XOR<registrationsUpdateInput, registrationsUncheckedUpdateInput>
    /**
     * Choose, which registrations to update.
     */
    where: registrationsWhereUniqueInput
  }

  /**
   * registrations updateMany
   */
  export type registrationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update registrations.
     */
    data: XOR<registrationsUpdateManyMutationInput, registrationsUncheckedUpdateManyInput>
    /**
     * Filter which registrations to update
     */
    where?: registrationsWhereInput
    /**
     * Limit how many registrations to update.
     */
    limit?: number
  }

  /**
   * registrations updateManyAndReturn
   */
  export type registrationsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registrations
     */
    select?: registrationsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the registrations
     */
    omit?: registrationsOmit<ExtArgs> | null
    /**
     * The data used to update registrations.
     */
    data: XOR<registrationsUpdateManyMutationInput, registrationsUncheckedUpdateManyInput>
    /**
     * Filter which registrations to update
     */
    where?: registrationsWhereInput
    /**
     * Limit how many registrations to update.
     */
    limit?: number
  }

  /**
   * registrations upsert
   */
  export type registrationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registrations
     */
    select?: registrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registrations
     */
    omit?: registrationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registrationsInclude<ExtArgs> | null
    /**
     * The filter to search for the registrations to update in case it exists.
     */
    where: registrationsWhereUniqueInput
    /**
     * In case the registrations found by the `where` argument doesn't exist, create a new registrations with this data.
     */
    create: XOR<registrationsCreateInput, registrationsUncheckedCreateInput>
    /**
     * In case the registrations was found with the provided `where` argument, update it with this data.
     */
    update: XOR<registrationsUpdateInput, registrationsUncheckedUpdateInput>
  }

  /**
   * registrations delete
   */
  export type registrationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registrations
     */
    select?: registrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registrations
     */
    omit?: registrationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registrationsInclude<ExtArgs> | null
    /**
     * Filter which registrations to delete.
     */
    where: registrationsWhereUniqueInput
  }

  /**
   * registrations deleteMany
   */
  export type registrationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which registrations to delete
     */
    where?: registrationsWhereInput
    /**
     * Limit how many registrations to delete.
     */
    limit?: number
  }

  /**
   * registrations.VerificationData
   */
  export type registrations$VerificationDataArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationData
     */
    select?: VerificationDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationData
     */
    omit?: VerificationDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VerificationDataInclude<ExtArgs> | null
    where?: VerificationDataWhereInput
  }

  /**
   * registrations.document_uploads
   */
  export type registrations$document_uploadsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the document_uploads
     */
    select?: document_uploadsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the document_uploads
     */
    omit?: document_uploadsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: document_uploadsInclude<ExtArgs> | null
    where?: document_uploadsWhereInput
  }

  /**
   * registrations.employment_info
   */
  export type registrations$employment_infoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employment_info
     */
    select?: employment_infoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employment_info
     */
    omit?: employment_infoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: employment_infoInclude<ExtArgs> | null
    where?: employment_infoWhereInput
  }

  /**
   * registrations.personal_info
   */
  export type registrations$personal_infoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the personal_info
     */
    select?: personal_infoSelect<ExtArgs> | null
    /**
     * Omit specific fields from the personal_info
     */
    omit?: personal_infoOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: personal_infoInclude<ExtArgs> | null
    where?: personal_infoWhereInput
  }

  /**
   * registrations.registration_comments
   */
  export type registrations$registration_commentsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_comments
     */
    select?: registration_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registration_comments
     */
    omit?: registration_commentsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registration_commentsInclude<ExtArgs> | null
    where?: registration_commentsWhereInput
    orderBy?: registration_commentsOrderByWithRelationInput | registration_commentsOrderByWithRelationInput[]
    cursor?: registration_commentsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Registration_commentsScalarFieldEnum | Registration_commentsScalarFieldEnum[]
  }

  /**
   * registrations.registration_history
   */
  export type registrations$registration_historyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_history
     */
    select?: registration_historySelect<ExtArgs> | null
    /**
     * Omit specific fields from the registration_history
     */
    omit?: registration_historyOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registration_historyInclude<ExtArgs> | null
    where?: registration_historyWhereInput
    orderBy?: registration_historyOrderByWithRelationInput | registration_historyOrderByWithRelationInput[]
    cursor?: registration_historyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Registration_historyScalarFieldEnum | Registration_historyScalarFieldEnum[]
  }

  /**
   * registrations without action
   */
  export type registrationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registrations
     */
    select?: registrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the registrations
     */
    omit?: registrationsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: registrationsInclude<ExtArgs> | null
  }


  /**
   * Model VerificationData
   */

  export type AggregateVerificationData = {
    _count: VerificationDataCountAggregateOutputType | null
    _avg: VerificationDataAvgAggregateOutputType | null
    _sum: VerificationDataSumAggregateOutputType | null
    _min: VerificationDataMinAggregateOutputType | null
    _max: VerificationDataMaxAggregateOutputType | null
  }

  export type VerificationDataAvgAggregateOutputType = {
    registration_id: number | null
  }

  export type VerificationDataSumAggregateOutputType = {
    registration_id: number | null
  }

  export type VerificationDataMinAggregateOutputType = {
    id: string | null
    nin: string | null
    vnin: string | null
    title: string | null
    surname: string | null
    email: string | null
    gender: string | null
    state_of_origin: string | null
    religion: string | null
    profession: string | null
    residence_address: string | null
    residence_lga: string | null
    residence_state: string | null
    nok_surname: string | null
    nok_lga: string | null
    nok_state: string | null
    nok_town: string | null
    maiden_name: string | null
    tracking_id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    birthcountry: string | null
    birthdate: string | null
    birthlga: string | null
    birthstate: string | null
    central_iD: string | null
    educationallevel: string | null
    employmentstatus: string | null
    firstname: string | null
    heigth: string | null
    lga_origin: string | null
    maritalstatus: string | null
    middlename: string | null
    nok_address1: string | null
    nok_address2: string | null
    nok_firstname: string | null
    nok_middlename: string | null
    nok_postalcode: string | null
    nspokenlang: string | null
    ospokenlang: string | null
    pfirstname: string | null
    photo: string | null
    pmiddlename: string | null
    psurname: string | null
    residence_AdressLine1: string | null
    residence_Town: string | null
    residencestatus: string | null
    self_origin_lga: string | null
    self_origin_place: string | null
    self_origin_state: string | null
    signature: string | null
    spoken_language: string | null
    telephoneno: string | null
    userid: string | null
    registration_id: number | null
  }

  export type VerificationDataMaxAggregateOutputType = {
    id: string | null
    nin: string | null
    vnin: string | null
    title: string | null
    surname: string | null
    email: string | null
    gender: string | null
    state_of_origin: string | null
    religion: string | null
    profession: string | null
    residence_address: string | null
    residence_lga: string | null
    residence_state: string | null
    nok_surname: string | null
    nok_lga: string | null
    nok_state: string | null
    nok_town: string | null
    maiden_name: string | null
    tracking_id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    birthcountry: string | null
    birthdate: string | null
    birthlga: string | null
    birthstate: string | null
    central_iD: string | null
    educationallevel: string | null
    employmentstatus: string | null
    firstname: string | null
    heigth: string | null
    lga_origin: string | null
    maritalstatus: string | null
    middlename: string | null
    nok_address1: string | null
    nok_address2: string | null
    nok_firstname: string | null
    nok_middlename: string | null
    nok_postalcode: string | null
    nspokenlang: string | null
    ospokenlang: string | null
    pfirstname: string | null
    photo: string | null
    pmiddlename: string | null
    psurname: string | null
    residence_AdressLine1: string | null
    residence_Town: string | null
    residencestatus: string | null
    self_origin_lga: string | null
    self_origin_place: string | null
    self_origin_state: string | null
    signature: string | null
    spoken_language: string | null
    telephoneno: string | null
    userid: string | null
    registration_id: number | null
  }

  export type VerificationDataCountAggregateOutputType = {
    id: number
    nin: number
    vnin: number
    title: number
    surname: number
    email: number
    gender: number
    state_of_origin: number
    religion: number
    profession: number
    residence_address: number
    residence_lga: number
    residence_state: number
    nok_surname: number
    nok_lga: number
    nok_state: number
    nok_town: number
    maiden_name: number
    tracking_id: number
    createdAt: number
    updatedAt: number
    birthcountry: number
    birthdate: number
    birthlga: number
    birthstate: number
    central_iD: number
    educationallevel: number
    employmentstatus: number
    firstname: number
    heigth: number
    lga_origin: number
    maritalstatus: number
    middlename: number
    nok_address1: number
    nok_address2: number
    nok_firstname: number
    nok_middlename: number
    nok_postalcode: number
    nspokenlang: number
    ospokenlang: number
    pfirstname: number
    photo: number
    pmiddlename: number
    psurname: number
    residence_AdressLine1: number
    residence_Town: number
    residencestatus: number
    self_origin_lga: number
    self_origin_place: number
    self_origin_state: number
    signature: number
    spoken_language: number
    telephoneno: number
    userid: number
    registration_id: number
    _all: number
  }


  export type VerificationDataAvgAggregateInputType = {
    registration_id?: true
  }

  export type VerificationDataSumAggregateInputType = {
    registration_id?: true
  }

  export type VerificationDataMinAggregateInputType = {
    id?: true
    nin?: true
    vnin?: true
    title?: true
    surname?: true
    email?: true
    gender?: true
    state_of_origin?: true
    religion?: true
    profession?: true
    residence_address?: true
    residence_lga?: true
    residence_state?: true
    nok_surname?: true
    nok_lga?: true
    nok_state?: true
    nok_town?: true
    maiden_name?: true
    tracking_id?: true
    createdAt?: true
    updatedAt?: true
    birthcountry?: true
    birthdate?: true
    birthlga?: true
    birthstate?: true
    central_iD?: true
    educationallevel?: true
    employmentstatus?: true
    firstname?: true
    heigth?: true
    lga_origin?: true
    maritalstatus?: true
    middlename?: true
    nok_address1?: true
    nok_address2?: true
    nok_firstname?: true
    nok_middlename?: true
    nok_postalcode?: true
    nspokenlang?: true
    ospokenlang?: true
    pfirstname?: true
    photo?: true
    pmiddlename?: true
    psurname?: true
    residence_AdressLine1?: true
    residence_Town?: true
    residencestatus?: true
    self_origin_lga?: true
    self_origin_place?: true
    self_origin_state?: true
    signature?: true
    spoken_language?: true
    telephoneno?: true
    userid?: true
    registration_id?: true
  }

  export type VerificationDataMaxAggregateInputType = {
    id?: true
    nin?: true
    vnin?: true
    title?: true
    surname?: true
    email?: true
    gender?: true
    state_of_origin?: true
    religion?: true
    profession?: true
    residence_address?: true
    residence_lga?: true
    residence_state?: true
    nok_surname?: true
    nok_lga?: true
    nok_state?: true
    nok_town?: true
    maiden_name?: true
    tracking_id?: true
    createdAt?: true
    updatedAt?: true
    birthcountry?: true
    birthdate?: true
    birthlga?: true
    birthstate?: true
    central_iD?: true
    educationallevel?: true
    employmentstatus?: true
    firstname?: true
    heigth?: true
    lga_origin?: true
    maritalstatus?: true
    middlename?: true
    nok_address1?: true
    nok_address2?: true
    nok_firstname?: true
    nok_middlename?: true
    nok_postalcode?: true
    nspokenlang?: true
    ospokenlang?: true
    pfirstname?: true
    photo?: true
    pmiddlename?: true
    psurname?: true
    residence_AdressLine1?: true
    residence_Town?: true
    residencestatus?: true
    self_origin_lga?: true
    self_origin_place?: true
    self_origin_state?: true
    signature?: true
    spoken_language?: true
    telephoneno?: true
    userid?: true
    registration_id?: true
  }

  export type VerificationDataCountAggregateInputType = {
    id?: true
    nin?: true
    vnin?: true
    title?: true
    surname?: true
    email?: true
    gender?: true
    state_of_origin?: true
    religion?: true
    profession?: true
    residence_address?: true
    residence_lga?: true
    residence_state?: true
    nok_surname?: true
    nok_lga?: true
    nok_state?: true
    nok_town?: true
    maiden_name?: true
    tracking_id?: true
    createdAt?: true
    updatedAt?: true
    birthcountry?: true
    birthdate?: true
    birthlga?: true
    birthstate?: true
    central_iD?: true
    educationallevel?: true
    employmentstatus?: true
    firstname?: true
    heigth?: true
    lga_origin?: true
    maritalstatus?: true
    middlename?: true
    nok_address1?: true
    nok_address2?: true
    nok_firstname?: true
    nok_middlename?: true
    nok_postalcode?: true
    nspokenlang?: true
    ospokenlang?: true
    pfirstname?: true
    photo?: true
    pmiddlename?: true
    psurname?: true
    residence_AdressLine1?: true
    residence_Town?: true
    residencestatus?: true
    self_origin_lga?: true
    self_origin_place?: true
    self_origin_state?: true
    signature?: true
    spoken_language?: true
    telephoneno?: true
    userid?: true
    registration_id?: true
    _all?: true
  }

  export type VerificationDataAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VerificationData to aggregate.
     */
    where?: VerificationDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationData to fetch.
     */
    orderBy?: VerificationDataOrderByWithRelationInput | VerificationDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VerificationDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationData.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned VerificationData
    **/
    _count?: true | VerificationDataCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: VerificationDataAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: VerificationDataSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VerificationDataMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VerificationDataMaxAggregateInputType
  }

  export type GetVerificationDataAggregateType<T extends VerificationDataAggregateArgs> = {
        [P in keyof T & keyof AggregateVerificationData]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVerificationData[P]>
      : GetScalarType<T[P], AggregateVerificationData[P]>
  }




  export type VerificationDataGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VerificationDataWhereInput
    orderBy?: VerificationDataOrderByWithAggregationInput | VerificationDataOrderByWithAggregationInput[]
    by: VerificationDataScalarFieldEnum[] | VerificationDataScalarFieldEnum
    having?: VerificationDataScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VerificationDataCountAggregateInputType | true
    _avg?: VerificationDataAvgAggregateInputType
    _sum?: VerificationDataSumAggregateInputType
    _min?: VerificationDataMinAggregateInputType
    _max?: VerificationDataMaxAggregateInputType
  }

  export type VerificationDataGroupByOutputType = {
    id: string
    nin: string | null
    vnin: string | null
    title: string | null
    surname: string | null
    email: string | null
    gender: string | null
    state_of_origin: string | null
    religion: string | null
    profession: string | null
    residence_address: string | null
    residence_lga: string | null
    residence_state: string | null
    nok_surname: string | null
    nok_lga: string | null
    nok_state: string | null
    nok_town: string | null
    maiden_name: string | null
    tracking_id: string | null
    createdAt: Date
    updatedAt: Date
    birthcountry: string | null
    birthdate: string | null
    birthlga: string | null
    birthstate: string | null
    central_iD: string | null
    educationallevel: string | null
    employmentstatus: string | null
    firstname: string | null
    heigth: string | null
    lga_origin: string | null
    maritalstatus: string | null
    middlename: string | null
    nok_address1: string | null
    nok_address2: string | null
    nok_firstname: string | null
    nok_middlename: string | null
    nok_postalcode: string | null
    nspokenlang: string | null
    ospokenlang: string | null
    pfirstname: string | null
    photo: string | null
    pmiddlename: string | null
    psurname: string | null
    residence_AdressLine1: string | null
    residence_Town: string | null
    residencestatus: string | null
    self_origin_lga: string | null
    self_origin_place: string | null
    self_origin_state: string | null
    signature: string | null
    spoken_language: string | null
    telephoneno: string | null
    userid: string | null
    registration_id: number
    _count: VerificationDataCountAggregateOutputType | null
    _avg: VerificationDataAvgAggregateOutputType | null
    _sum: VerificationDataSumAggregateOutputType | null
    _min: VerificationDataMinAggregateOutputType | null
    _max: VerificationDataMaxAggregateOutputType | null
  }

  type GetVerificationDataGroupByPayload<T extends VerificationDataGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VerificationDataGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VerificationDataGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VerificationDataGroupByOutputType[P]>
            : GetScalarType<T[P], VerificationDataGroupByOutputType[P]>
        }
      >
    >


  export type VerificationDataSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nin?: boolean
    vnin?: boolean
    title?: boolean
    surname?: boolean
    email?: boolean
    gender?: boolean
    state_of_origin?: boolean
    religion?: boolean
    profession?: boolean
    residence_address?: boolean
    residence_lga?: boolean
    residence_state?: boolean
    nok_surname?: boolean
    nok_lga?: boolean
    nok_state?: boolean
    nok_town?: boolean
    maiden_name?: boolean
    tracking_id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    birthcountry?: boolean
    birthdate?: boolean
    birthlga?: boolean
    birthstate?: boolean
    central_iD?: boolean
    educationallevel?: boolean
    employmentstatus?: boolean
    firstname?: boolean
    heigth?: boolean
    lga_origin?: boolean
    maritalstatus?: boolean
    middlename?: boolean
    nok_address1?: boolean
    nok_address2?: boolean
    nok_firstname?: boolean
    nok_middlename?: boolean
    nok_postalcode?: boolean
    nspokenlang?: boolean
    ospokenlang?: boolean
    pfirstname?: boolean
    photo?: boolean
    pmiddlename?: boolean
    psurname?: boolean
    residence_AdressLine1?: boolean
    residence_Town?: boolean
    residencestatus?: boolean
    self_origin_lga?: boolean
    self_origin_place?: boolean
    self_origin_state?: boolean
    signature?: boolean
    spoken_language?: boolean
    telephoneno?: boolean
    userid?: boolean
    registration_id?: boolean
    registration?: boolean | registrationsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["verificationData"]>

  export type VerificationDataSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nin?: boolean
    vnin?: boolean
    title?: boolean
    surname?: boolean
    email?: boolean
    gender?: boolean
    state_of_origin?: boolean
    religion?: boolean
    profession?: boolean
    residence_address?: boolean
    residence_lga?: boolean
    residence_state?: boolean
    nok_surname?: boolean
    nok_lga?: boolean
    nok_state?: boolean
    nok_town?: boolean
    maiden_name?: boolean
    tracking_id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    birthcountry?: boolean
    birthdate?: boolean
    birthlga?: boolean
    birthstate?: boolean
    central_iD?: boolean
    educationallevel?: boolean
    employmentstatus?: boolean
    firstname?: boolean
    heigth?: boolean
    lga_origin?: boolean
    maritalstatus?: boolean
    middlename?: boolean
    nok_address1?: boolean
    nok_address2?: boolean
    nok_firstname?: boolean
    nok_middlename?: boolean
    nok_postalcode?: boolean
    nspokenlang?: boolean
    ospokenlang?: boolean
    pfirstname?: boolean
    photo?: boolean
    pmiddlename?: boolean
    psurname?: boolean
    residence_AdressLine1?: boolean
    residence_Town?: boolean
    residencestatus?: boolean
    self_origin_lga?: boolean
    self_origin_place?: boolean
    self_origin_state?: boolean
    signature?: boolean
    spoken_language?: boolean
    telephoneno?: boolean
    userid?: boolean
    registration_id?: boolean
    registration?: boolean | registrationsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["verificationData"]>

  export type VerificationDataSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nin?: boolean
    vnin?: boolean
    title?: boolean
    surname?: boolean
    email?: boolean
    gender?: boolean
    state_of_origin?: boolean
    religion?: boolean
    profession?: boolean
    residence_address?: boolean
    residence_lga?: boolean
    residence_state?: boolean
    nok_surname?: boolean
    nok_lga?: boolean
    nok_state?: boolean
    nok_town?: boolean
    maiden_name?: boolean
    tracking_id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    birthcountry?: boolean
    birthdate?: boolean
    birthlga?: boolean
    birthstate?: boolean
    central_iD?: boolean
    educationallevel?: boolean
    employmentstatus?: boolean
    firstname?: boolean
    heigth?: boolean
    lga_origin?: boolean
    maritalstatus?: boolean
    middlename?: boolean
    nok_address1?: boolean
    nok_address2?: boolean
    nok_firstname?: boolean
    nok_middlename?: boolean
    nok_postalcode?: boolean
    nspokenlang?: boolean
    ospokenlang?: boolean
    pfirstname?: boolean
    photo?: boolean
    pmiddlename?: boolean
    psurname?: boolean
    residence_AdressLine1?: boolean
    residence_Town?: boolean
    residencestatus?: boolean
    self_origin_lga?: boolean
    self_origin_place?: boolean
    self_origin_state?: boolean
    signature?: boolean
    spoken_language?: boolean
    telephoneno?: boolean
    userid?: boolean
    registration_id?: boolean
    registration?: boolean | registrationsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["verificationData"]>

  export type VerificationDataSelectScalar = {
    id?: boolean
    nin?: boolean
    vnin?: boolean
    title?: boolean
    surname?: boolean
    email?: boolean
    gender?: boolean
    state_of_origin?: boolean
    religion?: boolean
    profession?: boolean
    residence_address?: boolean
    residence_lga?: boolean
    residence_state?: boolean
    nok_surname?: boolean
    nok_lga?: boolean
    nok_state?: boolean
    nok_town?: boolean
    maiden_name?: boolean
    tracking_id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    birthcountry?: boolean
    birthdate?: boolean
    birthlga?: boolean
    birthstate?: boolean
    central_iD?: boolean
    educationallevel?: boolean
    employmentstatus?: boolean
    firstname?: boolean
    heigth?: boolean
    lga_origin?: boolean
    maritalstatus?: boolean
    middlename?: boolean
    nok_address1?: boolean
    nok_address2?: boolean
    nok_firstname?: boolean
    nok_middlename?: boolean
    nok_postalcode?: boolean
    nspokenlang?: boolean
    ospokenlang?: boolean
    pfirstname?: boolean
    photo?: boolean
    pmiddlename?: boolean
    psurname?: boolean
    residence_AdressLine1?: boolean
    residence_Town?: boolean
    residencestatus?: boolean
    self_origin_lga?: boolean
    self_origin_place?: boolean
    self_origin_state?: boolean
    signature?: boolean
    spoken_language?: boolean
    telephoneno?: boolean
    userid?: boolean
    registration_id?: boolean
  }

  export type VerificationDataOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "nin" | "vnin" | "title" | "surname" | "email" | "gender" | "state_of_origin" | "religion" | "profession" | "residence_address" | "residence_lga" | "residence_state" | "nok_surname" | "nok_lga" | "nok_state" | "nok_town" | "maiden_name" | "tracking_id" | "createdAt" | "updatedAt" | "birthcountry" | "birthdate" | "birthlga" | "birthstate" | "central_iD" | "educationallevel" | "employmentstatus" | "firstname" | "heigth" | "lga_origin" | "maritalstatus" | "middlename" | "nok_address1" | "nok_address2" | "nok_firstname" | "nok_middlename" | "nok_postalcode" | "nspokenlang" | "ospokenlang" | "pfirstname" | "photo" | "pmiddlename" | "psurname" | "residence_AdressLine1" | "residence_Town" | "residencestatus" | "self_origin_lga" | "self_origin_place" | "self_origin_state" | "signature" | "spoken_language" | "telephoneno" | "userid" | "registration_id", ExtArgs["result"]["verificationData"]>
  export type VerificationDataInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registration?: boolean | registrationsDefaultArgs<ExtArgs>
  }
  export type VerificationDataIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registration?: boolean | registrationsDefaultArgs<ExtArgs>
  }
  export type VerificationDataIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    registration?: boolean | registrationsDefaultArgs<ExtArgs>
  }

  export type $VerificationDataPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "VerificationData"
    objects: {
      registration: Prisma.$registrationsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      nin: string | null
      vnin: string | null
      title: string | null
      surname: string | null
      email: string | null
      gender: string | null
      state_of_origin: string | null
      religion: string | null
      profession: string | null
      residence_address: string | null
      residence_lga: string | null
      residence_state: string | null
      nok_surname: string | null
      nok_lga: string | null
      nok_state: string | null
      nok_town: string | null
      maiden_name: string | null
      tracking_id: string | null
      createdAt: Date
      updatedAt: Date
      birthcountry: string | null
      birthdate: string | null
      birthlga: string | null
      birthstate: string | null
      central_iD: string | null
      educationallevel: string | null
      employmentstatus: string | null
      firstname: string | null
      heigth: string | null
      lga_origin: string | null
      maritalstatus: string | null
      middlename: string | null
      nok_address1: string | null
      nok_address2: string | null
      nok_firstname: string | null
      nok_middlename: string | null
      nok_postalcode: string | null
      nspokenlang: string | null
      ospokenlang: string | null
      pfirstname: string | null
      photo: string | null
      pmiddlename: string | null
      psurname: string | null
      residence_AdressLine1: string | null
      residence_Town: string | null
      residencestatus: string | null
      self_origin_lga: string | null
      self_origin_place: string | null
      self_origin_state: string | null
      signature: string | null
      spoken_language: string | null
      telephoneno: string | null
      userid: string | null
      registration_id: number
    }, ExtArgs["result"]["verificationData"]>
    composites: {}
  }

  type VerificationDataGetPayload<S extends boolean | null | undefined | VerificationDataDefaultArgs> = $Result.GetResult<Prisma.$VerificationDataPayload, S>

  type VerificationDataCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VerificationDataFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VerificationDataCountAggregateInputType | true
    }

  export interface VerificationDataDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VerificationData'], meta: { name: 'VerificationData' } }
    /**
     * Find zero or one VerificationData that matches the filter.
     * @param {VerificationDataFindUniqueArgs} args - Arguments to find a VerificationData
     * @example
     * // Get one VerificationData
     * const verificationData = await prisma.verificationData.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VerificationDataFindUniqueArgs>(args: SelectSubset<T, VerificationDataFindUniqueArgs<ExtArgs>>): Prisma__VerificationDataClient<$Result.GetResult<Prisma.$VerificationDataPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one VerificationData that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VerificationDataFindUniqueOrThrowArgs} args - Arguments to find a VerificationData
     * @example
     * // Get one VerificationData
     * const verificationData = await prisma.verificationData.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VerificationDataFindUniqueOrThrowArgs>(args: SelectSubset<T, VerificationDataFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VerificationDataClient<$Result.GetResult<Prisma.$VerificationDataPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VerificationData that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationDataFindFirstArgs} args - Arguments to find a VerificationData
     * @example
     * // Get one VerificationData
     * const verificationData = await prisma.verificationData.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VerificationDataFindFirstArgs>(args?: SelectSubset<T, VerificationDataFindFirstArgs<ExtArgs>>): Prisma__VerificationDataClient<$Result.GetResult<Prisma.$VerificationDataPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VerificationData that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationDataFindFirstOrThrowArgs} args - Arguments to find a VerificationData
     * @example
     * // Get one VerificationData
     * const verificationData = await prisma.verificationData.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VerificationDataFindFirstOrThrowArgs>(args?: SelectSubset<T, VerificationDataFindFirstOrThrowArgs<ExtArgs>>): Prisma__VerificationDataClient<$Result.GetResult<Prisma.$VerificationDataPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more VerificationData that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationDataFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all VerificationData
     * const verificationData = await prisma.verificationData.findMany()
     * 
     * // Get first 10 VerificationData
     * const verificationData = await prisma.verificationData.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const verificationDataWithIdOnly = await prisma.verificationData.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VerificationDataFindManyArgs>(args?: SelectSubset<T, VerificationDataFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationDataPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a VerificationData.
     * @param {VerificationDataCreateArgs} args - Arguments to create a VerificationData.
     * @example
     * // Create one VerificationData
     * const VerificationData = await prisma.verificationData.create({
     *   data: {
     *     // ... data to create a VerificationData
     *   }
     * })
     * 
     */
    create<T extends VerificationDataCreateArgs>(args: SelectSubset<T, VerificationDataCreateArgs<ExtArgs>>): Prisma__VerificationDataClient<$Result.GetResult<Prisma.$VerificationDataPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many VerificationData.
     * @param {VerificationDataCreateManyArgs} args - Arguments to create many VerificationData.
     * @example
     * // Create many VerificationData
     * const verificationData = await prisma.verificationData.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VerificationDataCreateManyArgs>(args?: SelectSubset<T, VerificationDataCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many VerificationData and returns the data saved in the database.
     * @param {VerificationDataCreateManyAndReturnArgs} args - Arguments to create many VerificationData.
     * @example
     * // Create many VerificationData
     * const verificationData = await prisma.verificationData.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many VerificationData and only return the `id`
     * const verificationDataWithIdOnly = await prisma.verificationData.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VerificationDataCreateManyAndReturnArgs>(args?: SelectSubset<T, VerificationDataCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationDataPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a VerificationData.
     * @param {VerificationDataDeleteArgs} args - Arguments to delete one VerificationData.
     * @example
     * // Delete one VerificationData
     * const VerificationData = await prisma.verificationData.delete({
     *   where: {
     *     // ... filter to delete one VerificationData
     *   }
     * })
     * 
     */
    delete<T extends VerificationDataDeleteArgs>(args: SelectSubset<T, VerificationDataDeleteArgs<ExtArgs>>): Prisma__VerificationDataClient<$Result.GetResult<Prisma.$VerificationDataPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one VerificationData.
     * @param {VerificationDataUpdateArgs} args - Arguments to update one VerificationData.
     * @example
     * // Update one VerificationData
     * const verificationData = await prisma.verificationData.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VerificationDataUpdateArgs>(args: SelectSubset<T, VerificationDataUpdateArgs<ExtArgs>>): Prisma__VerificationDataClient<$Result.GetResult<Prisma.$VerificationDataPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more VerificationData.
     * @param {VerificationDataDeleteManyArgs} args - Arguments to filter VerificationData to delete.
     * @example
     * // Delete a few VerificationData
     * const { count } = await prisma.verificationData.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VerificationDataDeleteManyArgs>(args?: SelectSubset<T, VerificationDataDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VerificationData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationDataUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many VerificationData
     * const verificationData = await prisma.verificationData.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VerificationDataUpdateManyArgs>(args: SelectSubset<T, VerificationDataUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VerificationData and returns the data updated in the database.
     * @param {VerificationDataUpdateManyAndReturnArgs} args - Arguments to update many VerificationData.
     * @example
     * // Update many VerificationData
     * const verificationData = await prisma.verificationData.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more VerificationData and only return the `id`
     * const verificationDataWithIdOnly = await prisma.verificationData.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends VerificationDataUpdateManyAndReturnArgs>(args: SelectSubset<T, VerificationDataUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationDataPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one VerificationData.
     * @param {VerificationDataUpsertArgs} args - Arguments to update or create a VerificationData.
     * @example
     * // Update or create a VerificationData
     * const verificationData = await prisma.verificationData.upsert({
     *   create: {
     *     // ... data to create a VerificationData
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the VerificationData we want to update
     *   }
     * })
     */
    upsert<T extends VerificationDataUpsertArgs>(args: SelectSubset<T, VerificationDataUpsertArgs<ExtArgs>>): Prisma__VerificationDataClient<$Result.GetResult<Prisma.$VerificationDataPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of VerificationData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationDataCountArgs} args - Arguments to filter VerificationData to count.
     * @example
     * // Count the number of VerificationData
     * const count = await prisma.verificationData.count({
     *   where: {
     *     // ... the filter for the VerificationData we want to count
     *   }
     * })
    **/
    count<T extends VerificationDataCountArgs>(
      args?: Subset<T, VerificationDataCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VerificationDataCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a VerificationData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationDataAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VerificationDataAggregateArgs>(args: Subset<T, VerificationDataAggregateArgs>): Prisma.PrismaPromise<GetVerificationDataAggregateType<T>>

    /**
     * Group by VerificationData.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationDataGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VerificationDataGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VerificationDataGroupByArgs['orderBy'] }
        : { orderBy?: VerificationDataGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VerificationDataGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVerificationDataGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the VerificationData model
   */
  readonly fields: VerificationDataFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for VerificationData.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VerificationDataClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    registration<T extends registrationsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, registrationsDefaultArgs<ExtArgs>>): Prisma__registrationsClient<$Result.GetResult<Prisma.$registrationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the VerificationData model
   */
  interface VerificationDataFieldRefs {
    readonly id: FieldRef<"VerificationData", 'String'>
    readonly nin: FieldRef<"VerificationData", 'String'>
    readonly vnin: FieldRef<"VerificationData", 'String'>
    readonly title: FieldRef<"VerificationData", 'String'>
    readonly surname: FieldRef<"VerificationData", 'String'>
    readonly email: FieldRef<"VerificationData", 'String'>
    readonly gender: FieldRef<"VerificationData", 'String'>
    readonly state_of_origin: FieldRef<"VerificationData", 'String'>
    readonly religion: FieldRef<"VerificationData", 'String'>
    readonly profession: FieldRef<"VerificationData", 'String'>
    readonly residence_address: FieldRef<"VerificationData", 'String'>
    readonly residence_lga: FieldRef<"VerificationData", 'String'>
    readonly residence_state: FieldRef<"VerificationData", 'String'>
    readonly nok_surname: FieldRef<"VerificationData", 'String'>
    readonly nok_lga: FieldRef<"VerificationData", 'String'>
    readonly nok_state: FieldRef<"VerificationData", 'String'>
    readonly nok_town: FieldRef<"VerificationData", 'String'>
    readonly maiden_name: FieldRef<"VerificationData", 'String'>
    readonly tracking_id: FieldRef<"VerificationData", 'String'>
    readonly createdAt: FieldRef<"VerificationData", 'DateTime'>
    readonly updatedAt: FieldRef<"VerificationData", 'DateTime'>
    readonly birthcountry: FieldRef<"VerificationData", 'String'>
    readonly birthdate: FieldRef<"VerificationData", 'String'>
    readonly birthlga: FieldRef<"VerificationData", 'String'>
    readonly birthstate: FieldRef<"VerificationData", 'String'>
    readonly central_iD: FieldRef<"VerificationData", 'String'>
    readonly educationallevel: FieldRef<"VerificationData", 'String'>
    readonly employmentstatus: FieldRef<"VerificationData", 'String'>
    readonly firstname: FieldRef<"VerificationData", 'String'>
    readonly heigth: FieldRef<"VerificationData", 'String'>
    readonly lga_origin: FieldRef<"VerificationData", 'String'>
    readonly maritalstatus: FieldRef<"VerificationData", 'String'>
    readonly middlename: FieldRef<"VerificationData", 'String'>
    readonly nok_address1: FieldRef<"VerificationData", 'String'>
    readonly nok_address2: FieldRef<"VerificationData", 'String'>
    readonly nok_firstname: FieldRef<"VerificationData", 'String'>
    readonly nok_middlename: FieldRef<"VerificationData", 'String'>
    readonly nok_postalcode: FieldRef<"VerificationData", 'String'>
    readonly nspokenlang: FieldRef<"VerificationData", 'String'>
    readonly ospokenlang: FieldRef<"VerificationData", 'String'>
    readonly pfirstname: FieldRef<"VerificationData", 'String'>
    readonly photo: FieldRef<"VerificationData", 'String'>
    readonly pmiddlename: FieldRef<"VerificationData", 'String'>
    readonly psurname: FieldRef<"VerificationData", 'String'>
    readonly residence_AdressLine1: FieldRef<"VerificationData", 'String'>
    readonly residence_Town: FieldRef<"VerificationData", 'String'>
    readonly residencestatus: FieldRef<"VerificationData", 'String'>
    readonly self_origin_lga: FieldRef<"VerificationData", 'String'>
    readonly self_origin_place: FieldRef<"VerificationData", 'String'>
    readonly self_origin_state: FieldRef<"VerificationData", 'String'>
    readonly signature: FieldRef<"VerificationData", 'String'>
    readonly spoken_language: FieldRef<"VerificationData", 'String'>
    readonly telephoneno: FieldRef<"VerificationData", 'String'>
    readonly userid: FieldRef<"VerificationData", 'String'>
    readonly registration_id: FieldRef<"VerificationData", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * VerificationData findUnique
   */
  export type VerificationDataFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationData
     */
    select?: VerificationDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationData
     */
    omit?: VerificationDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VerificationDataInclude<ExtArgs> | null
    /**
     * Filter, which VerificationData to fetch.
     */
    where: VerificationDataWhereUniqueInput
  }

  /**
   * VerificationData findUniqueOrThrow
   */
  export type VerificationDataFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationData
     */
    select?: VerificationDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationData
     */
    omit?: VerificationDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VerificationDataInclude<ExtArgs> | null
    /**
     * Filter, which VerificationData to fetch.
     */
    where: VerificationDataWhereUniqueInput
  }

  /**
   * VerificationData findFirst
   */
  export type VerificationDataFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationData
     */
    select?: VerificationDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationData
     */
    omit?: VerificationDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VerificationDataInclude<ExtArgs> | null
    /**
     * Filter, which VerificationData to fetch.
     */
    where?: VerificationDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationData to fetch.
     */
    orderBy?: VerificationDataOrderByWithRelationInput | VerificationDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VerificationData.
     */
    cursor?: VerificationDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationData.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VerificationData.
     */
    distinct?: VerificationDataScalarFieldEnum | VerificationDataScalarFieldEnum[]
  }

  /**
   * VerificationData findFirstOrThrow
   */
  export type VerificationDataFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationData
     */
    select?: VerificationDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationData
     */
    omit?: VerificationDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VerificationDataInclude<ExtArgs> | null
    /**
     * Filter, which VerificationData to fetch.
     */
    where?: VerificationDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationData to fetch.
     */
    orderBy?: VerificationDataOrderByWithRelationInput | VerificationDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VerificationData.
     */
    cursor?: VerificationDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationData.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VerificationData.
     */
    distinct?: VerificationDataScalarFieldEnum | VerificationDataScalarFieldEnum[]
  }

  /**
   * VerificationData findMany
   */
  export type VerificationDataFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationData
     */
    select?: VerificationDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationData
     */
    omit?: VerificationDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VerificationDataInclude<ExtArgs> | null
    /**
     * Filter, which VerificationData to fetch.
     */
    where?: VerificationDataWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationData to fetch.
     */
    orderBy?: VerificationDataOrderByWithRelationInput | VerificationDataOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing VerificationData.
     */
    cursor?: VerificationDataWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationData from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationData.
     */
    skip?: number
    distinct?: VerificationDataScalarFieldEnum | VerificationDataScalarFieldEnum[]
  }

  /**
   * VerificationData create
   */
  export type VerificationDataCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationData
     */
    select?: VerificationDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationData
     */
    omit?: VerificationDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VerificationDataInclude<ExtArgs> | null
    /**
     * The data needed to create a VerificationData.
     */
    data: XOR<VerificationDataCreateInput, VerificationDataUncheckedCreateInput>
  }

  /**
   * VerificationData createMany
   */
  export type VerificationDataCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many VerificationData.
     */
    data: VerificationDataCreateManyInput | VerificationDataCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VerificationData createManyAndReturn
   */
  export type VerificationDataCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationData
     */
    select?: VerificationDataSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationData
     */
    omit?: VerificationDataOmit<ExtArgs> | null
    /**
     * The data used to create many VerificationData.
     */
    data: VerificationDataCreateManyInput | VerificationDataCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VerificationDataIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * VerificationData update
   */
  export type VerificationDataUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationData
     */
    select?: VerificationDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationData
     */
    omit?: VerificationDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VerificationDataInclude<ExtArgs> | null
    /**
     * The data needed to update a VerificationData.
     */
    data: XOR<VerificationDataUpdateInput, VerificationDataUncheckedUpdateInput>
    /**
     * Choose, which VerificationData to update.
     */
    where: VerificationDataWhereUniqueInput
  }

  /**
   * VerificationData updateMany
   */
  export type VerificationDataUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update VerificationData.
     */
    data: XOR<VerificationDataUpdateManyMutationInput, VerificationDataUncheckedUpdateManyInput>
    /**
     * Filter which VerificationData to update
     */
    where?: VerificationDataWhereInput
    /**
     * Limit how many VerificationData to update.
     */
    limit?: number
  }

  /**
   * VerificationData updateManyAndReturn
   */
  export type VerificationDataUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationData
     */
    select?: VerificationDataSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationData
     */
    omit?: VerificationDataOmit<ExtArgs> | null
    /**
     * The data used to update VerificationData.
     */
    data: XOR<VerificationDataUpdateManyMutationInput, VerificationDataUncheckedUpdateManyInput>
    /**
     * Filter which VerificationData to update
     */
    where?: VerificationDataWhereInput
    /**
     * Limit how many VerificationData to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VerificationDataIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * VerificationData upsert
   */
  export type VerificationDataUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationData
     */
    select?: VerificationDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationData
     */
    omit?: VerificationDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VerificationDataInclude<ExtArgs> | null
    /**
     * The filter to search for the VerificationData to update in case it exists.
     */
    where: VerificationDataWhereUniqueInput
    /**
     * In case the VerificationData found by the `where` argument doesn't exist, create a new VerificationData with this data.
     */
    create: XOR<VerificationDataCreateInput, VerificationDataUncheckedCreateInput>
    /**
     * In case the VerificationData was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VerificationDataUpdateInput, VerificationDataUncheckedUpdateInput>
  }

  /**
   * VerificationData delete
   */
  export type VerificationDataDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationData
     */
    select?: VerificationDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationData
     */
    omit?: VerificationDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VerificationDataInclude<ExtArgs> | null
    /**
     * Filter which VerificationData to delete.
     */
    where: VerificationDataWhereUniqueInput
  }

  /**
   * VerificationData deleteMany
   */
  export type VerificationDataDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VerificationData to delete
     */
    where?: VerificationDataWhereInput
    /**
     * Limit how many VerificationData to delete.
     */
    limit?: number
  }

  /**
   * VerificationData without action
   */
  export type VerificationDataDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationData
     */
    select?: VerificationDataSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationData
     */
    omit?: VerificationDataOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: VerificationDataInclude<ExtArgs> | null
  }


  /**
   * Model Account
   */

  export type AggregateAccount = {
    _count: AccountCountAggregateOutputType | null
    _avg: AccountAvgAggregateOutputType | null
    _sum: AccountSumAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  export type AccountAvgAggregateOutputType = {
    balance: number | null
    previousBalance: number | null
  }

  export type AccountSumAggregateOutputType = {
    balance: number | null
    previousBalance: number | null
  }

  export type AccountMinAggregateOutputType = {
    id: string | null
    accountName: string | null
    accountNumber: string | null
    bankName: string | null
    accountType: string | null
    currency: string | null
    balance: number | null
    openingDate: Date | null
    status: string | null
    branchCode: string | null
    swiftCode: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    previousBalance: number | null
  }

  export type AccountMaxAggregateOutputType = {
    id: string | null
    accountName: string | null
    accountNumber: string | null
    bankName: string | null
    accountType: string | null
    currency: string | null
    balance: number | null
    openingDate: Date | null
    status: string | null
    branchCode: string | null
    swiftCode: string | null
    description: string | null
    createdAt: Date | null
    updatedAt: Date | null
    previousBalance: number | null
  }

  export type AccountCountAggregateOutputType = {
    id: number
    accountName: number
    accountNumber: number
    bankName: number
    accountType: number
    currency: number
    balance: number
    openingDate: number
    status: number
    branchCode: number
    swiftCode: number
    description: number
    createdAt: number
    updatedAt: number
    previousBalance: number
    _all: number
  }


  export type AccountAvgAggregateInputType = {
    balance?: true
    previousBalance?: true
  }

  export type AccountSumAggregateInputType = {
    balance?: true
    previousBalance?: true
  }

  export type AccountMinAggregateInputType = {
    id?: true
    accountName?: true
    accountNumber?: true
    bankName?: true
    accountType?: true
    currency?: true
    balance?: true
    openingDate?: true
    status?: true
    branchCode?: true
    swiftCode?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    previousBalance?: true
  }

  export type AccountMaxAggregateInputType = {
    id?: true
    accountName?: true
    accountNumber?: true
    bankName?: true
    accountType?: true
    currency?: true
    balance?: true
    openingDate?: true
    status?: true
    branchCode?: true
    swiftCode?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    previousBalance?: true
  }

  export type AccountCountAggregateInputType = {
    id?: true
    accountName?: true
    accountNumber?: true
    bankName?: true
    accountType?: true
    currency?: true
    balance?: true
    openingDate?: true
    status?: true
    branchCode?: true
    swiftCode?: true
    description?: true
    createdAt?: true
    updatedAt?: true
    previousBalance?: true
    _all?: true
  }

  export type AccountAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Account to aggregate.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Accounts
    **/
    _count?: true | AccountCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AccountAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AccountSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AccountMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AccountMaxAggregateInputType
  }

  export type GetAccountAggregateType<T extends AccountAggregateArgs> = {
        [P in keyof T & keyof AggregateAccount]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccount[P]>
      : GetScalarType<T[P], AggregateAccount[P]>
  }




  export type AccountGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountWhereInput
    orderBy?: AccountOrderByWithAggregationInput | AccountOrderByWithAggregationInput[]
    by: AccountScalarFieldEnum[] | AccountScalarFieldEnum
    having?: AccountScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AccountCountAggregateInputType | true
    _avg?: AccountAvgAggregateInputType
    _sum?: AccountSumAggregateInputType
    _min?: AccountMinAggregateInputType
    _max?: AccountMaxAggregateInputType
  }

  export type AccountGroupByOutputType = {
    id: string
    accountName: string
    accountNumber: string
    bankName: string
    accountType: string
    currency: string
    balance: number
    openingDate: Date
    status: string
    branchCode: string | null
    swiftCode: string | null
    description: string | null
    createdAt: Date
    updatedAt: Date
    previousBalance: number | null
    _count: AccountCountAggregateOutputType | null
    _avg: AccountAvgAggregateOutputType | null
    _sum: AccountSumAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  type GetAccountGroupByPayload<T extends AccountGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AccountGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AccountGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AccountGroupByOutputType[P]>
            : GetScalarType<T[P], AccountGroupByOutputType[P]>
        }
      >
    >


  export type AccountSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    accountName?: boolean
    accountNumber?: boolean
    bankName?: boolean
    accountType?: boolean
    currency?: boolean
    balance?: boolean
    openingDate?: boolean
    status?: boolean
    branchCode?: boolean
    swiftCode?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    previousBalance?: boolean
  }, ExtArgs["result"]["account"]>

  export type AccountSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    accountName?: boolean
    accountNumber?: boolean
    bankName?: boolean
    accountType?: boolean
    currency?: boolean
    balance?: boolean
    openingDate?: boolean
    status?: boolean
    branchCode?: boolean
    swiftCode?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    previousBalance?: boolean
  }, ExtArgs["result"]["account"]>

  export type AccountSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    accountName?: boolean
    accountNumber?: boolean
    bankName?: boolean
    accountType?: boolean
    currency?: boolean
    balance?: boolean
    openingDate?: boolean
    status?: boolean
    branchCode?: boolean
    swiftCode?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    previousBalance?: boolean
  }, ExtArgs["result"]["account"]>

  export type AccountSelectScalar = {
    id?: boolean
    accountName?: boolean
    accountNumber?: boolean
    bankName?: boolean
    accountType?: boolean
    currency?: boolean
    balance?: boolean
    openingDate?: boolean
    status?: boolean
    branchCode?: boolean
    swiftCode?: boolean
    description?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    previousBalance?: boolean
  }

  export type AccountOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "accountName" | "accountNumber" | "bankName" | "accountType" | "currency" | "balance" | "openingDate" | "status" | "branchCode" | "swiftCode" | "description" | "createdAt" | "updatedAt" | "previousBalance", ExtArgs["result"]["account"]>

  export type $AccountPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Account"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      accountName: string
      accountNumber: string
      bankName: string
      accountType: string
      currency: string
      balance: number
      openingDate: Date
      status: string
      branchCode: string | null
      swiftCode: string | null
      description: string | null
      createdAt: Date
      updatedAt: Date
      previousBalance: number | null
    }, ExtArgs["result"]["account"]>
    composites: {}
  }

  type AccountGetPayload<S extends boolean | null | undefined | AccountDefaultArgs> = $Result.GetResult<Prisma.$AccountPayload, S>

  type AccountCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AccountFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AccountCountAggregateInputType | true
    }

  export interface AccountDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Account'], meta: { name: 'Account' } }
    /**
     * Find zero or one Account that matches the filter.
     * @param {AccountFindUniqueArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AccountFindUniqueArgs>(args: SelectSubset<T, AccountFindUniqueArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Account that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AccountFindUniqueOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AccountFindUniqueOrThrowArgs>(args: SelectSubset<T, AccountFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Account that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AccountFindFirstArgs>(args?: SelectSubset<T, AccountFindFirstArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Account that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AccountFindFirstOrThrowArgs>(args?: SelectSubset<T, AccountFindFirstOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Accounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Accounts
     * const accounts = await prisma.account.findMany()
     * 
     * // Get first 10 Accounts
     * const accounts = await prisma.account.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const accountWithIdOnly = await prisma.account.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AccountFindManyArgs>(args?: SelectSubset<T, AccountFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Account.
     * @param {AccountCreateArgs} args - Arguments to create a Account.
     * @example
     * // Create one Account
     * const Account = await prisma.account.create({
     *   data: {
     *     // ... data to create a Account
     *   }
     * })
     * 
     */
    create<T extends AccountCreateArgs>(args: SelectSubset<T, AccountCreateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Accounts.
     * @param {AccountCreateManyArgs} args - Arguments to create many Accounts.
     * @example
     * // Create many Accounts
     * const account = await prisma.account.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AccountCreateManyArgs>(args?: SelectSubset<T, AccountCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Accounts and returns the data saved in the database.
     * @param {AccountCreateManyAndReturnArgs} args - Arguments to create many Accounts.
     * @example
     * // Create many Accounts
     * const account = await prisma.account.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Accounts and only return the `id`
     * const accountWithIdOnly = await prisma.account.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AccountCreateManyAndReturnArgs>(args?: SelectSubset<T, AccountCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Account.
     * @param {AccountDeleteArgs} args - Arguments to delete one Account.
     * @example
     * // Delete one Account
     * const Account = await prisma.account.delete({
     *   where: {
     *     // ... filter to delete one Account
     *   }
     * })
     * 
     */
    delete<T extends AccountDeleteArgs>(args: SelectSubset<T, AccountDeleteArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Account.
     * @param {AccountUpdateArgs} args - Arguments to update one Account.
     * @example
     * // Update one Account
     * const account = await prisma.account.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AccountUpdateArgs>(args: SelectSubset<T, AccountUpdateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Accounts.
     * @param {AccountDeleteManyArgs} args - Arguments to filter Accounts to delete.
     * @example
     * // Delete a few Accounts
     * const { count } = await prisma.account.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AccountDeleteManyArgs>(args?: SelectSubset<T, AccountDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Accounts
     * const account = await prisma.account.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AccountUpdateManyArgs>(args: SelectSubset<T, AccountUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accounts and returns the data updated in the database.
     * @param {AccountUpdateManyAndReturnArgs} args - Arguments to update many Accounts.
     * @example
     * // Update many Accounts
     * const account = await prisma.account.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Accounts and only return the `id`
     * const accountWithIdOnly = await prisma.account.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AccountUpdateManyAndReturnArgs>(args: SelectSubset<T, AccountUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Account.
     * @param {AccountUpsertArgs} args - Arguments to update or create a Account.
     * @example
     * // Update or create a Account
     * const account = await prisma.account.upsert({
     *   create: {
     *     // ... data to create a Account
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Account we want to update
     *   }
     * })
     */
    upsert<T extends AccountUpsertArgs>(args: SelectSubset<T, AccountUpsertArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountCountArgs} args - Arguments to filter Accounts to count.
     * @example
     * // Count the number of Accounts
     * const count = await prisma.account.count({
     *   where: {
     *     // ... the filter for the Accounts we want to count
     *   }
     * })
    **/
    count<T extends AccountCountArgs>(
      args?: Subset<T, AccountCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AccountCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AccountAggregateArgs>(args: Subset<T, AccountAggregateArgs>): Prisma.PrismaPromise<GetAccountAggregateType<T>>

    /**
     * Group by Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AccountGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AccountGroupByArgs['orderBy'] }
        : { orderBy?: AccountGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AccountGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccountGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Account model
   */
  readonly fields: AccountFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Account.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AccountClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Account model
   */
  interface AccountFieldRefs {
    readonly id: FieldRef<"Account", 'String'>
    readonly accountName: FieldRef<"Account", 'String'>
    readonly accountNumber: FieldRef<"Account", 'String'>
    readonly bankName: FieldRef<"Account", 'String'>
    readonly accountType: FieldRef<"Account", 'String'>
    readonly currency: FieldRef<"Account", 'String'>
    readonly balance: FieldRef<"Account", 'Float'>
    readonly openingDate: FieldRef<"Account", 'DateTime'>
    readonly status: FieldRef<"Account", 'String'>
    readonly branchCode: FieldRef<"Account", 'String'>
    readonly swiftCode: FieldRef<"Account", 'String'>
    readonly description: FieldRef<"Account", 'String'>
    readonly createdAt: FieldRef<"Account", 'DateTime'>
    readonly updatedAt: FieldRef<"Account", 'DateTime'>
    readonly previousBalance: FieldRef<"Account", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * Account findUnique
   */
  export type AccountFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findUniqueOrThrow
   */
  export type AccountFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findFirst
   */
  export type AccountFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findFirstOrThrow
   */
  export type AccountFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findMany
   */
  export type AccountFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Filter, which Accounts to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account create
   */
  export type AccountCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * The data needed to create a Account.
     */
    data: XOR<AccountCreateInput, AccountUncheckedCreateInput>
  }

  /**
   * Account createMany
   */
  export type AccountCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Accounts.
     */
    data: AccountCreateManyInput | AccountCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Account createManyAndReturn
   */
  export type AccountCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * The data used to create many Accounts.
     */
    data: AccountCreateManyInput | AccountCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Account update
   */
  export type AccountUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * The data needed to update a Account.
     */
    data: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
    /**
     * Choose, which Account to update.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account updateMany
   */
  export type AccountUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Accounts.
     */
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyInput>
    /**
     * Filter which Accounts to update
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to update.
     */
    limit?: number
  }

  /**
   * Account updateManyAndReturn
   */
  export type AccountUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * The data used to update Accounts.
     */
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyInput>
    /**
     * Filter which Accounts to update
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to update.
     */
    limit?: number
  }

  /**
   * Account upsert
   */
  export type AccountUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * The filter to search for the Account to update in case it exists.
     */
    where: AccountWhereUniqueInput
    /**
     * In case the Account found by the `where` argument doesn't exist, create a new Account with this data.
     */
    create: XOR<AccountCreateInput, AccountUncheckedCreateInput>
    /**
     * In case the Account was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
  }

  /**
   * Account delete
   */
  export type AccountDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Filter which Account to delete.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account deleteMany
   */
  export type AccountDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Accounts to delete
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to delete.
     */
    limit?: number
  }

  /**
   * Account without action
   */
  export type AccountDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
  }


  /**
   * Model employee_payments
   */

  export type AggregateEmployee_payments = {
    _count: Employee_paymentsCountAggregateOutputType | null
    _avg: Employee_paymentsAvgAggregateOutputType | null
    _sum: Employee_paymentsSumAggregateOutputType | null
    _min: Employee_paymentsMinAggregateOutputType | null
    _max: Employee_paymentsMaxAggregateOutputType | null
  }

  export type Employee_paymentsAvgAggregateOutputType = {
    basic_salary: Decimal | null
    house_rent_allowance: Decimal | null
    medical_allowance: Decimal | null
    travel_allowance: Decimal | null
    dearness_allowance: Decimal | null
    provident_fund: Decimal | null
    income_tax: Decimal | null
    health_insurance: Decimal | null
    loan_deduction: Decimal | null
  }

  export type Employee_paymentsSumAggregateOutputType = {
    basic_salary: Decimal | null
    house_rent_allowance: Decimal | null
    medical_allowance: Decimal | null
    travel_allowance: Decimal | null
    dearness_allowance: Decimal | null
    provident_fund: Decimal | null
    income_tax: Decimal | null
    health_insurance: Decimal | null
    loan_deduction: Decimal | null
  }

  export type Employee_paymentsMinAggregateOutputType = {
    id: string | null
    employee_id: string | null
    payment_type: string | null
    payment_method: string | null
    payment_date: Date | null
    basic_salary: Decimal | null
    house_rent_allowance: Decimal | null
    medical_allowance: Decimal | null
    travel_allowance: Decimal | null
    dearness_allowance: Decimal | null
    provident_fund: Decimal | null
    income_tax: Decimal | null
    health_insurance: Decimal | null
    loan_deduction: Decimal | null
    comments: string | null
    created_at: Date | null
  }

  export type Employee_paymentsMaxAggregateOutputType = {
    id: string | null
    employee_id: string | null
    payment_type: string | null
    payment_method: string | null
    payment_date: Date | null
    basic_salary: Decimal | null
    house_rent_allowance: Decimal | null
    medical_allowance: Decimal | null
    travel_allowance: Decimal | null
    dearness_allowance: Decimal | null
    provident_fund: Decimal | null
    income_tax: Decimal | null
    health_insurance: Decimal | null
    loan_deduction: Decimal | null
    comments: string | null
    created_at: Date | null
  }

  export type Employee_paymentsCountAggregateOutputType = {
    id: number
    employee_id: number
    payment_type: number
    payment_method: number
    payment_date: number
    basic_salary: number
    house_rent_allowance: number
    medical_allowance: number
    travel_allowance: number
    dearness_allowance: number
    provident_fund: number
    income_tax: number
    health_insurance: number
    loan_deduction: number
    comments: number
    created_at: number
    _all: number
  }


  export type Employee_paymentsAvgAggregateInputType = {
    basic_salary?: true
    house_rent_allowance?: true
    medical_allowance?: true
    travel_allowance?: true
    dearness_allowance?: true
    provident_fund?: true
    income_tax?: true
    health_insurance?: true
    loan_deduction?: true
  }

  export type Employee_paymentsSumAggregateInputType = {
    basic_salary?: true
    house_rent_allowance?: true
    medical_allowance?: true
    travel_allowance?: true
    dearness_allowance?: true
    provident_fund?: true
    income_tax?: true
    health_insurance?: true
    loan_deduction?: true
  }

  export type Employee_paymentsMinAggregateInputType = {
    id?: true
    employee_id?: true
    payment_type?: true
    payment_method?: true
    payment_date?: true
    basic_salary?: true
    house_rent_allowance?: true
    medical_allowance?: true
    travel_allowance?: true
    dearness_allowance?: true
    provident_fund?: true
    income_tax?: true
    health_insurance?: true
    loan_deduction?: true
    comments?: true
    created_at?: true
  }

  export type Employee_paymentsMaxAggregateInputType = {
    id?: true
    employee_id?: true
    payment_type?: true
    payment_method?: true
    payment_date?: true
    basic_salary?: true
    house_rent_allowance?: true
    medical_allowance?: true
    travel_allowance?: true
    dearness_allowance?: true
    provident_fund?: true
    income_tax?: true
    health_insurance?: true
    loan_deduction?: true
    comments?: true
    created_at?: true
  }

  export type Employee_paymentsCountAggregateInputType = {
    id?: true
    employee_id?: true
    payment_type?: true
    payment_method?: true
    payment_date?: true
    basic_salary?: true
    house_rent_allowance?: true
    medical_allowance?: true
    travel_allowance?: true
    dearness_allowance?: true
    provident_fund?: true
    income_tax?: true
    health_insurance?: true
    loan_deduction?: true
    comments?: true
    created_at?: true
    _all?: true
  }

  export type Employee_paymentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which employee_payments to aggregate.
     */
    where?: employee_paymentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of employee_payments to fetch.
     */
    orderBy?: employee_paymentsOrderByWithRelationInput | employee_paymentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: employee_paymentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` employee_payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` employee_payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned employee_payments
    **/
    _count?: true | Employee_paymentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Employee_paymentsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Employee_paymentsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Employee_paymentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Employee_paymentsMaxAggregateInputType
  }

  export type GetEmployee_paymentsAggregateType<T extends Employee_paymentsAggregateArgs> = {
        [P in keyof T & keyof AggregateEmployee_payments]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEmployee_payments[P]>
      : GetScalarType<T[P], AggregateEmployee_payments[P]>
  }




  export type employee_paymentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: employee_paymentsWhereInput
    orderBy?: employee_paymentsOrderByWithAggregationInput | employee_paymentsOrderByWithAggregationInput[]
    by: Employee_paymentsScalarFieldEnum[] | Employee_paymentsScalarFieldEnum
    having?: employee_paymentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Employee_paymentsCountAggregateInputType | true
    _avg?: Employee_paymentsAvgAggregateInputType
    _sum?: Employee_paymentsSumAggregateInputType
    _min?: Employee_paymentsMinAggregateInputType
    _max?: Employee_paymentsMaxAggregateInputType
  }

  export type Employee_paymentsGroupByOutputType = {
    id: string
    employee_id: string
    payment_type: string
    payment_method: string
    payment_date: Date
    basic_salary: Decimal | null
    house_rent_allowance: Decimal | null
    medical_allowance: Decimal | null
    travel_allowance: Decimal | null
    dearness_allowance: Decimal | null
    provident_fund: Decimal | null
    income_tax: Decimal | null
    health_insurance: Decimal | null
    loan_deduction: Decimal | null
    comments: string | null
    created_at: Date | null
    _count: Employee_paymentsCountAggregateOutputType | null
    _avg: Employee_paymentsAvgAggregateOutputType | null
    _sum: Employee_paymentsSumAggregateOutputType | null
    _min: Employee_paymentsMinAggregateOutputType | null
    _max: Employee_paymentsMaxAggregateOutputType | null
  }

  type GetEmployee_paymentsGroupByPayload<T extends employee_paymentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Employee_paymentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Employee_paymentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Employee_paymentsGroupByOutputType[P]>
            : GetScalarType<T[P], Employee_paymentsGroupByOutputType[P]>
        }
      >
    >


  export type employee_paymentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    employee_id?: boolean
    payment_type?: boolean
    payment_method?: boolean
    payment_date?: boolean
    basic_salary?: boolean
    house_rent_allowance?: boolean
    medical_allowance?: boolean
    travel_allowance?: boolean
    dearness_allowance?: boolean
    provident_fund?: boolean
    income_tax?: boolean
    health_insurance?: boolean
    loan_deduction?: boolean
    comments?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["employee_payments"]>

  export type employee_paymentsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    employee_id?: boolean
    payment_type?: boolean
    payment_method?: boolean
    payment_date?: boolean
    basic_salary?: boolean
    house_rent_allowance?: boolean
    medical_allowance?: boolean
    travel_allowance?: boolean
    dearness_allowance?: boolean
    provident_fund?: boolean
    income_tax?: boolean
    health_insurance?: boolean
    loan_deduction?: boolean
    comments?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["employee_payments"]>

  export type employee_paymentsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    employee_id?: boolean
    payment_type?: boolean
    payment_method?: boolean
    payment_date?: boolean
    basic_salary?: boolean
    house_rent_allowance?: boolean
    medical_allowance?: boolean
    travel_allowance?: boolean
    dearness_allowance?: boolean
    provident_fund?: boolean
    income_tax?: boolean
    health_insurance?: boolean
    loan_deduction?: boolean
    comments?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["employee_payments"]>

  export type employee_paymentsSelectScalar = {
    id?: boolean
    employee_id?: boolean
    payment_type?: boolean
    payment_method?: boolean
    payment_date?: boolean
    basic_salary?: boolean
    house_rent_allowance?: boolean
    medical_allowance?: boolean
    travel_allowance?: boolean
    dearness_allowance?: boolean
    provident_fund?: boolean
    income_tax?: boolean
    health_insurance?: boolean
    loan_deduction?: boolean
    comments?: boolean
    created_at?: boolean
  }

  export type employee_paymentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "employee_id" | "payment_type" | "payment_method" | "payment_date" | "basic_salary" | "house_rent_allowance" | "medical_allowance" | "travel_allowance" | "dearness_allowance" | "provident_fund" | "income_tax" | "health_insurance" | "loan_deduction" | "comments" | "created_at", ExtArgs["result"]["employee_payments"]>

  export type $employee_paymentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "employee_payments"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      employee_id: string
      payment_type: string
      payment_method: string
      payment_date: Date
      basic_salary: Prisma.Decimal | null
      house_rent_allowance: Prisma.Decimal | null
      medical_allowance: Prisma.Decimal | null
      travel_allowance: Prisma.Decimal | null
      dearness_allowance: Prisma.Decimal | null
      provident_fund: Prisma.Decimal | null
      income_tax: Prisma.Decimal | null
      health_insurance: Prisma.Decimal | null
      loan_deduction: Prisma.Decimal | null
      comments: string | null
      created_at: Date | null
    }, ExtArgs["result"]["employee_payments"]>
    composites: {}
  }

  type employee_paymentsGetPayload<S extends boolean | null | undefined | employee_paymentsDefaultArgs> = $Result.GetResult<Prisma.$employee_paymentsPayload, S>

  type employee_paymentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<employee_paymentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Employee_paymentsCountAggregateInputType | true
    }

  export interface employee_paymentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['employee_payments'], meta: { name: 'employee_payments' } }
    /**
     * Find zero or one Employee_payments that matches the filter.
     * @param {employee_paymentsFindUniqueArgs} args - Arguments to find a Employee_payments
     * @example
     * // Get one Employee_payments
     * const employee_payments = await prisma.employee_payments.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends employee_paymentsFindUniqueArgs>(args: SelectSubset<T, employee_paymentsFindUniqueArgs<ExtArgs>>): Prisma__employee_paymentsClient<$Result.GetResult<Prisma.$employee_paymentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Employee_payments that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {employee_paymentsFindUniqueOrThrowArgs} args - Arguments to find a Employee_payments
     * @example
     * // Get one Employee_payments
     * const employee_payments = await prisma.employee_payments.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends employee_paymentsFindUniqueOrThrowArgs>(args: SelectSubset<T, employee_paymentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__employee_paymentsClient<$Result.GetResult<Prisma.$employee_paymentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Employee_payments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employee_paymentsFindFirstArgs} args - Arguments to find a Employee_payments
     * @example
     * // Get one Employee_payments
     * const employee_payments = await prisma.employee_payments.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends employee_paymentsFindFirstArgs>(args?: SelectSubset<T, employee_paymentsFindFirstArgs<ExtArgs>>): Prisma__employee_paymentsClient<$Result.GetResult<Prisma.$employee_paymentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Employee_payments that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employee_paymentsFindFirstOrThrowArgs} args - Arguments to find a Employee_payments
     * @example
     * // Get one Employee_payments
     * const employee_payments = await prisma.employee_payments.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends employee_paymentsFindFirstOrThrowArgs>(args?: SelectSubset<T, employee_paymentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__employee_paymentsClient<$Result.GetResult<Prisma.$employee_paymentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Employee_payments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employee_paymentsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Employee_payments
     * const employee_payments = await prisma.employee_payments.findMany()
     * 
     * // Get first 10 Employee_payments
     * const employee_payments = await prisma.employee_payments.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const employee_paymentsWithIdOnly = await prisma.employee_payments.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends employee_paymentsFindManyArgs>(args?: SelectSubset<T, employee_paymentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$employee_paymentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Employee_payments.
     * @param {employee_paymentsCreateArgs} args - Arguments to create a Employee_payments.
     * @example
     * // Create one Employee_payments
     * const Employee_payments = await prisma.employee_payments.create({
     *   data: {
     *     // ... data to create a Employee_payments
     *   }
     * })
     * 
     */
    create<T extends employee_paymentsCreateArgs>(args: SelectSubset<T, employee_paymentsCreateArgs<ExtArgs>>): Prisma__employee_paymentsClient<$Result.GetResult<Prisma.$employee_paymentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Employee_payments.
     * @param {employee_paymentsCreateManyArgs} args - Arguments to create many Employee_payments.
     * @example
     * // Create many Employee_payments
     * const employee_payments = await prisma.employee_payments.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends employee_paymentsCreateManyArgs>(args?: SelectSubset<T, employee_paymentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Employee_payments and returns the data saved in the database.
     * @param {employee_paymentsCreateManyAndReturnArgs} args - Arguments to create many Employee_payments.
     * @example
     * // Create many Employee_payments
     * const employee_payments = await prisma.employee_payments.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Employee_payments and only return the `id`
     * const employee_paymentsWithIdOnly = await prisma.employee_payments.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends employee_paymentsCreateManyAndReturnArgs>(args?: SelectSubset<T, employee_paymentsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$employee_paymentsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Employee_payments.
     * @param {employee_paymentsDeleteArgs} args - Arguments to delete one Employee_payments.
     * @example
     * // Delete one Employee_payments
     * const Employee_payments = await prisma.employee_payments.delete({
     *   where: {
     *     // ... filter to delete one Employee_payments
     *   }
     * })
     * 
     */
    delete<T extends employee_paymentsDeleteArgs>(args: SelectSubset<T, employee_paymentsDeleteArgs<ExtArgs>>): Prisma__employee_paymentsClient<$Result.GetResult<Prisma.$employee_paymentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Employee_payments.
     * @param {employee_paymentsUpdateArgs} args - Arguments to update one Employee_payments.
     * @example
     * // Update one Employee_payments
     * const employee_payments = await prisma.employee_payments.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends employee_paymentsUpdateArgs>(args: SelectSubset<T, employee_paymentsUpdateArgs<ExtArgs>>): Prisma__employee_paymentsClient<$Result.GetResult<Prisma.$employee_paymentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Employee_payments.
     * @param {employee_paymentsDeleteManyArgs} args - Arguments to filter Employee_payments to delete.
     * @example
     * // Delete a few Employee_payments
     * const { count } = await prisma.employee_payments.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends employee_paymentsDeleteManyArgs>(args?: SelectSubset<T, employee_paymentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Employee_payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employee_paymentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Employee_payments
     * const employee_payments = await prisma.employee_payments.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends employee_paymentsUpdateManyArgs>(args: SelectSubset<T, employee_paymentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Employee_payments and returns the data updated in the database.
     * @param {employee_paymentsUpdateManyAndReturnArgs} args - Arguments to update many Employee_payments.
     * @example
     * // Update many Employee_payments
     * const employee_payments = await prisma.employee_payments.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Employee_payments and only return the `id`
     * const employee_paymentsWithIdOnly = await prisma.employee_payments.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends employee_paymentsUpdateManyAndReturnArgs>(args: SelectSubset<T, employee_paymentsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$employee_paymentsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Employee_payments.
     * @param {employee_paymentsUpsertArgs} args - Arguments to update or create a Employee_payments.
     * @example
     * // Update or create a Employee_payments
     * const employee_payments = await prisma.employee_payments.upsert({
     *   create: {
     *     // ... data to create a Employee_payments
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Employee_payments we want to update
     *   }
     * })
     */
    upsert<T extends employee_paymentsUpsertArgs>(args: SelectSubset<T, employee_paymentsUpsertArgs<ExtArgs>>): Prisma__employee_paymentsClient<$Result.GetResult<Prisma.$employee_paymentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Employee_payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employee_paymentsCountArgs} args - Arguments to filter Employee_payments to count.
     * @example
     * // Count the number of Employee_payments
     * const count = await prisma.employee_payments.count({
     *   where: {
     *     // ... the filter for the Employee_payments we want to count
     *   }
     * })
    **/
    count<T extends employee_paymentsCountArgs>(
      args?: Subset<T, employee_paymentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Employee_paymentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Employee_payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Employee_paymentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Employee_paymentsAggregateArgs>(args: Subset<T, Employee_paymentsAggregateArgs>): Prisma.PrismaPromise<GetEmployee_paymentsAggregateType<T>>

    /**
     * Group by Employee_payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {employee_paymentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends employee_paymentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: employee_paymentsGroupByArgs['orderBy'] }
        : { orderBy?: employee_paymentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, employee_paymentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEmployee_paymentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the employee_payments model
   */
  readonly fields: employee_paymentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for employee_payments.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__employee_paymentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the employee_payments model
   */
  interface employee_paymentsFieldRefs {
    readonly id: FieldRef<"employee_payments", 'String'>
    readonly employee_id: FieldRef<"employee_payments", 'String'>
    readonly payment_type: FieldRef<"employee_payments", 'String'>
    readonly payment_method: FieldRef<"employee_payments", 'String'>
    readonly payment_date: FieldRef<"employee_payments", 'DateTime'>
    readonly basic_salary: FieldRef<"employee_payments", 'Decimal'>
    readonly house_rent_allowance: FieldRef<"employee_payments", 'Decimal'>
    readonly medical_allowance: FieldRef<"employee_payments", 'Decimal'>
    readonly travel_allowance: FieldRef<"employee_payments", 'Decimal'>
    readonly dearness_allowance: FieldRef<"employee_payments", 'Decimal'>
    readonly provident_fund: FieldRef<"employee_payments", 'Decimal'>
    readonly income_tax: FieldRef<"employee_payments", 'Decimal'>
    readonly health_insurance: FieldRef<"employee_payments", 'Decimal'>
    readonly loan_deduction: FieldRef<"employee_payments", 'Decimal'>
    readonly comments: FieldRef<"employee_payments", 'String'>
    readonly created_at: FieldRef<"employee_payments", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * employee_payments findUnique
   */
  export type employee_paymentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee_payments
     */
    select?: employee_paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee_payments
     */
    omit?: employee_paymentsOmit<ExtArgs> | null
    /**
     * Filter, which employee_payments to fetch.
     */
    where: employee_paymentsWhereUniqueInput
  }

  /**
   * employee_payments findUniqueOrThrow
   */
  export type employee_paymentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee_payments
     */
    select?: employee_paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee_payments
     */
    omit?: employee_paymentsOmit<ExtArgs> | null
    /**
     * Filter, which employee_payments to fetch.
     */
    where: employee_paymentsWhereUniqueInput
  }

  /**
   * employee_payments findFirst
   */
  export type employee_paymentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee_payments
     */
    select?: employee_paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee_payments
     */
    omit?: employee_paymentsOmit<ExtArgs> | null
    /**
     * Filter, which employee_payments to fetch.
     */
    where?: employee_paymentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of employee_payments to fetch.
     */
    orderBy?: employee_paymentsOrderByWithRelationInput | employee_paymentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for employee_payments.
     */
    cursor?: employee_paymentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` employee_payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` employee_payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of employee_payments.
     */
    distinct?: Employee_paymentsScalarFieldEnum | Employee_paymentsScalarFieldEnum[]
  }

  /**
   * employee_payments findFirstOrThrow
   */
  export type employee_paymentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee_payments
     */
    select?: employee_paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee_payments
     */
    omit?: employee_paymentsOmit<ExtArgs> | null
    /**
     * Filter, which employee_payments to fetch.
     */
    where?: employee_paymentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of employee_payments to fetch.
     */
    orderBy?: employee_paymentsOrderByWithRelationInput | employee_paymentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for employee_payments.
     */
    cursor?: employee_paymentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` employee_payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` employee_payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of employee_payments.
     */
    distinct?: Employee_paymentsScalarFieldEnum | Employee_paymentsScalarFieldEnum[]
  }

  /**
   * employee_payments findMany
   */
  export type employee_paymentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee_payments
     */
    select?: employee_paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee_payments
     */
    omit?: employee_paymentsOmit<ExtArgs> | null
    /**
     * Filter, which employee_payments to fetch.
     */
    where?: employee_paymentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of employee_payments to fetch.
     */
    orderBy?: employee_paymentsOrderByWithRelationInput | employee_paymentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing employee_payments.
     */
    cursor?: employee_paymentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` employee_payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` employee_payments.
     */
    skip?: number
    distinct?: Employee_paymentsScalarFieldEnum | Employee_paymentsScalarFieldEnum[]
  }

  /**
   * employee_payments create
   */
  export type employee_paymentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee_payments
     */
    select?: employee_paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee_payments
     */
    omit?: employee_paymentsOmit<ExtArgs> | null
    /**
     * The data needed to create a employee_payments.
     */
    data: XOR<employee_paymentsCreateInput, employee_paymentsUncheckedCreateInput>
  }

  /**
   * employee_payments createMany
   */
  export type employee_paymentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many employee_payments.
     */
    data: employee_paymentsCreateManyInput | employee_paymentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * employee_payments createManyAndReturn
   */
  export type employee_paymentsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee_payments
     */
    select?: employee_paymentsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the employee_payments
     */
    omit?: employee_paymentsOmit<ExtArgs> | null
    /**
     * The data used to create many employee_payments.
     */
    data: employee_paymentsCreateManyInput | employee_paymentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * employee_payments update
   */
  export type employee_paymentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee_payments
     */
    select?: employee_paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee_payments
     */
    omit?: employee_paymentsOmit<ExtArgs> | null
    /**
     * The data needed to update a employee_payments.
     */
    data: XOR<employee_paymentsUpdateInput, employee_paymentsUncheckedUpdateInput>
    /**
     * Choose, which employee_payments to update.
     */
    where: employee_paymentsWhereUniqueInput
  }

  /**
   * employee_payments updateMany
   */
  export type employee_paymentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update employee_payments.
     */
    data: XOR<employee_paymentsUpdateManyMutationInput, employee_paymentsUncheckedUpdateManyInput>
    /**
     * Filter which employee_payments to update
     */
    where?: employee_paymentsWhereInput
    /**
     * Limit how many employee_payments to update.
     */
    limit?: number
  }

  /**
   * employee_payments updateManyAndReturn
   */
  export type employee_paymentsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee_payments
     */
    select?: employee_paymentsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the employee_payments
     */
    omit?: employee_paymentsOmit<ExtArgs> | null
    /**
     * The data used to update employee_payments.
     */
    data: XOR<employee_paymentsUpdateManyMutationInput, employee_paymentsUncheckedUpdateManyInput>
    /**
     * Filter which employee_payments to update
     */
    where?: employee_paymentsWhereInput
    /**
     * Limit how many employee_payments to update.
     */
    limit?: number
  }

  /**
   * employee_payments upsert
   */
  export type employee_paymentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee_payments
     */
    select?: employee_paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee_payments
     */
    omit?: employee_paymentsOmit<ExtArgs> | null
    /**
     * The filter to search for the employee_payments to update in case it exists.
     */
    where: employee_paymentsWhereUniqueInput
    /**
     * In case the employee_payments found by the `where` argument doesn't exist, create a new employee_payments with this data.
     */
    create: XOR<employee_paymentsCreateInput, employee_paymentsUncheckedCreateInput>
    /**
     * In case the employee_payments was found with the provided `where` argument, update it with this data.
     */
    update: XOR<employee_paymentsUpdateInput, employee_paymentsUncheckedUpdateInput>
  }

  /**
   * employee_payments delete
   */
  export type employee_paymentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee_payments
     */
    select?: employee_paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee_payments
     */
    omit?: employee_paymentsOmit<ExtArgs> | null
    /**
     * Filter which employee_payments to delete.
     */
    where: employee_paymentsWhereUniqueInput
  }

  /**
   * employee_payments deleteMany
   */
  export type employee_paymentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which employee_payments to delete
     */
    where?: employee_paymentsWhereInput
    /**
     * Limit how many employee_payments to delete.
     */
    limit?: number
  }

  /**
   * employee_payments without action
   */
  export type employee_paymentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the employee_payments
     */
    select?: employee_paymentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the employee_payments
     */
    omit?: employee_paymentsOmit<ExtArgs> | null
  }


  /**
   * Model salary_budget
   */

  export type AggregateSalary_budget = {
    _count: Salary_budgetCountAggregateOutputType | null
    _avg: Salary_budgetAvgAggregateOutputType | null
    _sum: Salary_budgetSumAggregateOutputType | null
    _min: Salary_budgetMinAggregateOutputType | null
    _max: Salary_budgetMaxAggregateOutputType | null
  }

  export type Salary_budgetAvgAggregateOutputType = {
    id: number | null
    basic_non_salary: Decimal | null
    basic_salary: Decimal | null
    conhess_shift_allowance: Decimal | null
    conmess_call_duty: Decimal | null
    conmess_minimum_wage: Decimal | null
    conmess_non_clinical: Decimal | null
    conposs_minimum_wage: Decimal | null
    conpss_minimum_wage: Decimal | null
    conpss_peculiar: Decimal | null
  }

  export type Salary_budgetSumAggregateOutputType = {
    id: number | null
    basic_non_salary: Decimal | null
    basic_salary: Decimal | null
    conhess_shift_allowance: Decimal | null
    conmess_call_duty: Decimal | null
    conmess_minimum_wage: Decimal | null
    conmess_non_clinical: Decimal | null
    conposs_minimum_wage: Decimal | null
    conpss_minimum_wage: Decimal | null
    conpss_peculiar: Decimal | null
  }

  export type Salary_budgetMinAggregateOutputType = {
    id: number | null
    staff_id: string | null
    legacy_id: string | null
    full_name: string | null
    job_title: string | null
    command: string | null
    zone: string | null
    location: string | null
    unit: string | null
    reference_id: string | null
    grade: string | null
    grade_step: string | null
    bank_name: string | null
    account_number: string | null
    pension_administrator: string | null
    pension_pin: string | null
    tax: string | null
    created_at: Date | null
    updated_at: Date | null
    tax_id: string | null
    basic_non_salary: Decimal | null
    basic_salary: Decimal | null
    conhess_shift_allowance: Decimal | null
    conmess_call_duty: Decimal | null
    conmess_minimum_wage: Decimal | null
    conmess_non_clinical: Decimal | null
    conposs_minimum_wage: Decimal | null
    conpss_minimum_wage: Decimal | null
    conpss_peculiar: Decimal | null
  }

  export type Salary_budgetMaxAggregateOutputType = {
    id: number | null
    staff_id: string | null
    legacy_id: string | null
    full_name: string | null
    job_title: string | null
    command: string | null
    zone: string | null
    location: string | null
    unit: string | null
    reference_id: string | null
    grade: string | null
    grade_step: string | null
    bank_name: string | null
    account_number: string | null
    pension_administrator: string | null
    pension_pin: string | null
    tax: string | null
    created_at: Date | null
    updated_at: Date | null
    tax_id: string | null
    basic_non_salary: Decimal | null
    basic_salary: Decimal | null
    conhess_shift_allowance: Decimal | null
    conmess_call_duty: Decimal | null
    conmess_minimum_wage: Decimal | null
    conmess_non_clinical: Decimal | null
    conposs_minimum_wage: Decimal | null
    conpss_minimum_wage: Decimal | null
    conpss_peculiar: Decimal | null
  }

  export type Salary_budgetCountAggregateOutputType = {
    id: number
    staff_id: number
    legacy_id: number
    full_name: number
    job_title: number
    command: number
    zone: number
    location: number
    unit: number
    reference_id: number
    grade: number
    grade_step: number
    bank_name: number
    account_number: number
    pension_administrator: number
    pension_pin: number
    tax: number
    created_at: number
    updated_at: number
    tax_id: number
    basic_non_salary: number
    basic_salary: number
    conhess_shift_allowance: number
    conmess_call_duty: number
    conmess_minimum_wage: number
    conmess_non_clinical: number
    conposs_minimum_wage: number
    conpss_minimum_wage: number
    conpss_peculiar: number
    _all: number
  }


  export type Salary_budgetAvgAggregateInputType = {
    id?: true
    basic_non_salary?: true
    basic_salary?: true
    conhess_shift_allowance?: true
    conmess_call_duty?: true
    conmess_minimum_wage?: true
    conmess_non_clinical?: true
    conposs_minimum_wage?: true
    conpss_minimum_wage?: true
    conpss_peculiar?: true
  }

  export type Salary_budgetSumAggregateInputType = {
    id?: true
    basic_non_salary?: true
    basic_salary?: true
    conhess_shift_allowance?: true
    conmess_call_duty?: true
    conmess_minimum_wage?: true
    conmess_non_clinical?: true
    conposs_minimum_wage?: true
    conpss_minimum_wage?: true
    conpss_peculiar?: true
  }

  export type Salary_budgetMinAggregateInputType = {
    id?: true
    staff_id?: true
    legacy_id?: true
    full_name?: true
    job_title?: true
    command?: true
    zone?: true
    location?: true
    unit?: true
    reference_id?: true
    grade?: true
    grade_step?: true
    bank_name?: true
    account_number?: true
    pension_administrator?: true
    pension_pin?: true
    tax?: true
    created_at?: true
    updated_at?: true
    tax_id?: true
    basic_non_salary?: true
    basic_salary?: true
    conhess_shift_allowance?: true
    conmess_call_duty?: true
    conmess_minimum_wage?: true
    conmess_non_clinical?: true
    conposs_minimum_wage?: true
    conpss_minimum_wage?: true
    conpss_peculiar?: true
  }

  export type Salary_budgetMaxAggregateInputType = {
    id?: true
    staff_id?: true
    legacy_id?: true
    full_name?: true
    job_title?: true
    command?: true
    zone?: true
    location?: true
    unit?: true
    reference_id?: true
    grade?: true
    grade_step?: true
    bank_name?: true
    account_number?: true
    pension_administrator?: true
    pension_pin?: true
    tax?: true
    created_at?: true
    updated_at?: true
    tax_id?: true
    basic_non_salary?: true
    basic_salary?: true
    conhess_shift_allowance?: true
    conmess_call_duty?: true
    conmess_minimum_wage?: true
    conmess_non_clinical?: true
    conposs_minimum_wage?: true
    conpss_minimum_wage?: true
    conpss_peculiar?: true
  }

  export type Salary_budgetCountAggregateInputType = {
    id?: true
    staff_id?: true
    legacy_id?: true
    full_name?: true
    job_title?: true
    command?: true
    zone?: true
    location?: true
    unit?: true
    reference_id?: true
    grade?: true
    grade_step?: true
    bank_name?: true
    account_number?: true
    pension_administrator?: true
    pension_pin?: true
    tax?: true
    created_at?: true
    updated_at?: true
    tax_id?: true
    basic_non_salary?: true
    basic_salary?: true
    conhess_shift_allowance?: true
    conmess_call_duty?: true
    conmess_minimum_wage?: true
    conmess_non_clinical?: true
    conposs_minimum_wage?: true
    conpss_minimum_wage?: true
    conpss_peculiar?: true
    _all?: true
  }

  export type Salary_budgetAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which salary_budget to aggregate.
     */
    where?: salary_budgetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of salary_budgets to fetch.
     */
    orderBy?: salary_budgetOrderByWithRelationInput | salary_budgetOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: salary_budgetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` salary_budgets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` salary_budgets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned salary_budgets
    **/
    _count?: true | Salary_budgetCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Salary_budgetAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Salary_budgetSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Salary_budgetMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Salary_budgetMaxAggregateInputType
  }

  export type GetSalary_budgetAggregateType<T extends Salary_budgetAggregateArgs> = {
        [P in keyof T & keyof AggregateSalary_budget]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSalary_budget[P]>
      : GetScalarType<T[P], AggregateSalary_budget[P]>
  }




  export type salary_budgetGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: salary_budgetWhereInput
    orderBy?: salary_budgetOrderByWithAggregationInput | salary_budgetOrderByWithAggregationInput[]
    by: Salary_budgetScalarFieldEnum[] | Salary_budgetScalarFieldEnum
    having?: salary_budgetScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Salary_budgetCountAggregateInputType | true
    _avg?: Salary_budgetAvgAggregateInputType
    _sum?: Salary_budgetSumAggregateInputType
    _min?: Salary_budgetMinAggregateInputType
    _max?: Salary_budgetMaxAggregateInputType
  }

  export type Salary_budgetGroupByOutputType = {
    id: number
    staff_id: string | null
    legacy_id: string | null
    full_name: string | null
    job_title: string | null
    command: string | null
    zone: string | null
    location: string | null
    unit: string | null
    reference_id: string | null
    grade: string | null
    grade_step: string | null
    bank_name: string | null
    account_number: string | null
    pension_administrator: string | null
    pension_pin: string | null
    tax: string | null
    created_at: Date | null
    updated_at: Date | null
    tax_id: string | null
    basic_non_salary: Decimal | null
    basic_salary: Decimal | null
    conhess_shift_allowance: Decimal | null
    conmess_call_duty: Decimal | null
    conmess_minimum_wage: Decimal | null
    conmess_non_clinical: Decimal | null
    conposs_minimum_wage: Decimal | null
    conpss_minimum_wage: Decimal | null
    conpss_peculiar: Decimal | null
    _count: Salary_budgetCountAggregateOutputType | null
    _avg: Salary_budgetAvgAggregateOutputType | null
    _sum: Salary_budgetSumAggregateOutputType | null
    _min: Salary_budgetMinAggregateOutputType | null
    _max: Salary_budgetMaxAggregateOutputType | null
  }

  type GetSalary_budgetGroupByPayload<T extends salary_budgetGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Salary_budgetGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Salary_budgetGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Salary_budgetGroupByOutputType[P]>
            : GetScalarType<T[P], Salary_budgetGroupByOutputType[P]>
        }
      >
    >


  export type salary_budgetSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    staff_id?: boolean
    legacy_id?: boolean
    full_name?: boolean
    job_title?: boolean
    command?: boolean
    zone?: boolean
    location?: boolean
    unit?: boolean
    reference_id?: boolean
    grade?: boolean
    grade_step?: boolean
    bank_name?: boolean
    account_number?: boolean
    pension_administrator?: boolean
    pension_pin?: boolean
    tax?: boolean
    created_at?: boolean
    updated_at?: boolean
    tax_id?: boolean
    basic_non_salary?: boolean
    basic_salary?: boolean
    conhess_shift_allowance?: boolean
    conmess_call_duty?: boolean
    conmess_minimum_wage?: boolean
    conmess_non_clinical?: boolean
    conposs_minimum_wage?: boolean
    conpss_minimum_wage?: boolean
    conpss_peculiar?: boolean
  }, ExtArgs["result"]["salary_budget"]>

  export type salary_budgetSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    staff_id?: boolean
    legacy_id?: boolean
    full_name?: boolean
    job_title?: boolean
    command?: boolean
    zone?: boolean
    location?: boolean
    unit?: boolean
    reference_id?: boolean
    grade?: boolean
    grade_step?: boolean
    bank_name?: boolean
    account_number?: boolean
    pension_administrator?: boolean
    pension_pin?: boolean
    tax?: boolean
    created_at?: boolean
    updated_at?: boolean
    tax_id?: boolean
    basic_non_salary?: boolean
    basic_salary?: boolean
    conhess_shift_allowance?: boolean
    conmess_call_duty?: boolean
    conmess_minimum_wage?: boolean
    conmess_non_clinical?: boolean
    conposs_minimum_wage?: boolean
    conpss_minimum_wage?: boolean
    conpss_peculiar?: boolean
  }, ExtArgs["result"]["salary_budget"]>

  export type salary_budgetSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    staff_id?: boolean
    legacy_id?: boolean
    full_name?: boolean
    job_title?: boolean
    command?: boolean
    zone?: boolean
    location?: boolean
    unit?: boolean
    reference_id?: boolean
    grade?: boolean
    grade_step?: boolean
    bank_name?: boolean
    account_number?: boolean
    pension_administrator?: boolean
    pension_pin?: boolean
    tax?: boolean
    created_at?: boolean
    updated_at?: boolean
    tax_id?: boolean
    basic_non_salary?: boolean
    basic_salary?: boolean
    conhess_shift_allowance?: boolean
    conmess_call_duty?: boolean
    conmess_minimum_wage?: boolean
    conmess_non_clinical?: boolean
    conposs_minimum_wage?: boolean
    conpss_minimum_wage?: boolean
    conpss_peculiar?: boolean
  }, ExtArgs["result"]["salary_budget"]>

  export type salary_budgetSelectScalar = {
    id?: boolean
    staff_id?: boolean
    legacy_id?: boolean
    full_name?: boolean
    job_title?: boolean
    command?: boolean
    zone?: boolean
    location?: boolean
    unit?: boolean
    reference_id?: boolean
    grade?: boolean
    grade_step?: boolean
    bank_name?: boolean
    account_number?: boolean
    pension_administrator?: boolean
    pension_pin?: boolean
    tax?: boolean
    created_at?: boolean
    updated_at?: boolean
    tax_id?: boolean
    basic_non_salary?: boolean
    basic_salary?: boolean
    conhess_shift_allowance?: boolean
    conmess_call_duty?: boolean
    conmess_minimum_wage?: boolean
    conmess_non_clinical?: boolean
    conposs_minimum_wage?: boolean
    conpss_minimum_wage?: boolean
    conpss_peculiar?: boolean
  }

  export type salary_budgetOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "staff_id" | "legacy_id" | "full_name" | "job_title" | "command" | "zone" | "location" | "unit" | "reference_id" | "grade" | "grade_step" | "bank_name" | "account_number" | "pension_administrator" | "pension_pin" | "tax" | "created_at" | "updated_at" | "tax_id" | "basic_non_salary" | "basic_salary" | "conhess_shift_allowance" | "conmess_call_duty" | "conmess_minimum_wage" | "conmess_non_clinical" | "conposs_minimum_wage" | "conpss_minimum_wage" | "conpss_peculiar", ExtArgs["result"]["salary_budget"]>

  export type $salary_budgetPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "salary_budget"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      staff_id: string | null
      legacy_id: string | null
      full_name: string | null
      job_title: string | null
      command: string | null
      zone: string | null
      location: string | null
      unit: string | null
      reference_id: string | null
      grade: string | null
      grade_step: string | null
      bank_name: string | null
      account_number: string | null
      pension_administrator: string | null
      pension_pin: string | null
      tax: string | null
      created_at: Date | null
      updated_at: Date | null
      tax_id: string | null
      basic_non_salary: Prisma.Decimal | null
      basic_salary: Prisma.Decimal | null
      conhess_shift_allowance: Prisma.Decimal | null
      conmess_call_duty: Prisma.Decimal | null
      conmess_minimum_wage: Prisma.Decimal | null
      conmess_non_clinical: Prisma.Decimal | null
      conposs_minimum_wage: Prisma.Decimal | null
      conpss_minimum_wage: Prisma.Decimal | null
      conpss_peculiar: Prisma.Decimal | null
    }, ExtArgs["result"]["salary_budget"]>
    composites: {}
  }

  type salary_budgetGetPayload<S extends boolean | null | undefined | salary_budgetDefaultArgs> = $Result.GetResult<Prisma.$salary_budgetPayload, S>

  type salary_budgetCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<salary_budgetFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Salary_budgetCountAggregateInputType | true
    }

  export interface salary_budgetDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['salary_budget'], meta: { name: 'salary_budget' } }
    /**
     * Find zero or one Salary_budget that matches the filter.
     * @param {salary_budgetFindUniqueArgs} args - Arguments to find a Salary_budget
     * @example
     * // Get one Salary_budget
     * const salary_budget = await prisma.salary_budget.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends salary_budgetFindUniqueArgs>(args: SelectSubset<T, salary_budgetFindUniqueArgs<ExtArgs>>): Prisma__salary_budgetClient<$Result.GetResult<Prisma.$salary_budgetPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Salary_budget that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {salary_budgetFindUniqueOrThrowArgs} args - Arguments to find a Salary_budget
     * @example
     * // Get one Salary_budget
     * const salary_budget = await prisma.salary_budget.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends salary_budgetFindUniqueOrThrowArgs>(args: SelectSubset<T, salary_budgetFindUniqueOrThrowArgs<ExtArgs>>): Prisma__salary_budgetClient<$Result.GetResult<Prisma.$salary_budgetPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Salary_budget that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salary_budgetFindFirstArgs} args - Arguments to find a Salary_budget
     * @example
     * // Get one Salary_budget
     * const salary_budget = await prisma.salary_budget.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends salary_budgetFindFirstArgs>(args?: SelectSubset<T, salary_budgetFindFirstArgs<ExtArgs>>): Prisma__salary_budgetClient<$Result.GetResult<Prisma.$salary_budgetPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Salary_budget that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salary_budgetFindFirstOrThrowArgs} args - Arguments to find a Salary_budget
     * @example
     * // Get one Salary_budget
     * const salary_budget = await prisma.salary_budget.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends salary_budgetFindFirstOrThrowArgs>(args?: SelectSubset<T, salary_budgetFindFirstOrThrowArgs<ExtArgs>>): Prisma__salary_budgetClient<$Result.GetResult<Prisma.$salary_budgetPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Salary_budgets that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salary_budgetFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Salary_budgets
     * const salary_budgets = await prisma.salary_budget.findMany()
     * 
     * // Get first 10 Salary_budgets
     * const salary_budgets = await prisma.salary_budget.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const salary_budgetWithIdOnly = await prisma.salary_budget.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends salary_budgetFindManyArgs>(args?: SelectSubset<T, salary_budgetFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$salary_budgetPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Salary_budget.
     * @param {salary_budgetCreateArgs} args - Arguments to create a Salary_budget.
     * @example
     * // Create one Salary_budget
     * const Salary_budget = await prisma.salary_budget.create({
     *   data: {
     *     // ... data to create a Salary_budget
     *   }
     * })
     * 
     */
    create<T extends salary_budgetCreateArgs>(args: SelectSubset<T, salary_budgetCreateArgs<ExtArgs>>): Prisma__salary_budgetClient<$Result.GetResult<Prisma.$salary_budgetPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Salary_budgets.
     * @param {salary_budgetCreateManyArgs} args - Arguments to create many Salary_budgets.
     * @example
     * // Create many Salary_budgets
     * const salary_budget = await prisma.salary_budget.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends salary_budgetCreateManyArgs>(args?: SelectSubset<T, salary_budgetCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Salary_budgets and returns the data saved in the database.
     * @param {salary_budgetCreateManyAndReturnArgs} args - Arguments to create many Salary_budgets.
     * @example
     * // Create many Salary_budgets
     * const salary_budget = await prisma.salary_budget.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Salary_budgets and only return the `id`
     * const salary_budgetWithIdOnly = await prisma.salary_budget.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends salary_budgetCreateManyAndReturnArgs>(args?: SelectSubset<T, salary_budgetCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$salary_budgetPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Salary_budget.
     * @param {salary_budgetDeleteArgs} args - Arguments to delete one Salary_budget.
     * @example
     * // Delete one Salary_budget
     * const Salary_budget = await prisma.salary_budget.delete({
     *   where: {
     *     // ... filter to delete one Salary_budget
     *   }
     * })
     * 
     */
    delete<T extends salary_budgetDeleteArgs>(args: SelectSubset<T, salary_budgetDeleteArgs<ExtArgs>>): Prisma__salary_budgetClient<$Result.GetResult<Prisma.$salary_budgetPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Salary_budget.
     * @param {salary_budgetUpdateArgs} args - Arguments to update one Salary_budget.
     * @example
     * // Update one Salary_budget
     * const salary_budget = await prisma.salary_budget.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends salary_budgetUpdateArgs>(args: SelectSubset<T, salary_budgetUpdateArgs<ExtArgs>>): Prisma__salary_budgetClient<$Result.GetResult<Prisma.$salary_budgetPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Salary_budgets.
     * @param {salary_budgetDeleteManyArgs} args - Arguments to filter Salary_budgets to delete.
     * @example
     * // Delete a few Salary_budgets
     * const { count } = await prisma.salary_budget.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends salary_budgetDeleteManyArgs>(args?: SelectSubset<T, salary_budgetDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Salary_budgets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salary_budgetUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Salary_budgets
     * const salary_budget = await prisma.salary_budget.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends salary_budgetUpdateManyArgs>(args: SelectSubset<T, salary_budgetUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Salary_budgets and returns the data updated in the database.
     * @param {salary_budgetUpdateManyAndReturnArgs} args - Arguments to update many Salary_budgets.
     * @example
     * // Update many Salary_budgets
     * const salary_budget = await prisma.salary_budget.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Salary_budgets and only return the `id`
     * const salary_budgetWithIdOnly = await prisma.salary_budget.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends salary_budgetUpdateManyAndReturnArgs>(args: SelectSubset<T, salary_budgetUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$salary_budgetPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Salary_budget.
     * @param {salary_budgetUpsertArgs} args - Arguments to update or create a Salary_budget.
     * @example
     * // Update or create a Salary_budget
     * const salary_budget = await prisma.salary_budget.upsert({
     *   create: {
     *     // ... data to create a Salary_budget
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Salary_budget we want to update
     *   }
     * })
     */
    upsert<T extends salary_budgetUpsertArgs>(args: SelectSubset<T, salary_budgetUpsertArgs<ExtArgs>>): Prisma__salary_budgetClient<$Result.GetResult<Prisma.$salary_budgetPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Salary_budgets.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salary_budgetCountArgs} args - Arguments to filter Salary_budgets to count.
     * @example
     * // Count the number of Salary_budgets
     * const count = await prisma.salary_budget.count({
     *   where: {
     *     // ... the filter for the Salary_budgets we want to count
     *   }
     * })
    **/
    count<T extends salary_budgetCountArgs>(
      args?: Subset<T, salary_budgetCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Salary_budgetCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Salary_budget.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Salary_budgetAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Salary_budgetAggregateArgs>(args: Subset<T, Salary_budgetAggregateArgs>): Prisma.PrismaPromise<GetSalary_budgetAggregateType<T>>

    /**
     * Group by Salary_budget.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {salary_budgetGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends salary_budgetGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: salary_budgetGroupByArgs['orderBy'] }
        : { orderBy?: salary_budgetGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, salary_budgetGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSalary_budgetGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the salary_budget model
   */
  readonly fields: salary_budgetFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for salary_budget.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__salary_budgetClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the salary_budget model
   */
  interface salary_budgetFieldRefs {
    readonly id: FieldRef<"salary_budget", 'Int'>
    readonly staff_id: FieldRef<"salary_budget", 'String'>
    readonly legacy_id: FieldRef<"salary_budget", 'String'>
    readonly full_name: FieldRef<"salary_budget", 'String'>
    readonly job_title: FieldRef<"salary_budget", 'String'>
    readonly command: FieldRef<"salary_budget", 'String'>
    readonly zone: FieldRef<"salary_budget", 'String'>
    readonly location: FieldRef<"salary_budget", 'String'>
    readonly unit: FieldRef<"salary_budget", 'String'>
    readonly reference_id: FieldRef<"salary_budget", 'String'>
    readonly grade: FieldRef<"salary_budget", 'String'>
    readonly grade_step: FieldRef<"salary_budget", 'String'>
    readonly bank_name: FieldRef<"salary_budget", 'String'>
    readonly account_number: FieldRef<"salary_budget", 'String'>
    readonly pension_administrator: FieldRef<"salary_budget", 'String'>
    readonly pension_pin: FieldRef<"salary_budget", 'String'>
    readonly tax: FieldRef<"salary_budget", 'String'>
    readonly created_at: FieldRef<"salary_budget", 'DateTime'>
    readonly updated_at: FieldRef<"salary_budget", 'DateTime'>
    readonly tax_id: FieldRef<"salary_budget", 'String'>
    readonly basic_non_salary: FieldRef<"salary_budget", 'Decimal'>
    readonly basic_salary: FieldRef<"salary_budget", 'Decimal'>
    readonly conhess_shift_allowance: FieldRef<"salary_budget", 'Decimal'>
    readonly conmess_call_duty: FieldRef<"salary_budget", 'Decimal'>
    readonly conmess_minimum_wage: FieldRef<"salary_budget", 'Decimal'>
    readonly conmess_non_clinical: FieldRef<"salary_budget", 'Decimal'>
    readonly conposs_minimum_wage: FieldRef<"salary_budget", 'Decimal'>
    readonly conpss_minimum_wage: FieldRef<"salary_budget", 'Decimal'>
    readonly conpss_peculiar: FieldRef<"salary_budget", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * salary_budget findUnique
   */
  export type salary_budgetFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salary_budget
     */
    select?: salary_budgetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the salary_budget
     */
    omit?: salary_budgetOmit<ExtArgs> | null
    /**
     * Filter, which salary_budget to fetch.
     */
    where: salary_budgetWhereUniqueInput
  }

  /**
   * salary_budget findUniqueOrThrow
   */
  export type salary_budgetFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salary_budget
     */
    select?: salary_budgetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the salary_budget
     */
    omit?: salary_budgetOmit<ExtArgs> | null
    /**
     * Filter, which salary_budget to fetch.
     */
    where: salary_budgetWhereUniqueInput
  }

  /**
   * salary_budget findFirst
   */
  export type salary_budgetFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salary_budget
     */
    select?: salary_budgetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the salary_budget
     */
    omit?: salary_budgetOmit<ExtArgs> | null
    /**
     * Filter, which salary_budget to fetch.
     */
    where?: salary_budgetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of salary_budgets to fetch.
     */
    orderBy?: salary_budgetOrderByWithRelationInput | salary_budgetOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for salary_budgets.
     */
    cursor?: salary_budgetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` salary_budgets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` salary_budgets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of salary_budgets.
     */
    distinct?: Salary_budgetScalarFieldEnum | Salary_budgetScalarFieldEnum[]
  }

  /**
   * salary_budget findFirstOrThrow
   */
  export type salary_budgetFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salary_budget
     */
    select?: salary_budgetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the salary_budget
     */
    omit?: salary_budgetOmit<ExtArgs> | null
    /**
     * Filter, which salary_budget to fetch.
     */
    where?: salary_budgetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of salary_budgets to fetch.
     */
    orderBy?: salary_budgetOrderByWithRelationInput | salary_budgetOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for salary_budgets.
     */
    cursor?: salary_budgetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` salary_budgets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` salary_budgets.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of salary_budgets.
     */
    distinct?: Salary_budgetScalarFieldEnum | Salary_budgetScalarFieldEnum[]
  }

  /**
   * salary_budget findMany
   */
  export type salary_budgetFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salary_budget
     */
    select?: salary_budgetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the salary_budget
     */
    omit?: salary_budgetOmit<ExtArgs> | null
    /**
     * Filter, which salary_budgets to fetch.
     */
    where?: salary_budgetWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of salary_budgets to fetch.
     */
    orderBy?: salary_budgetOrderByWithRelationInput | salary_budgetOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing salary_budgets.
     */
    cursor?: salary_budgetWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` salary_budgets from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` salary_budgets.
     */
    skip?: number
    distinct?: Salary_budgetScalarFieldEnum | Salary_budgetScalarFieldEnum[]
  }

  /**
   * salary_budget create
   */
  export type salary_budgetCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salary_budget
     */
    select?: salary_budgetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the salary_budget
     */
    omit?: salary_budgetOmit<ExtArgs> | null
    /**
     * The data needed to create a salary_budget.
     */
    data?: XOR<salary_budgetCreateInput, salary_budgetUncheckedCreateInput>
  }

  /**
   * salary_budget createMany
   */
  export type salary_budgetCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many salary_budgets.
     */
    data: salary_budgetCreateManyInput | salary_budgetCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * salary_budget createManyAndReturn
   */
  export type salary_budgetCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salary_budget
     */
    select?: salary_budgetSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the salary_budget
     */
    omit?: salary_budgetOmit<ExtArgs> | null
    /**
     * The data used to create many salary_budgets.
     */
    data: salary_budgetCreateManyInput | salary_budgetCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * salary_budget update
   */
  export type salary_budgetUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salary_budget
     */
    select?: salary_budgetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the salary_budget
     */
    omit?: salary_budgetOmit<ExtArgs> | null
    /**
     * The data needed to update a salary_budget.
     */
    data: XOR<salary_budgetUpdateInput, salary_budgetUncheckedUpdateInput>
    /**
     * Choose, which salary_budget to update.
     */
    where: salary_budgetWhereUniqueInput
  }

  /**
   * salary_budget updateMany
   */
  export type salary_budgetUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update salary_budgets.
     */
    data: XOR<salary_budgetUpdateManyMutationInput, salary_budgetUncheckedUpdateManyInput>
    /**
     * Filter which salary_budgets to update
     */
    where?: salary_budgetWhereInput
    /**
     * Limit how many salary_budgets to update.
     */
    limit?: number
  }

  /**
   * salary_budget updateManyAndReturn
   */
  export type salary_budgetUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salary_budget
     */
    select?: salary_budgetSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the salary_budget
     */
    omit?: salary_budgetOmit<ExtArgs> | null
    /**
     * The data used to update salary_budgets.
     */
    data: XOR<salary_budgetUpdateManyMutationInput, salary_budgetUncheckedUpdateManyInput>
    /**
     * Filter which salary_budgets to update
     */
    where?: salary_budgetWhereInput
    /**
     * Limit how many salary_budgets to update.
     */
    limit?: number
  }

  /**
   * salary_budget upsert
   */
  export type salary_budgetUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salary_budget
     */
    select?: salary_budgetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the salary_budget
     */
    omit?: salary_budgetOmit<ExtArgs> | null
    /**
     * The filter to search for the salary_budget to update in case it exists.
     */
    where: salary_budgetWhereUniqueInput
    /**
     * In case the salary_budget found by the `where` argument doesn't exist, create a new salary_budget with this data.
     */
    create: XOR<salary_budgetCreateInput, salary_budgetUncheckedCreateInput>
    /**
     * In case the salary_budget was found with the provided `where` argument, update it with this data.
     */
    update: XOR<salary_budgetUpdateInput, salary_budgetUncheckedUpdateInput>
  }

  /**
   * salary_budget delete
   */
  export type salary_budgetDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salary_budget
     */
    select?: salary_budgetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the salary_budget
     */
    omit?: salary_budgetOmit<ExtArgs> | null
    /**
     * Filter which salary_budget to delete.
     */
    where: salary_budgetWhereUniqueInput
  }

  /**
   * salary_budget deleteMany
   */
  export type salary_budgetDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which salary_budgets to delete
     */
    where?: salary_budgetWhereInput
    /**
     * Limit how many salary_budgets to delete.
     */
    limit?: number
  }

  /**
   * salary_budget without action
   */
  export type salary_budgetDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the salary_budget
     */
    select?: salary_budgetSelect<ExtArgs> | null
    /**
     * Omit specific fields from the salary_budget
     */
    omit?: salary_budgetOmit<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Admin_permissionsScalarFieldEnum: {
    id: 'id',
    role: 'role',
    resource: 'resource',
    action: 'action',
    is_allowed: 'is_allowed',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Admin_permissionsScalarFieldEnum = (typeof Admin_permissionsScalarFieldEnum)[keyof typeof Admin_permissionsScalarFieldEnum]


  export const Admin_sessionsScalarFieldEnum: {
    id: 'id',
    admin_id: 'admin_id',
    session_token: 'session_token',
    expires_at: 'expires_at',
    created_at: 'created_at',
    ip_address: 'ip_address',
    user_agent: 'user_agent'
  };

  export type Admin_sessionsScalarFieldEnum = (typeof Admin_sessionsScalarFieldEnum)[keyof typeof Admin_sessionsScalarFieldEnum]


  export const Admin_usersScalarFieldEnum: {
    id: 'id',
    username: 'username',
    email: 'email',
    password_hash: 'password_hash',
    full_name: 'full_name',
    role: 'role',
    is_active: 'is_active',
    last_login: 'last_login',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Admin_usersScalarFieldEnum = (typeof Admin_usersScalarFieldEnum)[keyof typeof Admin_usersScalarFieldEnum]


  export const Dashboard_notificationsScalarFieldEnum: {
    id: 'id',
    title: 'title',
    message: 'message',
    type: 'type',
    is_read: 'is_read',
    recipient_id: 'recipient_id',
    created_at: 'created_at',
    expires_at: 'expires_at',
    action_url: 'action_url'
  };

  export type Dashboard_notificationsScalarFieldEnum = (typeof Dashboard_notificationsScalarFieldEnum)[keyof typeof Dashboard_notificationsScalarFieldEnum]


  export const Dashboard_widgetsScalarFieldEnum: {
    id: 'id',
    admin_id: 'admin_id',
    widget_type: 'widget_type',
    widget_position: 'widget_position',
    widget_size: 'widget_size',
    widget_config: 'widget_config',
    is_visible: 'is_visible',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Dashboard_widgetsScalarFieldEnum = (typeof Dashboard_widgetsScalarFieldEnum)[keyof typeof Dashboard_widgetsScalarFieldEnum]


  export const Document_uploadsScalarFieldEnum: {
    id: 'id',
    registration_id: 'registration_id',
    appointment_letter_path: 'appointment_letter_path',
    educational_certificates_path: 'educational_certificates_path',
    promotion_letter_path: 'promotion_letter_path',
    other_documents_path: 'other_documents_path',
    profile_image_path: 'profile_image_path',
    signature_path: 'signature_path',
    upload_date: 'upload_date',
    status: 'status'
  };

  export type Document_uploadsScalarFieldEnum = (typeof Document_uploadsScalarFieldEnum)[keyof typeof Document_uploadsScalarFieldEnum]


  export const EmployeesScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    department: 'department',
    position: 'position',
    status: 'status',
    join_date: 'join_date',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type EmployeesScalarFieldEnum = (typeof EmployeesScalarFieldEnum)[keyof typeof EmployeesScalarFieldEnum]


  export const Employment_infoScalarFieldEnum: {
    id: 'id',
    registration_id: 'registration_id',
    employment_id_no: 'employment_id_no',
    service_no: 'service_no',
    file_no: 'file_no',
    rank_position: 'rank_position',
    department: 'department',
    organization: 'organization',
    employment_type: 'employment_type',
    probation_period: 'probation_period',
    work_location: 'work_location',
    date_of_first_appointment: 'date_of_first_appointment',
    gl: 'gl',
    step: 'step',
    salary_structure: 'salary_structure',
    cadre: 'cadre',
    name_of_bank: 'name_of_bank',
    account_number: 'account_number',
    pfa_name: 'pfa_name',
    rsapin: 'rsapin',
    educational_background: 'educational_background',
    certifications: 'certifications'
  };

  export type Employment_infoScalarFieldEnum = (typeof Employment_infoScalarFieldEnum)[keyof typeof Employment_infoScalarFieldEnum]


  export const Password_reset_tokensScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    token: 'token',
    expires_at: 'expires_at',
    created_at: 'created_at'
  };

  export type Password_reset_tokensScalarFieldEnum = (typeof Password_reset_tokensScalarFieldEnum)[keyof typeof Password_reset_tokensScalarFieldEnum]


  export const Pending_employeesScalarFieldEnum: {
    id: 'id',
    registration_id: 'registration_id',
    surname: 'surname',
    firstname: 'firstname',
    email: 'email',
    department: 'department',
    position: 'position',
    status: 'status',
    source: 'source',
    submission_date: 'submission_date',
    created_at: 'created_at',
    updated_at: 'updated_at',
    missing_fields: 'missing_fields',
    metadata: 'metadata'
  };

  export type Pending_employeesScalarFieldEnum = (typeof Pending_employeesScalarFieldEnum)[keyof typeof Pending_employeesScalarFieldEnum]


  export const Personal_infoScalarFieldEnum: {
    id: 'id',
    registration_id: 'registration_id',
    title: 'title',
    surname: 'surname',
    first_name: 'first_name',
    other_names: 'other_names',
    phone_number: 'phone_number',
    email: 'email',
    date_of_birth: 'date_of_birth',
    sex: 'sex',
    marital_status: 'marital_status',
    state_of_origin: 'state_of_origin',
    lga: 'lga',
    state_of_residence: 'state_of_residence',
    address_state_of_residence: 'address_state_of_residence',
    next_of_kin_name: 'next_of_kin_name',
    next_of_kin_relationship: 'next_of_kin_relationship',
    next_of_kin_phone_number: 'next_of_kin_phone_number',
    next_of_kin_address: 'next_of_kin_address'
  };

  export type Personal_infoScalarFieldEnum = (typeof Personal_infoScalarFieldEnum)[keyof typeof Personal_infoScalarFieldEnum]


  export const Registration_commentsScalarFieldEnum: {
    id: 'id',
    registration_id: 'registration_id',
    comment_text: 'comment_text',
    author: 'author',
    created_at: 'created_at'
  };

  export type Registration_commentsScalarFieldEnum = (typeof Registration_commentsScalarFieldEnum)[keyof typeof Registration_commentsScalarFieldEnum]


  export const Registration_historyScalarFieldEnum: {
    id: 'id',
    registration_id: 'registration_id',
    action: 'action',
    details: 'details',
    performed_by: 'performed_by',
    performed_at: 'performed_at'
  };

  export type Registration_historyScalarFieldEnum = (typeof Registration_historyScalarFieldEnum)[keyof typeof Registration_historyScalarFieldEnum]


  export const RegistrationsScalarFieldEnum: {
    id: 'id',
    registration_Id: 'registration_Id',
    nin: 'nin',
    status: 'status',
    current_step: 'current_step',
    declaration: 'declaration',
    created_at: 'created_at',
    updated_at: 'updated_at',
    submitted_at: 'submitted_at',
    approved_at: 'approved_at',
    rejected_at: 'rejected_at'
  };

  export type RegistrationsScalarFieldEnum = (typeof RegistrationsScalarFieldEnum)[keyof typeof RegistrationsScalarFieldEnum]


  export const VerificationDataScalarFieldEnum: {
    id: 'id',
    nin: 'nin',
    vnin: 'vnin',
    title: 'title',
    surname: 'surname',
    email: 'email',
    gender: 'gender',
    state_of_origin: 'state_of_origin',
    religion: 'religion',
    profession: 'profession',
    residence_address: 'residence_address',
    residence_lga: 'residence_lga',
    residence_state: 'residence_state',
    nok_surname: 'nok_surname',
    nok_lga: 'nok_lga',
    nok_state: 'nok_state',
    nok_town: 'nok_town',
    maiden_name: 'maiden_name',
    tracking_id: 'tracking_id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    birthcountry: 'birthcountry',
    birthdate: 'birthdate',
    birthlga: 'birthlga',
    birthstate: 'birthstate',
    central_iD: 'central_iD',
    educationallevel: 'educationallevel',
    employmentstatus: 'employmentstatus',
    firstname: 'firstname',
    heigth: 'heigth',
    lga_origin: 'lga_origin',
    maritalstatus: 'maritalstatus',
    middlename: 'middlename',
    nok_address1: 'nok_address1',
    nok_address2: 'nok_address2',
    nok_firstname: 'nok_firstname',
    nok_middlename: 'nok_middlename',
    nok_postalcode: 'nok_postalcode',
    nspokenlang: 'nspokenlang',
    ospokenlang: 'ospokenlang',
    pfirstname: 'pfirstname',
    photo: 'photo',
    pmiddlename: 'pmiddlename',
    psurname: 'psurname',
    residence_AdressLine1: 'residence_AdressLine1',
    residence_Town: 'residence_Town',
    residencestatus: 'residencestatus',
    self_origin_lga: 'self_origin_lga',
    self_origin_place: 'self_origin_place',
    self_origin_state: 'self_origin_state',
    signature: 'signature',
    spoken_language: 'spoken_language',
    telephoneno: 'telephoneno',
    userid: 'userid',
    registration_id: 'registration_id'
  };

  export type VerificationDataScalarFieldEnum = (typeof VerificationDataScalarFieldEnum)[keyof typeof VerificationDataScalarFieldEnum]


  export const AccountScalarFieldEnum: {
    id: 'id',
    accountName: 'accountName',
    accountNumber: 'accountNumber',
    bankName: 'bankName',
    accountType: 'accountType',
    currency: 'currency',
    balance: 'balance',
    openingDate: 'openingDate',
    status: 'status',
    branchCode: 'branchCode',
    swiftCode: 'swiftCode',
    description: 'description',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    previousBalance: 'previousBalance'
  };

  export type AccountScalarFieldEnum = (typeof AccountScalarFieldEnum)[keyof typeof AccountScalarFieldEnum]


  export const Employee_paymentsScalarFieldEnum: {
    id: 'id',
    employee_id: 'employee_id',
    payment_type: 'payment_type',
    payment_method: 'payment_method',
    payment_date: 'payment_date',
    basic_salary: 'basic_salary',
    house_rent_allowance: 'house_rent_allowance',
    medical_allowance: 'medical_allowance',
    travel_allowance: 'travel_allowance',
    dearness_allowance: 'dearness_allowance',
    provident_fund: 'provident_fund',
    income_tax: 'income_tax',
    health_insurance: 'health_insurance',
    loan_deduction: 'loan_deduction',
    comments: 'comments',
    created_at: 'created_at'
  };

  export type Employee_paymentsScalarFieldEnum = (typeof Employee_paymentsScalarFieldEnum)[keyof typeof Employee_paymentsScalarFieldEnum]


  export const Salary_budgetScalarFieldEnum: {
    id: 'id',
    staff_id: 'staff_id',
    legacy_id: 'legacy_id',
    full_name: 'full_name',
    job_title: 'job_title',
    command: 'command',
    zone: 'zone',
    location: 'location',
    unit: 'unit',
    reference_id: 'reference_id',
    grade: 'grade',
    grade_step: 'grade_step',
    bank_name: 'bank_name',
    account_number: 'account_number',
    pension_administrator: 'pension_administrator',
    pension_pin: 'pension_pin',
    tax: 'tax',
    created_at: 'created_at',
    updated_at: 'updated_at',
    tax_id: 'tax_id',
    basic_non_salary: 'basic_non_salary',
    basic_salary: 'basic_salary',
    conhess_shift_allowance: 'conhess_shift_allowance',
    conmess_call_duty: 'conmess_call_duty',
    conmess_minimum_wage: 'conmess_minimum_wage',
    conmess_non_clinical: 'conmess_non_clinical',
    conposs_minimum_wage: 'conposs_minimum_wage',
    conpss_minimum_wage: 'conpss_minimum_wage',
    conpss_peculiar: 'conpss_peculiar'
  };

  export type Salary_budgetScalarFieldEnum = (typeof Salary_budgetScalarFieldEnum)[keyof typeof Salary_budgetScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    
  /**
   * Deep Input Types
   */


  export type admin_permissionsWhereInput = {
    AND?: admin_permissionsWhereInput | admin_permissionsWhereInput[]
    OR?: admin_permissionsWhereInput[]
    NOT?: admin_permissionsWhereInput | admin_permissionsWhereInput[]
    id?: IntFilter<"admin_permissions"> | number
    role?: StringFilter<"admin_permissions"> | string
    resource?: StringFilter<"admin_permissions"> | string
    action?: StringFilter<"admin_permissions"> | string
    is_allowed?: BoolFilter<"admin_permissions"> | boolean
    created_at?: DateTimeFilter<"admin_permissions"> | Date | string
    updated_at?: DateTimeFilter<"admin_permissions"> | Date | string
  }

  export type admin_permissionsOrderByWithRelationInput = {
    id?: SortOrder
    role?: SortOrder
    resource?: SortOrder
    action?: SortOrder
    is_allowed?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type admin_permissionsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    role_resource_action?: admin_permissionsRoleResourceActionCompoundUniqueInput
    AND?: admin_permissionsWhereInput | admin_permissionsWhereInput[]
    OR?: admin_permissionsWhereInput[]
    NOT?: admin_permissionsWhereInput | admin_permissionsWhereInput[]
    role?: StringFilter<"admin_permissions"> | string
    resource?: StringFilter<"admin_permissions"> | string
    action?: StringFilter<"admin_permissions"> | string
    is_allowed?: BoolFilter<"admin_permissions"> | boolean
    created_at?: DateTimeFilter<"admin_permissions"> | Date | string
    updated_at?: DateTimeFilter<"admin_permissions"> | Date | string
  }, "id" | "role_resource_action">

  export type admin_permissionsOrderByWithAggregationInput = {
    id?: SortOrder
    role?: SortOrder
    resource?: SortOrder
    action?: SortOrder
    is_allowed?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: admin_permissionsCountOrderByAggregateInput
    _avg?: admin_permissionsAvgOrderByAggregateInput
    _max?: admin_permissionsMaxOrderByAggregateInput
    _min?: admin_permissionsMinOrderByAggregateInput
    _sum?: admin_permissionsSumOrderByAggregateInput
  }

  export type admin_permissionsScalarWhereWithAggregatesInput = {
    AND?: admin_permissionsScalarWhereWithAggregatesInput | admin_permissionsScalarWhereWithAggregatesInput[]
    OR?: admin_permissionsScalarWhereWithAggregatesInput[]
    NOT?: admin_permissionsScalarWhereWithAggregatesInput | admin_permissionsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"admin_permissions"> | number
    role?: StringWithAggregatesFilter<"admin_permissions"> | string
    resource?: StringWithAggregatesFilter<"admin_permissions"> | string
    action?: StringWithAggregatesFilter<"admin_permissions"> | string
    is_allowed?: BoolWithAggregatesFilter<"admin_permissions"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"admin_permissions"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"admin_permissions"> | Date | string
  }

  export type admin_sessionsWhereInput = {
    AND?: admin_sessionsWhereInput | admin_sessionsWhereInput[]
    OR?: admin_sessionsWhereInput[]
    NOT?: admin_sessionsWhereInput | admin_sessionsWhereInput[]
    id?: IntFilter<"admin_sessions"> | number
    admin_id?: IntFilter<"admin_sessions"> | number
    session_token?: StringFilter<"admin_sessions"> | string
    expires_at?: DateTimeFilter<"admin_sessions"> | Date | string
    created_at?: DateTimeFilter<"admin_sessions"> | Date | string
    ip_address?: StringNullableFilter<"admin_sessions"> | string | null
    user_agent?: StringNullableFilter<"admin_sessions"> | string | null
    admin_users?: XOR<Admin_usersScalarRelationFilter, admin_usersWhereInput>
  }

  export type admin_sessionsOrderByWithRelationInput = {
    id?: SortOrder
    admin_id?: SortOrder
    session_token?: SortOrder
    expires_at?: SortOrder
    created_at?: SortOrder
    ip_address?: SortOrderInput | SortOrder
    user_agent?: SortOrderInput | SortOrder
    admin_users?: admin_usersOrderByWithRelationInput
  }

  export type admin_sessionsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    session_token?: string
    AND?: admin_sessionsWhereInput | admin_sessionsWhereInput[]
    OR?: admin_sessionsWhereInput[]
    NOT?: admin_sessionsWhereInput | admin_sessionsWhereInput[]
    admin_id?: IntFilter<"admin_sessions"> | number
    expires_at?: DateTimeFilter<"admin_sessions"> | Date | string
    created_at?: DateTimeFilter<"admin_sessions"> | Date | string
    ip_address?: StringNullableFilter<"admin_sessions"> | string | null
    user_agent?: StringNullableFilter<"admin_sessions"> | string | null
    admin_users?: XOR<Admin_usersScalarRelationFilter, admin_usersWhereInput>
  }, "id" | "session_token">

  export type admin_sessionsOrderByWithAggregationInput = {
    id?: SortOrder
    admin_id?: SortOrder
    session_token?: SortOrder
    expires_at?: SortOrder
    created_at?: SortOrder
    ip_address?: SortOrderInput | SortOrder
    user_agent?: SortOrderInput | SortOrder
    _count?: admin_sessionsCountOrderByAggregateInput
    _avg?: admin_sessionsAvgOrderByAggregateInput
    _max?: admin_sessionsMaxOrderByAggregateInput
    _min?: admin_sessionsMinOrderByAggregateInput
    _sum?: admin_sessionsSumOrderByAggregateInput
  }

  export type admin_sessionsScalarWhereWithAggregatesInput = {
    AND?: admin_sessionsScalarWhereWithAggregatesInput | admin_sessionsScalarWhereWithAggregatesInput[]
    OR?: admin_sessionsScalarWhereWithAggregatesInput[]
    NOT?: admin_sessionsScalarWhereWithAggregatesInput | admin_sessionsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"admin_sessions"> | number
    admin_id?: IntWithAggregatesFilter<"admin_sessions"> | number
    session_token?: StringWithAggregatesFilter<"admin_sessions"> | string
    expires_at?: DateTimeWithAggregatesFilter<"admin_sessions"> | Date | string
    created_at?: DateTimeWithAggregatesFilter<"admin_sessions"> | Date | string
    ip_address?: StringNullableWithAggregatesFilter<"admin_sessions"> | string | null
    user_agent?: StringNullableWithAggregatesFilter<"admin_sessions"> | string | null
  }

  export type admin_usersWhereInput = {
    AND?: admin_usersWhereInput | admin_usersWhereInput[]
    OR?: admin_usersWhereInput[]
    NOT?: admin_usersWhereInput | admin_usersWhereInput[]
    id?: IntFilter<"admin_users"> | number
    username?: StringFilter<"admin_users"> | string
    email?: StringFilter<"admin_users"> | string
    password_hash?: StringFilter<"admin_users"> | string
    full_name?: StringFilter<"admin_users"> | string
    role?: StringFilter<"admin_users"> | string
    is_active?: BoolFilter<"admin_users"> | boolean
    last_login?: DateTimeNullableFilter<"admin_users"> | Date | string | null
    created_at?: DateTimeFilter<"admin_users"> | Date | string
    updated_at?: DateTimeFilter<"admin_users"> | Date | string
    admin_sessions?: Admin_sessionsListRelationFilter
    dashboard_notifications?: Dashboard_notificationsListRelationFilter
    dashboard_widgets?: Dashboard_widgetsListRelationFilter
    password_reset_tokens?: XOR<Password_reset_tokensNullableScalarRelationFilter, password_reset_tokensWhereInput> | null
  }

  export type admin_usersOrderByWithRelationInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password_hash?: SortOrder
    full_name?: SortOrder
    role?: SortOrder
    is_active?: SortOrder
    last_login?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    admin_sessions?: admin_sessionsOrderByRelationAggregateInput
    dashboard_notifications?: dashboard_notificationsOrderByRelationAggregateInput
    dashboard_widgets?: dashboard_widgetsOrderByRelationAggregateInput
    password_reset_tokens?: password_reset_tokensOrderByWithRelationInput
  }

  export type admin_usersWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    username?: string
    email?: string
    AND?: admin_usersWhereInput | admin_usersWhereInput[]
    OR?: admin_usersWhereInput[]
    NOT?: admin_usersWhereInput | admin_usersWhereInput[]
    password_hash?: StringFilter<"admin_users"> | string
    full_name?: StringFilter<"admin_users"> | string
    role?: StringFilter<"admin_users"> | string
    is_active?: BoolFilter<"admin_users"> | boolean
    last_login?: DateTimeNullableFilter<"admin_users"> | Date | string | null
    created_at?: DateTimeFilter<"admin_users"> | Date | string
    updated_at?: DateTimeFilter<"admin_users"> | Date | string
    admin_sessions?: Admin_sessionsListRelationFilter
    dashboard_notifications?: Dashboard_notificationsListRelationFilter
    dashboard_widgets?: Dashboard_widgetsListRelationFilter
    password_reset_tokens?: XOR<Password_reset_tokensNullableScalarRelationFilter, password_reset_tokensWhereInput> | null
  }, "id" | "username" | "email">

  export type admin_usersOrderByWithAggregationInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password_hash?: SortOrder
    full_name?: SortOrder
    role?: SortOrder
    is_active?: SortOrder
    last_login?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: admin_usersCountOrderByAggregateInput
    _avg?: admin_usersAvgOrderByAggregateInput
    _max?: admin_usersMaxOrderByAggregateInput
    _min?: admin_usersMinOrderByAggregateInput
    _sum?: admin_usersSumOrderByAggregateInput
  }

  export type admin_usersScalarWhereWithAggregatesInput = {
    AND?: admin_usersScalarWhereWithAggregatesInput | admin_usersScalarWhereWithAggregatesInput[]
    OR?: admin_usersScalarWhereWithAggregatesInput[]
    NOT?: admin_usersScalarWhereWithAggregatesInput | admin_usersScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"admin_users"> | number
    username?: StringWithAggregatesFilter<"admin_users"> | string
    email?: StringWithAggregatesFilter<"admin_users"> | string
    password_hash?: StringWithAggregatesFilter<"admin_users"> | string
    full_name?: StringWithAggregatesFilter<"admin_users"> | string
    role?: StringWithAggregatesFilter<"admin_users"> | string
    is_active?: BoolWithAggregatesFilter<"admin_users"> | boolean
    last_login?: DateTimeNullableWithAggregatesFilter<"admin_users"> | Date | string | null
    created_at?: DateTimeWithAggregatesFilter<"admin_users"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"admin_users"> | Date | string
  }

  export type dashboard_notificationsWhereInput = {
    AND?: dashboard_notificationsWhereInput | dashboard_notificationsWhereInput[]
    OR?: dashboard_notificationsWhereInput[]
    NOT?: dashboard_notificationsWhereInput | dashboard_notificationsWhereInput[]
    id?: IntFilter<"dashboard_notifications"> | number
    title?: StringFilter<"dashboard_notifications"> | string
    message?: StringFilter<"dashboard_notifications"> | string
    type?: StringFilter<"dashboard_notifications"> | string
    is_read?: BoolFilter<"dashboard_notifications"> | boolean
    recipient_id?: IntNullableFilter<"dashboard_notifications"> | number | null
    created_at?: DateTimeFilter<"dashboard_notifications"> | Date | string
    expires_at?: DateTimeNullableFilter<"dashboard_notifications"> | Date | string | null
    action_url?: StringNullableFilter<"dashboard_notifications"> | string | null
    admin_users?: XOR<Admin_usersNullableScalarRelationFilter, admin_usersWhereInput> | null
  }

  export type dashboard_notificationsOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    is_read?: SortOrder
    recipient_id?: SortOrderInput | SortOrder
    created_at?: SortOrder
    expires_at?: SortOrderInput | SortOrder
    action_url?: SortOrderInput | SortOrder
    admin_users?: admin_usersOrderByWithRelationInput
  }

  export type dashboard_notificationsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: dashboard_notificationsWhereInput | dashboard_notificationsWhereInput[]
    OR?: dashboard_notificationsWhereInput[]
    NOT?: dashboard_notificationsWhereInput | dashboard_notificationsWhereInput[]
    title?: StringFilter<"dashboard_notifications"> | string
    message?: StringFilter<"dashboard_notifications"> | string
    type?: StringFilter<"dashboard_notifications"> | string
    is_read?: BoolFilter<"dashboard_notifications"> | boolean
    recipient_id?: IntNullableFilter<"dashboard_notifications"> | number | null
    created_at?: DateTimeFilter<"dashboard_notifications"> | Date | string
    expires_at?: DateTimeNullableFilter<"dashboard_notifications"> | Date | string | null
    action_url?: StringNullableFilter<"dashboard_notifications"> | string | null
    admin_users?: XOR<Admin_usersNullableScalarRelationFilter, admin_usersWhereInput> | null
  }, "id">

  export type dashboard_notificationsOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    is_read?: SortOrder
    recipient_id?: SortOrderInput | SortOrder
    created_at?: SortOrder
    expires_at?: SortOrderInput | SortOrder
    action_url?: SortOrderInput | SortOrder
    _count?: dashboard_notificationsCountOrderByAggregateInput
    _avg?: dashboard_notificationsAvgOrderByAggregateInput
    _max?: dashboard_notificationsMaxOrderByAggregateInput
    _min?: dashboard_notificationsMinOrderByAggregateInput
    _sum?: dashboard_notificationsSumOrderByAggregateInput
  }

  export type dashboard_notificationsScalarWhereWithAggregatesInput = {
    AND?: dashboard_notificationsScalarWhereWithAggregatesInput | dashboard_notificationsScalarWhereWithAggregatesInput[]
    OR?: dashboard_notificationsScalarWhereWithAggregatesInput[]
    NOT?: dashboard_notificationsScalarWhereWithAggregatesInput | dashboard_notificationsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"dashboard_notifications"> | number
    title?: StringWithAggregatesFilter<"dashboard_notifications"> | string
    message?: StringWithAggregatesFilter<"dashboard_notifications"> | string
    type?: StringWithAggregatesFilter<"dashboard_notifications"> | string
    is_read?: BoolWithAggregatesFilter<"dashboard_notifications"> | boolean
    recipient_id?: IntNullableWithAggregatesFilter<"dashboard_notifications"> | number | null
    created_at?: DateTimeWithAggregatesFilter<"dashboard_notifications"> | Date | string
    expires_at?: DateTimeNullableWithAggregatesFilter<"dashboard_notifications"> | Date | string | null
    action_url?: StringNullableWithAggregatesFilter<"dashboard_notifications"> | string | null
  }

  export type dashboard_widgetsWhereInput = {
    AND?: dashboard_widgetsWhereInput | dashboard_widgetsWhereInput[]
    OR?: dashboard_widgetsWhereInput[]
    NOT?: dashboard_widgetsWhereInput | dashboard_widgetsWhereInput[]
    id?: IntFilter<"dashboard_widgets"> | number
    admin_id?: IntFilter<"dashboard_widgets"> | number
    widget_type?: StringFilter<"dashboard_widgets"> | string
    widget_position?: IntFilter<"dashboard_widgets"> | number
    widget_size?: StringFilter<"dashboard_widgets"> | string
    widget_config?: JsonFilter<"dashboard_widgets">
    is_visible?: BoolFilter<"dashboard_widgets"> | boolean
    created_at?: DateTimeFilter<"dashboard_widgets"> | Date | string
    updated_at?: DateTimeFilter<"dashboard_widgets"> | Date | string
    admin_users?: XOR<Admin_usersScalarRelationFilter, admin_usersWhereInput>
  }

  export type dashboard_widgetsOrderByWithRelationInput = {
    id?: SortOrder
    admin_id?: SortOrder
    widget_type?: SortOrder
    widget_position?: SortOrder
    widget_size?: SortOrder
    widget_config?: SortOrder
    is_visible?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    admin_users?: admin_usersOrderByWithRelationInput
  }

  export type dashboard_widgetsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: dashboard_widgetsWhereInput | dashboard_widgetsWhereInput[]
    OR?: dashboard_widgetsWhereInput[]
    NOT?: dashboard_widgetsWhereInput | dashboard_widgetsWhereInput[]
    admin_id?: IntFilter<"dashboard_widgets"> | number
    widget_type?: StringFilter<"dashboard_widgets"> | string
    widget_position?: IntFilter<"dashboard_widgets"> | number
    widget_size?: StringFilter<"dashboard_widgets"> | string
    widget_config?: JsonFilter<"dashboard_widgets">
    is_visible?: BoolFilter<"dashboard_widgets"> | boolean
    created_at?: DateTimeFilter<"dashboard_widgets"> | Date | string
    updated_at?: DateTimeFilter<"dashboard_widgets"> | Date | string
    admin_users?: XOR<Admin_usersScalarRelationFilter, admin_usersWhereInput>
  }, "id">

  export type dashboard_widgetsOrderByWithAggregationInput = {
    id?: SortOrder
    admin_id?: SortOrder
    widget_type?: SortOrder
    widget_position?: SortOrder
    widget_size?: SortOrder
    widget_config?: SortOrder
    is_visible?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: dashboard_widgetsCountOrderByAggregateInput
    _avg?: dashboard_widgetsAvgOrderByAggregateInput
    _max?: dashboard_widgetsMaxOrderByAggregateInput
    _min?: dashboard_widgetsMinOrderByAggregateInput
    _sum?: dashboard_widgetsSumOrderByAggregateInput
  }

  export type dashboard_widgetsScalarWhereWithAggregatesInput = {
    AND?: dashboard_widgetsScalarWhereWithAggregatesInput | dashboard_widgetsScalarWhereWithAggregatesInput[]
    OR?: dashboard_widgetsScalarWhereWithAggregatesInput[]
    NOT?: dashboard_widgetsScalarWhereWithAggregatesInput | dashboard_widgetsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"dashboard_widgets"> | number
    admin_id?: IntWithAggregatesFilter<"dashboard_widgets"> | number
    widget_type?: StringWithAggregatesFilter<"dashboard_widgets"> | string
    widget_position?: IntWithAggregatesFilter<"dashboard_widgets"> | number
    widget_size?: StringWithAggregatesFilter<"dashboard_widgets"> | string
    widget_config?: JsonWithAggregatesFilter<"dashboard_widgets">
    is_visible?: BoolWithAggregatesFilter<"dashboard_widgets"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"dashboard_widgets"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"dashboard_widgets"> | Date | string
  }

  export type document_uploadsWhereInput = {
    AND?: document_uploadsWhereInput | document_uploadsWhereInput[]
    OR?: document_uploadsWhereInput[]
    NOT?: document_uploadsWhereInput | document_uploadsWhereInput[]
    id?: IntFilter<"document_uploads"> | number
    registration_id?: StringFilter<"document_uploads"> | string
    appointment_letter_path?: StringFilter<"document_uploads"> | string
    educational_certificates_path?: StringFilter<"document_uploads"> | string
    promotion_letter_path?: StringNullableFilter<"document_uploads"> | string | null
    other_documents_path?: StringNullableFilter<"document_uploads"> | string | null
    profile_image_path?: StringFilter<"document_uploads"> | string
    signature_path?: StringFilter<"document_uploads"> | string
    upload_date?: DateTimeFilter<"document_uploads"> | Date | string
    status?: StringNullableFilter<"document_uploads"> | string | null
    registrations?: XOR<RegistrationsScalarRelationFilter, registrationsWhereInput>
  }

  export type document_uploadsOrderByWithRelationInput = {
    id?: SortOrder
    registration_id?: SortOrder
    appointment_letter_path?: SortOrder
    educational_certificates_path?: SortOrder
    promotion_letter_path?: SortOrderInput | SortOrder
    other_documents_path?: SortOrderInput | SortOrder
    profile_image_path?: SortOrder
    signature_path?: SortOrder
    upload_date?: SortOrder
    status?: SortOrderInput | SortOrder
    registrations?: registrationsOrderByWithRelationInput
  }

  export type document_uploadsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    registration_id?: string
    AND?: document_uploadsWhereInput | document_uploadsWhereInput[]
    OR?: document_uploadsWhereInput[]
    NOT?: document_uploadsWhereInput | document_uploadsWhereInput[]
    appointment_letter_path?: StringFilter<"document_uploads"> | string
    educational_certificates_path?: StringFilter<"document_uploads"> | string
    promotion_letter_path?: StringNullableFilter<"document_uploads"> | string | null
    other_documents_path?: StringNullableFilter<"document_uploads"> | string | null
    profile_image_path?: StringFilter<"document_uploads"> | string
    signature_path?: StringFilter<"document_uploads"> | string
    upload_date?: DateTimeFilter<"document_uploads"> | Date | string
    status?: StringNullableFilter<"document_uploads"> | string | null
    registrations?: XOR<RegistrationsScalarRelationFilter, registrationsWhereInput>
  }, "id" | "registration_id">

  export type document_uploadsOrderByWithAggregationInput = {
    id?: SortOrder
    registration_id?: SortOrder
    appointment_letter_path?: SortOrder
    educational_certificates_path?: SortOrder
    promotion_letter_path?: SortOrderInput | SortOrder
    other_documents_path?: SortOrderInput | SortOrder
    profile_image_path?: SortOrder
    signature_path?: SortOrder
    upload_date?: SortOrder
    status?: SortOrderInput | SortOrder
    _count?: document_uploadsCountOrderByAggregateInput
    _avg?: document_uploadsAvgOrderByAggregateInput
    _max?: document_uploadsMaxOrderByAggregateInput
    _min?: document_uploadsMinOrderByAggregateInput
    _sum?: document_uploadsSumOrderByAggregateInput
  }

  export type document_uploadsScalarWhereWithAggregatesInput = {
    AND?: document_uploadsScalarWhereWithAggregatesInput | document_uploadsScalarWhereWithAggregatesInput[]
    OR?: document_uploadsScalarWhereWithAggregatesInput[]
    NOT?: document_uploadsScalarWhereWithAggregatesInput | document_uploadsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"document_uploads"> | number
    registration_id?: StringWithAggregatesFilter<"document_uploads"> | string
    appointment_letter_path?: StringWithAggregatesFilter<"document_uploads"> | string
    educational_certificates_path?: StringWithAggregatesFilter<"document_uploads"> | string
    promotion_letter_path?: StringNullableWithAggregatesFilter<"document_uploads"> | string | null
    other_documents_path?: StringNullableWithAggregatesFilter<"document_uploads"> | string | null
    profile_image_path?: StringWithAggregatesFilter<"document_uploads"> | string
    signature_path?: StringWithAggregatesFilter<"document_uploads"> | string
    upload_date?: DateTimeWithAggregatesFilter<"document_uploads"> | Date | string
    status?: StringNullableWithAggregatesFilter<"document_uploads"> | string | null
  }

  export type employeesWhereInput = {
    AND?: employeesWhereInput | employeesWhereInput[]
    OR?: employeesWhereInput[]
    NOT?: employeesWhereInput | employeesWhereInput[]
    id?: StringFilter<"employees"> | string
    name?: StringFilter<"employees"> | string
    email?: StringFilter<"employees"> | string
    department?: StringFilter<"employees"> | string
    position?: StringFilter<"employees"> | string
    status?: StringFilter<"employees"> | string
    join_date?: DateTimeFilter<"employees"> | Date | string
    created_at?: DateTimeFilter<"employees"> | Date | string
    updated_at?: DateTimeFilter<"employees"> | Date | string
  }

  export type employeesOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    department?: SortOrder
    position?: SortOrder
    status?: SortOrder
    join_date?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type employeesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: employeesWhereInput | employeesWhereInput[]
    OR?: employeesWhereInput[]
    NOT?: employeesWhereInput | employeesWhereInput[]
    name?: StringFilter<"employees"> | string
    department?: StringFilter<"employees"> | string
    position?: StringFilter<"employees"> | string
    status?: StringFilter<"employees"> | string
    join_date?: DateTimeFilter<"employees"> | Date | string
    created_at?: DateTimeFilter<"employees"> | Date | string
    updated_at?: DateTimeFilter<"employees"> | Date | string
  }, "id" | "email">

  export type employeesOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    department?: SortOrder
    position?: SortOrder
    status?: SortOrder
    join_date?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: employeesCountOrderByAggregateInput
    _max?: employeesMaxOrderByAggregateInput
    _min?: employeesMinOrderByAggregateInput
  }

  export type employeesScalarWhereWithAggregatesInput = {
    AND?: employeesScalarWhereWithAggregatesInput | employeesScalarWhereWithAggregatesInput[]
    OR?: employeesScalarWhereWithAggregatesInput[]
    NOT?: employeesScalarWhereWithAggregatesInput | employeesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"employees"> | string
    name?: StringWithAggregatesFilter<"employees"> | string
    email?: StringWithAggregatesFilter<"employees"> | string
    department?: StringWithAggregatesFilter<"employees"> | string
    position?: StringWithAggregatesFilter<"employees"> | string
    status?: StringWithAggregatesFilter<"employees"> | string
    join_date?: DateTimeWithAggregatesFilter<"employees"> | Date | string
    created_at?: DateTimeWithAggregatesFilter<"employees"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"employees"> | Date | string
  }

  export type employment_infoWhereInput = {
    AND?: employment_infoWhereInput | employment_infoWhereInput[]
    OR?: employment_infoWhereInput[]
    NOT?: employment_infoWhereInput | employment_infoWhereInput[]
    id?: IntFilter<"employment_info"> | number
    registration_id?: StringFilter<"employment_info"> | string
    employment_id_no?: StringFilter<"employment_info"> | string
    service_no?: StringFilter<"employment_info"> | string
    file_no?: StringFilter<"employment_info"> | string
    rank_position?: StringFilter<"employment_info"> | string
    department?: StringFilter<"employment_info"> | string
    organization?: StringFilter<"employment_info"> | string
    employment_type?: StringFilter<"employment_info"> | string
    probation_period?: StringFilter<"employment_info"> | string
    work_location?: StringFilter<"employment_info"> | string
    date_of_first_appointment?: DateTimeFilter<"employment_info"> | Date | string
    gl?: StringFilter<"employment_info"> | string
    step?: StringFilter<"employment_info"> | string
    salary_structure?: StringFilter<"employment_info"> | string
    cadre?: StringFilter<"employment_info"> | string
    name_of_bank?: StringFilter<"employment_info"> | string
    account_number?: StringFilter<"employment_info"> | string
    pfa_name?: StringFilter<"employment_info"> | string
    rsapin?: StringFilter<"employment_info"> | string
    educational_background?: StringNullableFilter<"employment_info"> | string | null
    certifications?: StringNullableFilter<"employment_info"> | string | null
    registrations?: XOR<RegistrationsScalarRelationFilter, registrationsWhereInput>
  }

  export type employment_infoOrderByWithRelationInput = {
    id?: SortOrder
    registration_id?: SortOrder
    employment_id_no?: SortOrder
    service_no?: SortOrder
    file_no?: SortOrder
    rank_position?: SortOrder
    department?: SortOrder
    organization?: SortOrder
    employment_type?: SortOrder
    probation_period?: SortOrder
    work_location?: SortOrder
    date_of_first_appointment?: SortOrder
    gl?: SortOrder
    step?: SortOrder
    salary_structure?: SortOrder
    cadre?: SortOrder
    name_of_bank?: SortOrder
    account_number?: SortOrder
    pfa_name?: SortOrder
    rsapin?: SortOrder
    educational_background?: SortOrderInput | SortOrder
    certifications?: SortOrderInput | SortOrder
    registrations?: registrationsOrderByWithRelationInput
  }

  export type employment_infoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    registration_id?: string
    AND?: employment_infoWhereInput | employment_infoWhereInput[]
    OR?: employment_infoWhereInput[]
    NOT?: employment_infoWhereInput | employment_infoWhereInput[]
    employment_id_no?: StringFilter<"employment_info"> | string
    service_no?: StringFilter<"employment_info"> | string
    file_no?: StringFilter<"employment_info"> | string
    rank_position?: StringFilter<"employment_info"> | string
    department?: StringFilter<"employment_info"> | string
    organization?: StringFilter<"employment_info"> | string
    employment_type?: StringFilter<"employment_info"> | string
    probation_period?: StringFilter<"employment_info"> | string
    work_location?: StringFilter<"employment_info"> | string
    date_of_first_appointment?: DateTimeFilter<"employment_info"> | Date | string
    gl?: StringFilter<"employment_info"> | string
    step?: StringFilter<"employment_info"> | string
    salary_structure?: StringFilter<"employment_info"> | string
    cadre?: StringFilter<"employment_info"> | string
    name_of_bank?: StringFilter<"employment_info"> | string
    account_number?: StringFilter<"employment_info"> | string
    pfa_name?: StringFilter<"employment_info"> | string
    rsapin?: StringFilter<"employment_info"> | string
    educational_background?: StringNullableFilter<"employment_info"> | string | null
    certifications?: StringNullableFilter<"employment_info"> | string | null
    registrations?: XOR<RegistrationsScalarRelationFilter, registrationsWhereInput>
  }, "id" | "registration_id">

  export type employment_infoOrderByWithAggregationInput = {
    id?: SortOrder
    registration_id?: SortOrder
    employment_id_no?: SortOrder
    service_no?: SortOrder
    file_no?: SortOrder
    rank_position?: SortOrder
    department?: SortOrder
    organization?: SortOrder
    employment_type?: SortOrder
    probation_period?: SortOrder
    work_location?: SortOrder
    date_of_first_appointment?: SortOrder
    gl?: SortOrder
    step?: SortOrder
    salary_structure?: SortOrder
    cadre?: SortOrder
    name_of_bank?: SortOrder
    account_number?: SortOrder
    pfa_name?: SortOrder
    rsapin?: SortOrder
    educational_background?: SortOrderInput | SortOrder
    certifications?: SortOrderInput | SortOrder
    _count?: employment_infoCountOrderByAggregateInput
    _avg?: employment_infoAvgOrderByAggregateInput
    _max?: employment_infoMaxOrderByAggregateInput
    _min?: employment_infoMinOrderByAggregateInput
    _sum?: employment_infoSumOrderByAggregateInput
  }

  export type employment_infoScalarWhereWithAggregatesInput = {
    AND?: employment_infoScalarWhereWithAggregatesInput | employment_infoScalarWhereWithAggregatesInput[]
    OR?: employment_infoScalarWhereWithAggregatesInput[]
    NOT?: employment_infoScalarWhereWithAggregatesInput | employment_infoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"employment_info"> | number
    registration_id?: StringWithAggregatesFilter<"employment_info"> | string
    employment_id_no?: StringWithAggregatesFilter<"employment_info"> | string
    service_no?: StringWithAggregatesFilter<"employment_info"> | string
    file_no?: StringWithAggregatesFilter<"employment_info"> | string
    rank_position?: StringWithAggregatesFilter<"employment_info"> | string
    department?: StringWithAggregatesFilter<"employment_info"> | string
    organization?: StringWithAggregatesFilter<"employment_info"> | string
    employment_type?: StringWithAggregatesFilter<"employment_info"> | string
    probation_period?: StringWithAggregatesFilter<"employment_info"> | string
    work_location?: StringWithAggregatesFilter<"employment_info"> | string
    date_of_first_appointment?: DateTimeWithAggregatesFilter<"employment_info"> | Date | string
    gl?: StringWithAggregatesFilter<"employment_info"> | string
    step?: StringWithAggregatesFilter<"employment_info"> | string
    salary_structure?: StringWithAggregatesFilter<"employment_info"> | string
    cadre?: StringWithAggregatesFilter<"employment_info"> | string
    name_of_bank?: StringWithAggregatesFilter<"employment_info"> | string
    account_number?: StringWithAggregatesFilter<"employment_info"> | string
    pfa_name?: StringWithAggregatesFilter<"employment_info"> | string
    rsapin?: StringWithAggregatesFilter<"employment_info"> | string
    educational_background?: StringNullableWithAggregatesFilter<"employment_info"> | string | null
    certifications?: StringNullableWithAggregatesFilter<"employment_info"> | string | null
  }

  export type password_reset_tokensWhereInput = {
    AND?: password_reset_tokensWhereInput | password_reset_tokensWhereInput[]
    OR?: password_reset_tokensWhereInput[]
    NOT?: password_reset_tokensWhereInput | password_reset_tokensWhereInput[]
    id?: IntFilter<"password_reset_tokens"> | number
    user_id?: IntFilter<"password_reset_tokens"> | number
    token?: StringFilter<"password_reset_tokens"> | string
    expires_at?: DateTimeFilter<"password_reset_tokens"> | Date | string
    created_at?: DateTimeFilter<"password_reset_tokens"> | Date | string
    admin_users?: XOR<Admin_usersScalarRelationFilter, admin_usersWhereInput>
  }

  export type password_reset_tokensOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    token?: SortOrder
    expires_at?: SortOrder
    created_at?: SortOrder
    admin_users?: admin_usersOrderByWithRelationInput
  }

  export type password_reset_tokensWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    user_id?: number
    AND?: password_reset_tokensWhereInput | password_reset_tokensWhereInput[]
    OR?: password_reset_tokensWhereInput[]
    NOT?: password_reset_tokensWhereInput | password_reset_tokensWhereInput[]
    token?: StringFilter<"password_reset_tokens"> | string
    expires_at?: DateTimeFilter<"password_reset_tokens"> | Date | string
    created_at?: DateTimeFilter<"password_reset_tokens"> | Date | string
    admin_users?: XOR<Admin_usersScalarRelationFilter, admin_usersWhereInput>
  }, "id" | "user_id">

  export type password_reset_tokensOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    token?: SortOrder
    expires_at?: SortOrder
    created_at?: SortOrder
    _count?: password_reset_tokensCountOrderByAggregateInput
    _avg?: password_reset_tokensAvgOrderByAggregateInput
    _max?: password_reset_tokensMaxOrderByAggregateInput
    _min?: password_reset_tokensMinOrderByAggregateInput
    _sum?: password_reset_tokensSumOrderByAggregateInput
  }

  export type password_reset_tokensScalarWhereWithAggregatesInput = {
    AND?: password_reset_tokensScalarWhereWithAggregatesInput | password_reset_tokensScalarWhereWithAggregatesInput[]
    OR?: password_reset_tokensScalarWhereWithAggregatesInput[]
    NOT?: password_reset_tokensScalarWhereWithAggregatesInput | password_reset_tokensScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"password_reset_tokens"> | number
    user_id?: IntWithAggregatesFilter<"password_reset_tokens"> | number
    token?: StringWithAggregatesFilter<"password_reset_tokens"> | string
    expires_at?: DateTimeWithAggregatesFilter<"password_reset_tokens"> | Date | string
    created_at?: DateTimeWithAggregatesFilter<"password_reset_tokens"> | Date | string
  }

  export type pending_employeesWhereInput = {
    AND?: pending_employeesWhereInput | pending_employeesWhereInput[]
    OR?: pending_employeesWhereInput[]
    NOT?: pending_employeesWhereInput | pending_employeesWhereInput[]
    id?: IntFilter<"pending_employees"> | number
    registration_id?: StringNullableFilter<"pending_employees"> | string | null
    surname?: StringFilter<"pending_employees"> | string
    firstname?: StringFilter<"pending_employees"> | string
    email?: StringFilter<"pending_employees"> | string
    department?: StringNullableFilter<"pending_employees"> | string | null
    position?: StringNullableFilter<"pending_employees"> | string | null
    status?: StringFilter<"pending_employees"> | string
    source?: StringFilter<"pending_employees"> | string
    submission_date?: DateTimeNullableFilter<"pending_employees"> | Date | string | null
    created_at?: DateTimeNullableFilter<"pending_employees"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"pending_employees"> | Date | string | null
    missing_fields?: JsonNullableFilter<"pending_employees">
    metadata?: JsonNullableFilter<"pending_employees">
  }

  export type pending_employeesOrderByWithRelationInput = {
    id?: SortOrder
    registration_id?: SortOrderInput | SortOrder
    surname?: SortOrder
    firstname?: SortOrder
    email?: SortOrder
    department?: SortOrderInput | SortOrder
    position?: SortOrderInput | SortOrder
    status?: SortOrder
    source?: SortOrder
    submission_date?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    missing_fields?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
  }

  export type pending_employeesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    registration_id?: string
    AND?: pending_employeesWhereInput | pending_employeesWhereInput[]
    OR?: pending_employeesWhereInput[]
    NOT?: pending_employeesWhereInput | pending_employeesWhereInput[]
    surname?: StringFilter<"pending_employees"> | string
    firstname?: StringFilter<"pending_employees"> | string
    email?: StringFilter<"pending_employees"> | string
    department?: StringNullableFilter<"pending_employees"> | string | null
    position?: StringNullableFilter<"pending_employees"> | string | null
    status?: StringFilter<"pending_employees"> | string
    source?: StringFilter<"pending_employees"> | string
    submission_date?: DateTimeNullableFilter<"pending_employees"> | Date | string | null
    created_at?: DateTimeNullableFilter<"pending_employees"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"pending_employees"> | Date | string | null
    missing_fields?: JsonNullableFilter<"pending_employees">
    metadata?: JsonNullableFilter<"pending_employees">
  }, "id" | "registration_id">

  export type pending_employeesOrderByWithAggregationInput = {
    id?: SortOrder
    registration_id?: SortOrderInput | SortOrder
    surname?: SortOrder
    firstname?: SortOrder
    email?: SortOrder
    department?: SortOrderInput | SortOrder
    position?: SortOrderInput | SortOrder
    status?: SortOrder
    source?: SortOrder
    submission_date?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    missing_fields?: SortOrderInput | SortOrder
    metadata?: SortOrderInput | SortOrder
    _count?: pending_employeesCountOrderByAggregateInput
    _avg?: pending_employeesAvgOrderByAggregateInput
    _max?: pending_employeesMaxOrderByAggregateInput
    _min?: pending_employeesMinOrderByAggregateInput
    _sum?: pending_employeesSumOrderByAggregateInput
  }

  export type pending_employeesScalarWhereWithAggregatesInput = {
    AND?: pending_employeesScalarWhereWithAggregatesInput | pending_employeesScalarWhereWithAggregatesInput[]
    OR?: pending_employeesScalarWhereWithAggregatesInput[]
    NOT?: pending_employeesScalarWhereWithAggregatesInput | pending_employeesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"pending_employees"> | number
    registration_id?: StringNullableWithAggregatesFilter<"pending_employees"> | string | null
    surname?: StringWithAggregatesFilter<"pending_employees"> | string
    firstname?: StringWithAggregatesFilter<"pending_employees"> | string
    email?: StringWithAggregatesFilter<"pending_employees"> | string
    department?: StringNullableWithAggregatesFilter<"pending_employees"> | string | null
    position?: StringNullableWithAggregatesFilter<"pending_employees"> | string | null
    status?: StringWithAggregatesFilter<"pending_employees"> | string
    source?: StringWithAggregatesFilter<"pending_employees"> | string
    submission_date?: DateTimeNullableWithAggregatesFilter<"pending_employees"> | Date | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"pending_employees"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"pending_employees"> | Date | string | null
    missing_fields?: JsonNullableWithAggregatesFilter<"pending_employees">
    metadata?: JsonNullableWithAggregatesFilter<"pending_employees">
  }

  export type personal_infoWhereInput = {
    AND?: personal_infoWhereInput | personal_infoWhereInput[]
    OR?: personal_infoWhereInput[]
    NOT?: personal_infoWhereInput | personal_infoWhereInput[]
    id?: IntFilter<"personal_info"> | number
    registration_id?: StringFilter<"personal_info"> | string
    title?: StringFilter<"personal_info"> | string
    surname?: StringFilter<"personal_info"> | string
    first_name?: StringFilter<"personal_info"> | string
    other_names?: StringNullableFilter<"personal_info"> | string | null
    phone_number?: StringFilter<"personal_info"> | string
    email?: StringFilter<"personal_info"> | string
    date_of_birth?: DateTimeFilter<"personal_info"> | Date | string
    sex?: StringFilter<"personal_info"> | string
    marital_status?: StringFilter<"personal_info"> | string
    state_of_origin?: StringFilter<"personal_info"> | string
    lga?: StringFilter<"personal_info"> | string
    state_of_residence?: StringFilter<"personal_info"> | string
    address_state_of_residence?: StringFilter<"personal_info"> | string
    next_of_kin_name?: StringFilter<"personal_info"> | string
    next_of_kin_relationship?: StringFilter<"personal_info"> | string
    next_of_kin_phone_number?: StringFilter<"personal_info"> | string
    next_of_kin_address?: StringFilter<"personal_info"> | string
    registrations?: XOR<RegistrationsScalarRelationFilter, registrationsWhereInput>
  }

  export type personal_infoOrderByWithRelationInput = {
    id?: SortOrder
    registration_id?: SortOrder
    title?: SortOrder
    surname?: SortOrder
    first_name?: SortOrder
    other_names?: SortOrderInput | SortOrder
    phone_number?: SortOrder
    email?: SortOrder
    date_of_birth?: SortOrder
    sex?: SortOrder
    marital_status?: SortOrder
    state_of_origin?: SortOrder
    lga?: SortOrder
    state_of_residence?: SortOrder
    address_state_of_residence?: SortOrder
    next_of_kin_name?: SortOrder
    next_of_kin_relationship?: SortOrder
    next_of_kin_phone_number?: SortOrder
    next_of_kin_address?: SortOrder
    registrations?: registrationsOrderByWithRelationInput
  }

  export type personal_infoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    registration_id?: string
    AND?: personal_infoWhereInput | personal_infoWhereInput[]
    OR?: personal_infoWhereInput[]
    NOT?: personal_infoWhereInput | personal_infoWhereInput[]
    title?: StringFilter<"personal_info"> | string
    surname?: StringFilter<"personal_info"> | string
    first_name?: StringFilter<"personal_info"> | string
    other_names?: StringNullableFilter<"personal_info"> | string | null
    phone_number?: StringFilter<"personal_info"> | string
    email?: StringFilter<"personal_info"> | string
    date_of_birth?: DateTimeFilter<"personal_info"> | Date | string
    sex?: StringFilter<"personal_info"> | string
    marital_status?: StringFilter<"personal_info"> | string
    state_of_origin?: StringFilter<"personal_info"> | string
    lga?: StringFilter<"personal_info"> | string
    state_of_residence?: StringFilter<"personal_info"> | string
    address_state_of_residence?: StringFilter<"personal_info"> | string
    next_of_kin_name?: StringFilter<"personal_info"> | string
    next_of_kin_relationship?: StringFilter<"personal_info"> | string
    next_of_kin_phone_number?: StringFilter<"personal_info"> | string
    next_of_kin_address?: StringFilter<"personal_info"> | string
    registrations?: XOR<RegistrationsScalarRelationFilter, registrationsWhereInput>
  }, "id" | "registration_id">

  export type personal_infoOrderByWithAggregationInput = {
    id?: SortOrder
    registration_id?: SortOrder
    title?: SortOrder
    surname?: SortOrder
    first_name?: SortOrder
    other_names?: SortOrderInput | SortOrder
    phone_number?: SortOrder
    email?: SortOrder
    date_of_birth?: SortOrder
    sex?: SortOrder
    marital_status?: SortOrder
    state_of_origin?: SortOrder
    lga?: SortOrder
    state_of_residence?: SortOrder
    address_state_of_residence?: SortOrder
    next_of_kin_name?: SortOrder
    next_of_kin_relationship?: SortOrder
    next_of_kin_phone_number?: SortOrder
    next_of_kin_address?: SortOrder
    _count?: personal_infoCountOrderByAggregateInput
    _avg?: personal_infoAvgOrderByAggregateInput
    _max?: personal_infoMaxOrderByAggregateInput
    _min?: personal_infoMinOrderByAggregateInput
    _sum?: personal_infoSumOrderByAggregateInput
  }

  export type personal_infoScalarWhereWithAggregatesInput = {
    AND?: personal_infoScalarWhereWithAggregatesInput | personal_infoScalarWhereWithAggregatesInput[]
    OR?: personal_infoScalarWhereWithAggregatesInput[]
    NOT?: personal_infoScalarWhereWithAggregatesInput | personal_infoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"personal_info"> | number
    registration_id?: StringWithAggregatesFilter<"personal_info"> | string
    title?: StringWithAggregatesFilter<"personal_info"> | string
    surname?: StringWithAggregatesFilter<"personal_info"> | string
    first_name?: StringWithAggregatesFilter<"personal_info"> | string
    other_names?: StringNullableWithAggregatesFilter<"personal_info"> | string | null
    phone_number?: StringWithAggregatesFilter<"personal_info"> | string
    email?: StringWithAggregatesFilter<"personal_info"> | string
    date_of_birth?: DateTimeWithAggregatesFilter<"personal_info"> | Date | string
    sex?: StringWithAggregatesFilter<"personal_info"> | string
    marital_status?: StringWithAggregatesFilter<"personal_info"> | string
    state_of_origin?: StringWithAggregatesFilter<"personal_info"> | string
    lga?: StringWithAggregatesFilter<"personal_info"> | string
    state_of_residence?: StringWithAggregatesFilter<"personal_info"> | string
    address_state_of_residence?: StringWithAggregatesFilter<"personal_info"> | string
    next_of_kin_name?: StringWithAggregatesFilter<"personal_info"> | string
    next_of_kin_relationship?: StringWithAggregatesFilter<"personal_info"> | string
    next_of_kin_phone_number?: StringWithAggregatesFilter<"personal_info"> | string
    next_of_kin_address?: StringWithAggregatesFilter<"personal_info"> | string
  }

  export type registration_commentsWhereInput = {
    AND?: registration_commentsWhereInput | registration_commentsWhereInput[]
    OR?: registration_commentsWhereInput[]
    NOT?: registration_commentsWhereInput | registration_commentsWhereInput[]
    id?: IntFilter<"registration_comments"> | number
    registration_id?: StringFilter<"registration_comments"> | string
    comment_text?: StringFilter<"registration_comments"> | string
    author?: StringNullableFilter<"registration_comments"> | string | null
    created_at?: DateTimeFilter<"registration_comments"> | Date | string
    registrations?: XOR<RegistrationsScalarRelationFilter, registrationsWhereInput>
  }

  export type registration_commentsOrderByWithRelationInput = {
    id?: SortOrder
    registration_id?: SortOrder
    comment_text?: SortOrder
    author?: SortOrderInput | SortOrder
    created_at?: SortOrder
    registrations?: registrationsOrderByWithRelationInput
  }

  export type registration_commentsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: registration_commentsWhereInput | registration_commentsWhereInput[]
    OR?: registration_commentsWhereInput[]
    NOT?: registration_commentsWhereInput | registration_commentsWhereInput[]
    registration_id?: StringFilter<"registration_comments"> | string
    comment_text?: StringFilter<"registration_comments"> | string
    author?: StringNullableFilter<"registration_comments"> | string | null
    created_at?: DateTimeFilter<"registration_comments"> | Date | string
    registrations?: XOR<RegistrationsScalarRelationFilter, registrationsWhereInput>
  }, "id">

  export type registration_commentsOrderByWithAggregationInput = {
    id?: SortOrder
    registration_id?: SortOrder
    comment_text?: SortOrder
    author?: SortOrderInput | SortOrder
    created_at?: SortOrder
    _count?: registration_commentsCountOrderByAggregateInput
    _avg?: registration_commentsAvgOrderByAggregateInput
    _max?: registration_commentsMaxOrderByAggregateInput
    _min?: registration_commentsMinOrderByAggregateInput
    _sum?: registration_commentsSumOrderByAggregateInput
  }

  export type registration_commentsScalarWhereWithAggregatesInput = {
    AND?: registration_commentsScalarWhereWithAggregatesInput | registration_commentsScalarWhereWithAggregatesInput[]
    OR?: registration_commentsScalarWhereWithAggregatesInput[]
    NOT?: registration_commentsScalarWhereWithAggregatesInput | registration_commentsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"registration_comments"> | number
    registration_id?: StringWithAggregatesFilter<"registration_comments"> | string
    comment_text?: StringWithAggregatesFilter<"registration_comments"> | string
    author?: StringNullableWithAggregatesFilter<"registration_comments"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"registration_comments"> | Date | string
  }

  export type registration_historyWhereInput = {
    AND?: registration_historyWhereInput | registration_historyWhereInput[]
    OR?: registration_historyWhereInput[]
    NOT?: registration_historyWhereInput | registration_historyWhereInput[]
    id?: IntFilter<"registration_history"> | number
    registration_id?: StringNullableFilter<"registration_history"> | string | null
    action?: StringFilter<"registration_history"> | string
    details?: StringNullableFilter<"registration_history"> | string | null
    performed_by?: StringNullableFilter<"registration_history"> | string | null
    performed_at?: DateTimeFilter<"registration_history"> | Date | string
    registrations?: XOR<RegistrationsNullableScalarRelationFilter, registrationsWhereInput> | null
  }

  export type registration_historyOrderByWithRelationInput = {
    id?: SortOrder
    registration_id?: SortOrderInput | SortOrder
    action?: SortOrder
    details?: SortOrderInput | SortOrder
    performed_by?: SortOrderInput | SortOrder
    performed_at?: SortOrder
    registrations?: registrationsOrderByWithRelationInput
  }

  export type registration_historyWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: registration_historyWhereInput | registration_historyWhereInput[]
    OR?: registration_historyWhereInput[]
    NOT?: registration_historyWhereInput | registration_historyWhereInput[]
    registration_id?: StringNullableFilter<"registration_history"> | string | null
    action?: StringFilter<"registration_history"> | string
    details?: StringNullableFilter<"registration_history"> | string | null
    performed_by?: StringNullableFilter<"registration_history"> | string | null
    performed_at?: DateTimeFilter<"registration_history"> | Date | string
    registrations?: XOR<RegistrationsNullableScalarRelationFilter, registrationsWhereInput> | null
  }, "id">

  export type registration_historyOrderByWithAggregationInput = {
    id?: SortOrder
    registration_id?: SortOrderInput | SortOrder
    action?: SortOrder
    details?: SortOrderInput | SortOrder
    performed_by?: SortOrderInput | SortOrder
    performed_at?: SortOrder
    _count?: registration_historyCountOrderByAggregateInput
    _avg?: registration_historyAvgOrderByAggregateInput
    _max?: registration_historyMaxOrderByAggregateInput
    _min?: registration_historyMinOrderByAggregateInput
    _sum?: registration_historySumOrderByAggregateInput
  }

  export type registration_historyScalarWhereWithAggregatesInput = {
    AND?: registration_historyScalarWhereWithAggregatesInput | registration_historyScalarWhereWithAggregatesInput[]
    OR?: registration_historyScalarWhereWithAggregatesInput[]
    NOT?: registration_historyScalarWhereWithAggregatesInput | registration_historyScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"registration_history"> | number
    registration_id?: StringNullableWithAggregatesFilter<"registration_history"> | string | null
    action?: StringWithAggregatesFilter<"registration_history"> | string
    details?: StringNullableWithAggregatesFilter<"registration_history"> | string | null
    performed_by?: StringNullableWithAggregatesFilter<"registration_history"> | string | null
    performed_at?: DateTimeWithAggregatesFilter<"registration_history"> | Date | string
  }

  export type registrationsWhereInput = {
    AND?: registrationsWhereInput | registrationsWhereInput[]
    OR?: registrationsWhereInput[]
    NOT?: registrationsWhereInput | registrationsWhereInput[]
    id?: IntFilter<"registrations"> | number
    registration_Id?: StringFilter<"registrations"> | string
    nin?: StringNullableFilter<"registrations"> | string | null
    status?: StringFilter<"registrations"> | string
    current_step?: StringFilter<"registrations"> | string
    declaration?: BoolNullableFilter<"registrations"> | boolean | null
    created_at?: DateTimeFilter<"registrations"> | Date | string
    updated_at?: DateTimeFilter<"registrations"> | Date | string
    submitted_at?: DateTimeNullableFilter<"registrations"> | Date | string | null
    approved_at?: DateTimeNullableFilter<"registrations"> | Date | string | null
    rejected_at?: DateTimeNullableFilter<"registrations"> | Date | string | null
    VerificationData?: XOR<VerificationDataNullableScalarRelationFilter, VerificationDataWhereInput> | null
    document_uploads?: XOR<Document_uploadsNullableScalarRelationFilter, document_uploadsWhereInput> | null
    employment_info?: XOR<Employment_infoNullableScalarRelationFilter, employment_infoWhereInput> | null
    personal_info?: XOR<Personal_infoNullableScalarRelationFilter, personal_infoWhereInput> | null
    registration_comments?: Registration_commentsListRelationFilter
    registration_history?: Registration_historyListRelationFilter
  }

  export type registrationsOrderByWithRelationInput = {
    id?: SortOrder
    registration_Id?: SortOrder
    nin?: SortOrderInput | SortOrder
    status?: SortOrder
    current_step?: SortOrder
    declaration?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    submitted_at?: SortOrderInput | SortOrder
    approved_at?: SortOrderInput | SortOrder
    rejected_at?: SortOrderInput | SortOrder
    VerificationData?: VerificationDataOrderByWithRelationInput
    document_uploads?: document_uploadsOrderByWithRelationInput
    employment_info?: employment_infoOrderByWithRelationInput
    personal_info?: personal_infoOrderByWithRelationInput
    registration_comments?: registration_commentsOrderByRelationAggregateInput
    registration_history?: registration_historyOrderByRelationAggregateInput
  }

  export type registrationsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    registration_Id?: string
    nin?: string
    AND?: registrationsWhereInput | registrationsWhereInput[]
    OR?: registrationsWhereInput[]
    NOT?: registrationsWhereInput | registrationsWhereInput[]
    status?: StringFilter<"registrations"> | string
    current_step?: StringFilter<"registrations"> | string
    declaration?: BoolNullableFilter<"registrations"> | boolean | null
    created_at?: DateTimeFilter<"registrations"> | Date | string
    updated_at?: DateTimeFilter<"registrations"> | Date | string
    submitted_at?: DateTimeNullableFilter<"registrations"> | Date | string | null
    approved_at?: DateTimeNullableFilter<"registrations"> | Date | string | null
    rejected_at?: DateTimeNullableFilter<"registrations"> | Date | string | null
    VerificationData?: XOR<VerificationDataNullableScalarRelationFilter, VerificationDataWhereInput> | null
    document_uploads?: XOR<Document_uploadsNullableScalarRelationFilter, document_uploadsWhereInput> | null
    employment_info?: XOR<Employment_infoNullableScalarRelationFilter, employment_infoWhereInput> | null
    personal_info?: XOR<Personal_infoNullableScalarRelationFilter, personal_infoWhereInput> | null
    registration_comments?: Registration_commentsListRelationFilter
    registration_history?: Registration_historyListRelationFilter
  }, "id" | "registration_Id" | "nin">

  export type registrationsOrderByWithAggregationInput = {
    id?: SortOrder
    registration_Id?: SortOrder
    nin?: SortOrderInput | SortOrder
    status?: SortOrder
    current_step?: SortOrder
    declaration?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    submitted_at?: SortOrderInput | SortOrder
    approved_at?: SortOrderInput | SortOrder
    rejected_at?: SortOrderInput | SortOrder
    _count?: registrationsCountOrderByAggregateInput
    _avg?: registrationsAvgOrderByAggregateInput
    _max?: registrationsMaxOrderByAggregateInput
    _min?: registrationsMinOrderByAggregateInput
    _sum?: registrationsSumOrderByAggregateInput
  }

  export type registrationsScalarWhereWithAggregatesInput = {
    AND?: registrationsScalarWhereWithAggregatesInput | registrationsScalarWhereWithAggregatesInput[]
    OR?: registrationsScalarWhereWithAggregatesInput[]
    NOT?: registrationsScalarWhereWithAggregatesInput | registrationsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"registrations"> | number
    registration_Id?: StringWithAggregatesFilter<"registrations"> | string
    nin?: StringNullableWithAggregatesFilter<"registrations"> | string | null
    status?: StringWithAggregatesFilter<"registrations"> | string
    current_step?: StringWithAggregatesFilter<"registrations"> | string
    declaration?: BoolNullableWithAggregatesFilter<"registrations"> | boolean | null
    created_at?: DateTimeWithAggregatesFilter<"registrations"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"registrations"> | Date | string
    submitted_at?: DateTimeNullableWithAggregatesFilter<"registrations"> | Date | string | null
    approved_at?: DateTimeNullableWithAggregatesFilter<"registrations"> | Date | string | null
    rejected_at?: DateTimeNullableWithAggregatesFilter<"registrations"> | Date | string | null
  }

  export type VerificationDataWhereInput = {
    AND?: VerificationDataWhereInput | VerificationDataWhereInput[]
    OR?: VerificationDataWhereInput[]
    NOT?: VerificationDataWhereInput | VerificationDataWhereInput[]
    id?: StringFilter<"VerificationData"> | string
    nin?: StringNullableFilter<"VerificationData"> | string | null
    vnin?: StringNullableFilter<"VerificationData"> | string | null
    title?: StringNullableFilter<"VerificationData"> | string | null
    surname?: StringNullableFilter<"VerificationData"> | string | null
    email?: StringNullableFilter<"VerificationData"> | string | null
    gender?: StringNullableFilter<"VerificationData"> | string | null
    state_of_origin?: StringNullableFilter<"VerificationData"> | string | null
    religion?: StringNullableFilter<"VerificationData"> | string | null
    profession?: StringNullableFilter<"VerificationData"> | string | null
    residence_address?: StringNullableFilter<"VerificationData"> | string | null
    residence_lga?: StringNullableFilter<"VerificationData"> | string | null
    residence_state?: StringNullableFilter<"VerificationData"> | string | null
    nok_surname?: StringNullableFilter<"VerificationData"> | string | null
    nok_lga?: StringNullableFilter<"VerificationData"> | string | null
    nok_state?: StringNullableFilter<"VerificationData"> | string | null
    nok_town?: StringNullableFilter<"VerificationData"> | string | null
    maiden_name?: StringNullableFilter<"VerificationData"> | string | null
    tracking_id?: StringNullableFilter<"VerificationData"> | string | null
    createdAt?: DateTimeFilter<"VerificationData"> | Date | string
    updatedAt?: DateTimeFilter<"VerificationData"> | Date | string
    birthcountry?: StringNullableFilter<"VerificationData"> | string | null
    birthdate?: StringNullableFilter<"VerificationData"> | string | null
    birthlga?: StringNullableFilter<"VerificationData"> | string | null
    birthstate?: StringNullableFilter<"VerificationData"> | string | null
    central_iD?: StringNullableFilter<"VerificationData"> | string | null
    educationallevel?: StringNullableFilter<"VerificationData"> | string | null
    employmentstatus?: StringNullableFilter<"VerificationData"> | string | null
    firstname?: StringNullableFilter<"VerificationData"> | string | null
    heigth?: StringNullableFilter<"VerificationData"> | string | null
    lga_origin?: StringNullableFilter<"VerificationData"> | string | null
    maritalstatus?: StringNullableFilter<"VerificationData"> | string | null
    middlename?: StringNullableFilter<"VerificationData"> | string | null
    nok_address1?: StringNullableFilter<"VerificationData"> | string | null
    nok_address2?: StringNullableFilter<"VerificationData"> | string | null
    nok_firstname?: StringNullableFilter<"VerificationData"> | string | null
    nok_middlename?: StringNullableFilter<"VerificationData"> | string | null
    nok_postalcode?: StringNullableFilter<"VerificationData"> | string | null
    nspokenlang?: StringNullableFilter<"VerificationData"> | string | null
    ospokenlang?: StringNullableFilter<"VerificationData"> | string | null
    pfirstname?: StringNullableFilter<"VerificationData"> | string | null
    photo?: StringNullableFilter<"VerificationData"> | string | null
    pmiddlename?: StringNullableFilter<"VerificationData"> | string | null
    psurname?: StringNullableFilter<"VerificationData"> | string | null
    residence_AdressLine1?: StringNullableFilter<"VerificationData"> | string | null
    residence_Town?: StringNullableFilter<"VerificationData"> | string | null
    residencestatus?: StringNullableFilter<"VerificationData"> | string | null
    self_origin_lga?: StringNullableFilter<"VerificationData"> | string | null
    self_origin_place?: StringNullableFilter<"VerificationData"> | string | null
    self_origin_state?: StringNullableFilter<"VerificationData"> | string | null
    signature?: StringNullableFilter<"VerificationData"> | string | null
    spoken_language?: StringNullableFilter<"VerificationData"> | string | null
    telephoneno?: StringNullableFilter<"VerificationData"> | string | null
    userid?: StringNullableFilter<"VerificationData"> | string | null
    registration_id?: IntFilter<"VerificationData"> | number
    registration?: XOR<RegistrationsScalarRelationFilter, registrationsWhereInput>
  }

  export type VerificationDataOrderByWithRelationInput = {
    id?: SortOrder
    nin?: SortOrderInput | SortOrder
    vnin?: SortOrderInput | SortOrder
    title?: SortOrderInput | SortOrder
    surname?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    state_of_origin?: SortOrderInput | SortOrder
    religion?: SortOrderInput | SortOrder
    profession?: SortOrderInput | SortOrder
    residence_address?: SortOrderInput | SortOrder
    residence_lga?: SortOrderInput | SortOrder
    residence_state?: SortOrderInput | SortOrder
    nok_surname?: SortOrderInput | SortOrder
    nok_lga?: SortOrderInput | SortOrder
    nok_state?: SortOrderInput | SortOrder
    nok_town?: SortOrderInput | SortOrder
    maiden_name?: SortOrderInput | SortOrder
    tracking_id?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    birthcountry?: SortOrderInput | SortOrder
    birthdate?: SortOrderInput | SortOrder
    birthlga?: SortOrderInput | SortOrder
    birthstate?: SortOrderInput | SortOrder
    central_iD?: SortOrderInput | SortOrder
    educationallevel?: SortOrderInput | SortOrder
    employmentstatus?: SortOrderInput | SortOrder
    firstname?: SortOrderInput | SortOrder
    heigth?: SortOrderInput | SortOrder
    lga_origin?: SortOrderInput | SortOrder
    maritalstatus?: SortOrderInput | SortOrder
    middlename?: SortOrderInput | SortOrder
    nok_address1?: SortOrderInput | SortOrder
    nok_address2?: SortOrderInput | SortOrder
    nok_firstname?: SortOrderInput | SortOrder
    nok_middlename?: SortOrderInput | SortOrder
    nok_postalcode?: SortOrderInput | SortOrder
    nspokenlang?: SortOrderInput | SortOrder
    ospokenlang?: SortOrderInput | SortOrder
    pfirstname?: SortOrderInput | SortOrder
    photo?: SortOrderInput | SortOrder
    pmiddlename?: SortOrderInput | SortOrder
    psurname?: SortOrderInput | SortOrder
    residence_AdressLine1?: SortOrderInput | SortOrder
    residence_Town?: SortOrderInput | SortOrder
    residencestatus?: SortOrderInput | SortOrder
    self_origin_lga?: SortOrderInput | SortOrder
    self_origin_place?: SortOrderInput | SortOrder
    self_origin_state?: SortOrderInput | SortOrder
    signature?: SortOrderInput | SortOrder
    spoken_language?: SortOrderInput | SortOrder
    telephoneno?: SortOrderInput | SortOrder
    userid?: SortOrderInput | SortOrder
    registration_id?: SortOrder
    registration?: registrationsOrderByWithRelationInput
  }

  export type VerificationDataWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    nin?: string
    registration_id?: number
    AND?: VerificationDataWhereInput | VerificationDataWhereInput[]
    OR?: VerificationDataWhereInput[]
    NOT?: VerificationDataWhereInput | VerificationDataWhereInput[]
    vnin?: StringNullableFilter<"VerificationData"> | string | null
    title?: StringNullableFilter<"VerificationData"> | string | null
    surname?: StringNullableFilter<"VerificationData"> | string | null
    email?: StringNullableFilter<"VerificationData"> | string | null
    gender?: StringNullableFilter<"VerificationData"> | string | null
    state_of_origin?: StringNullableFilter<"VerificationData"> | string | null
    religion?: StringNullableFilter<"VerificationData"> | string | null
    profession?: StringNullableFilter<"VerificationData"> | string | null
    residence_address?: StringNullableFilter<"VerificationData"> | string | null
    residence_lga?: StringNullableFilter<"VerificationData"> | string | null
    residence_state?: StringNullableFilter<"VerificationData"> | string | null
    nok_surname?: StringNullableFilter<"VerificationData"> | string | null
    nok_lga?: StringNullableFilter<"VerificationData"> | string | null
    nok_state?: StringNullableFilter<"VerificationData"> | string | null
    nok_town?: StringNullableFilter<"VerificationData"> | string | null
    maiden_name?: StringNullableFilter<"VerificationData"> | string | null
    tracking_id?: StringNullableFilter<"VerificationData"> | string | null
    createdAt?: DateTimeFilter<"VerificationData"> | Date | string
    updatedAt?: DateTimeFilter<"VerificationData"> | Date | string
    birthcountry?: StringNullableFilter<"VerificationData"> | string | null
    birthdate?: StringNullableFilter<"VerificationData"> | string | null
    birthlga?: StringNullableFilter<"VerificationData"> | string | null
    birthstate?: StringNullableFilter<"VerificationData"> | string | null
    central_iD?: StringNullableFilter<"VerificationData"> | string | null
    educationallevel?: StringNullableFilter<"VerificationData"> | string | null
    employmentstatus?: StringNullableFilter<"VerificationData"> | string | null
    firstname?: StringNullableFilter<"VerificationData"> | string | null
    heigth?: StringNullableFilter<"VerificationData"> | string | null
    lga_origin?: StringNullableFilter<"VerificationData"> | string | null
    maritalstatus?: StringNullableFilter<"VerificationData"> | string | null
    middlename?: StringNullableFilter<"VerificationData"> | string | null
    nok_address1?: StringNullableFilter<"VerificationData"> | string | null
    nok_address2?: StringNullableFilter<"VerificationData"> | string | null
    nok_firstname?: StringNullableFilter<"VerificationData"> | string | null
    nok_middlename?: StringNullableFilter<"VerificationData"> | string | null
    nok_postalcode?: StringNullableFilter<"VerificationData"> | string | null
    nspokenlang?: StringNullableFilter<"VerificationData"> | string | null
    ospokenlang?: StringNullableFilter<"VerificationData"> | string | null
    pfirstname?: StringNullableFilter<"VerificationData"> | string | null
    photo?: StringNullableFilter<"VerificationData"> | string | null
    pmiddlename?: StringNullableFilter<"VerificationData"> | string | null
    psurname?: StringNullableFilter<"VerificationData"> | string | null
    residence_AdressLine1?: StringNullableFilter<"VerificationData"> | string | null
    residence_Town?: StringNullableFilter<"VerificationData"> | string | null
    residencestatus?: StringNullableFilter<"VerificationData"> | string | null
    self_origin_lga?: StringNullableFilter<"VerificationData"> | string | null
    self_origin_place?: StringNullableFilter<"VerificationData"> | string | null
    self_origin_state?: StringNullableFilter<"VerificationData"> | string | null
    signature?: StringNullableFilter<"VerificationData"> | string | null
    spoken_language?: StringNullableFilter<"VerificationData"> | string | null
    telephoneno?: StringNullableFilter<"VerificationData"> | string | null
    userid?: StringNullableFilter<"VerificationData"> | string | null
    registration?: XOR<RegistrationsScalarRelationFilter, registrationsWhereInput>
  }, "id" | "nin" | "registration_id">

  export type VerificationDataOrderByWithAggregationInput = {
    id?: SortOrder
    nin?: SortOrderInput | SortOrder
    vnin?: SortOrderInput | SortOrder
    title?: SortOrderInput | SortOrder
    surname?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    gender?: SortOrderInput | SortOrder
    state_of_origin?: SortOrderInput | SortOrder
    religion?: SortOrderInput | SortOrder
    profession?: SortOrderInput | SortOrder
    residence_address?: SortOrderInput | SortOrder
    residence_lga?: SortOrderInput | SortOrder
    residence_state?: SortOrderInput | SortOrder
    nok_surname?: SortOrderInput | SortOrder
    nok_lga?: SortOrderInput | SortOrder
    nok_state?: SortOrderInput | SortOrder
    nok_town?: SortOrderInput | SortOrder
    maiden_name?: SortOrderInput | SortOrder
    tracking_id?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    birthcountry?: SortOrderInput | SortOrder
    birthdate?: SortOrderInput | SortOrder
    birthlga?: SortOrderInput | SortOrder
    birthstate?: SortOrderInput | SortOrder
    central_iD?: SortOrderInput | SortOrder
    educationallevel?: SortOrderInput | SortOrder
    employmentstatus?: SortOrderInput | SortOrder
    firstname?: SortOrderInput | SortOrder
    heigth?: SortOrderInput | SortOrder
    lga_origin?: SortOrderInput | SortOrder
    maritalstatus?: SortOrderInput | SortOrder
    middlename?: SortOrderInput | SortOrder
    nok_address1?: SortOrderInput | SortOrder
    nok_address2?: SortOrderInput | SortOrder
    nok_firstname?: SortOrderInput | SortOrder
    nok_middlename?: SortOrderInput | SortOrder
    nok_postalcode?: SortOrderInput | SortOrder
    nspokenlang?: SortOrderInput | SortOrder
    ospokenlang?: SortOrderInput | SortOrder
    pfirstname?: SortOrderInput | SortOrder
    photo?: SortOrderInput | SortOrder
    pmiddlename?: SortOrderInput | SortOrder
    psurname?: SortOrderInput | SortOrder
    residence_AdressLine1?: SortOrderInput | SortOrder
    residence_Town?: SortOrderInput | SortOrder
    residencestatus?: SortOrderInput | SortOrder
    self_origin_lga?: SortOrderInput | SortOrder
    self_origin_place?: SortOrderInput | SortOrder
    self_origin_state?: SortOrderInput | SortOrder
    signature?: SortOrderInput | SortOrder
    spoken_language?: SortOrderInput | SortOrder
    telephoneno?: SortOrderInput | SortOrder
    userid?: SortOrderInput | SortOrder
    registration_id?: SortOrder
    _count?: VerificationDataCountOrderByAggregateInput
    _avg?: VerificationDataAvgOrderByAggregateInput
    _max?: VerificationDataMaxOrderByAggregateInput
    _min?: VerificationDataMinOrderByAggregateInput
    _sum?: VerificationDataSumOrderByAggregateInput
  }

  export type VerificationDataScalarWhereWithAggregatesInput = {
    AND?: VerificationDataScalarWhereWithAggregatesInput | VerificationDataScalarWhereWithAggregatesInput[]
    OR?: VerificationDataScalarWhereWithAggregatesInput[]
    NOT?: VerificationDataScalarWhereWithAggregatesInput | VerificationDataScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"VerificationData"> | string
    nin?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    vnin?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    title?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    surname?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    email?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    gender?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    state_of_origin?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    religion?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    profession?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    residence_address?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    residence_lga?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    residence_state?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    nok_surname?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    nok_lga?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    nok_state?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    nok_town?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    maiden_name?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    tracking_id?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"VerificationData"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"VerificationData"> | Date | string
    birthcountry?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    birthdate?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    birthlga?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    birthstate?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    central_iD?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    educationallevel?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    employmentstatus?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    firstname?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    heigth?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    lga_origin?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    maritalstatus?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    middlename?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    nok_address1?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    nok_address2?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    nok_firstname?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    nok_middlename?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    nok_postalcode?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    nspokenlang?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    ospokenlang?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    pfirstname?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    photo?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    pmiddlename?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    psurname?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    residence_AdressLine1?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    residence_Town?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    residencestatus?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    self_origin_lga?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    self_origin_place?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    self_origin_state?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    signature?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    spoken_language?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    telephoneno?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    userid?: StringNullableWithAggregatesFilter<"VerificationData"> | string | null
    registration_id?: IntWithAggregatesFilter<"VerificationData"> | number
  }

  export type AccountWhereInput = {
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    id?: StringFilter<"Account"> | string
    accountName?: StringFilter<"Account"> | string
    accountNumber?: StringFilter<"Account"> | string
    bankName?: StringFilter<"Account"> | string
    accountType?: StringFilter<"Account"> | string
    currency?: StringFilter<"Account"> | string
    balance?: FloatFilter<"Account"> | number
    openingDate?: DateTimeFilter<"Account"> | Date | string
    status?: StringFilter<"Account"> | string
    branchCode?: StringNullableFilter<"Account"> | string | null
    swiftCode?: StringNullableFilter<"Account"> | string | null
    description?: StringNullableFilter<"Account"> | string | null
    createdAt?: DateTimeFilter<"Account"> | Date | string
    updatedAt?: DateTimeFilter<"Account"> | Date | string
    previousBalance?: FloatNullableFilter<"Account"> | number | null
  }

  export type AccountOrderByWithRelationInput = {
    id?: SortOrder
    accountName?: SortOrder
    accountNumber?: SortOrder
    bankName?: SortOrder
    accountType?: SortOrder
    currency?: SortOrder
    balance?: SortOrder
    openingDate?: SortOrder
    status?: SortOrder
    branchCode?: SortOrderInput | SortOrder
    swiftCode?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    previousBalance?: SortOrderInput | SortOrder
  }

  export type AccountWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    accountName?: StringFilter<"Account"> | string
    accountNumber?: StringFilter<"Account"> | string
    bankName?: StringFilter<"Account"> | string
    accountType?: StringFilter<"Account"> | string
    currency?: StringFilter<"Account"> | string
    balance?: FloatFilter<"Account"> | number
    openingDate?: DateTimeFilter<"Account"> | Date | string
    status?: StringFilter<"Account"> | string
    branchCode?: StringNullableFilter<"Account"> | string | null
    swiftCode?: StringNullableFilter<"Account"> | string | null
    description?: StringNullableFilter<"Account"> | string | null
    createdAt?: DateTimeFilter<"Account"> | Date | string
    updatedAt?: DateTimeFilter<"Account"> | Date | string
    previousBalance?: FloatNullableFilter<"Account"> | number | null
  }, "id">

  export type AccountOrderByWithAggregationInput = {
    id?: SortOrder
    accountName?: SortOrder
    accountNumber?: SortOrder
    bankName?: SortOrder
    accountType?: SortOrder
    currency?: SortOrder
    balance?: SortOrder
    openingDate?: SortOrder
    status?: SortOrder
    branchCode?: SortOrderInput | SortOrder
    swiftCode?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    previousBalance?: SortOrderInput | SortOrder
    _count?: AccountCountOrderByAggregateInput
    _avg?: AccountAvgOrderByAggregateInput
    _max?: AccountMaxOrderByAggregateInput
    _min?: AccountMinOrderByAggregateInput
    _sum?: AccountSumOrderByAggregateInput
  }

  export type AccountScalarWhereWithAggregatesInput = {
    AND?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    OR?: AccountScalarWhereWithAggregatesInput[]
    NOT?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Account"> | string
    accountName?: StringWithAggregatesFilter<"Account"> | string
    accountNumber?: StringWithAggregatesFilter<"Account"> | string
    bankName?: StringWithAggregatesFilter<"Account"> | string
    accountType?: StringWithAggregatesFilter<"Account"> | string
    currency?: StringWithAggregatesFilter<"Account"> | string
    balance?: FloatWithAggregatesFilter<"Account"> | number
    openingDate?: DateTimeWithAggregatesFilter<"Account"> | Date | string
    status?: StringWithAggregatesFilter<"Account"> | string
    branchCode?: StringNullableWithAggregatesFilter<"Account"> | string | null
    swiftCode?: StringNullableWithAggregatesFilter<"Account"> | string | null
    description?: StringNullableWithAggregatesFilter<"Account"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Account"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Account"> | Date | string
    previousBalance?: FloatNullableWithAggregatesFilter<"Account"> | number | null
  }

  export type employee_paymentsWhereInput = {
    AND?: employee_paymentsWhereInput | employee_paymentsWhereInput[]
    OR?: employee_paymentsWhereInput[]
    NOT?: employee_paymentsWhereInput | employee_paymentsWhereInput[]
    id?: UuidFilter<"employee_payments"> | string
    employee_id?: UuidFilter<"employee_payments"> | string
    payment_type?: StringFilter<"employee_payments"> | string
    payment_method?: StringFilter<"employee_payments"> | string
    payment_date?: DateTimeFilter<"employee_payments"> | Date | string
    basic_salary?: DecimalNullableFilter<"employee_payments"> | Decimal | DecimalJsLike | number | string | null
    house_rent_allowance?: DecimalNullableFilter<"employee_payments"> | Decimal | DecimalJsLike | number | string | null
    medical_allowance?: DecimalNullableFilter<"employee_payments"> | Decimal | DecimalJsLike | number | string | null
    travel_allowance?: DecimalNullableFilter<"employee_payments"> | Decimal | DecimalJsLike | number | string | null
    dearness_allowance?: DecimalNullableFilter<"employee_payments"> | Decimal | DecimalJsLike | number | string | null
    provident_fund?: DecimalNullableFilter<"employee_payments"> | Decimal | DecimalJsLike | number | string | null
    income_tax?: DecimalNullableFilter<"employee_payments"> | Decimal | DecimalJsLike | number | string | null
    health_insurance?: DecimalNullableFilter<"employee_payments"> | Decimal | DecimalJsLike | number | string | null
    loan_deduction?: DecimalNullableFilter<"employee_payments"> | Decimal | DecimalJsLike | number | string | null
    comments?: StringNullableFilter<"employee_payments"> | string | null
    created_at?: DateTimeNullableFilter<"employee_payments"> | Date | string | null
  }

  export type employee_paymentsOrderByWithRelationInput = {
    id?: SortOrder
    employee_id?: SortOrder
    payment_type?: SortOrder
    payment_method?: SortOrder
    payment_date?: SortOrder
    basic_salary?: SortOrderInput | SortOrder
    house_rent_allowance?: SortOrderInput | SortOrder
    medical_allowance?: SortOrderInput | SortOrder
    travel_allowance?: SortOrderInput | SortOrder
    dearness_allowance?: SortOrderInput | SortOrder
    provident_fund?: SortOrderInput | SortOrder
    income_tax?: SortOrderInput | SortOrder
    health_insurance?: SortOrderInput | SortOrder
    loan_deduction?: SortOrderInput | SortOrder
    comments?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
  }

  export type employee_paymentsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: employee_paymentsWhereInput | employee_paymentsWhereInput[]
    OR?: employee_paymentsWhereInput[]
    NOT?: employee_paymentsWhereInput | employee_paymentsWhereInput[]
    employee_id?: UuidFilter<"employee_payments"> | string
    payment_type?: StringFilter<"employee_payments"> | string
    payment_method?: StringFilter<"employee_payments"> | string
    payment_date?: DateTimeFilter<"employee_payments"> | Date | string
    basic_salary?: DecimalNullableFilter<"employee_payments"> | Decimal | DecimalJsLike | number | string | null
    house_rent_allowance?: DecimalNullableFilter<"employee_payments"> | Decimal | DecimalJsLike | number | string | null
    medical_allowance?: DecimalNullableFilter<"employee_payments"> | Decimal | DecimalJsLike | number | string | null
    travel_allowance?: DecimalNullableFilter<"employee_payments"> | Decimal | DecimalJsLike | number | string | null
    dearness_allowance?: DecimalNullableFilter<"employee_payments"> | Decimal | DecimalJsLike | number | string | null
    provident_fund?: DecimalNullableFilter<"employee_payments"> | Decimal | DecimalJsLike | number | string | null
    income_tax?: DecimalNullableFilter<"employee_payments"> | Decimal | DecimalJsLike | number | string | null
    health_insurance?: DecimalNullableFilter<"employee_payments"> | Decimal | DecimalJsLike | number | string | null
    loan_deduction?: DecimalNullableFilter<"employee_payments"> | Decimal | DecimalJsLike | number | string | null
    comments?: StringNullableFilter<"employee_payments"> | string | null
    created_at?: DateTimeNullableFilter<"employee_payments"> | Date | string | null
  }, "id">

  export type employee_paymentsOrderByWithAggregationInput = {
    id?: SortOrder
    employee_id?: SortOrder
    payment_type?: SortOrder
    payment_method?: SortOrder
    payment_date?: SortOrder
    basic_salary?: SortOrderInput | SortOrder
    house_rent_allowance?: SortOrderInput | SortOrder
    medical_allowance?: SortOrderInput | SortOrder
    travel_allowance?: SortOrderInput | SortOrder
    dearness_allowance?: SortOrderInput | SortOrder
    provident_fund?: SortOrderInput | SortOrder
    income_tax?: SortOrderInput | SortOrder
    health_insurance?: SortOrderInput | SortOrder
    loan_deduction?: SortOrderInput | SortOrder
    comments?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: employee_paymentsCountOrderByAggregateInput
    _avg?: employee_paymentsAvgOrderByAggregateInput
    _max?: employee_paymentsMaxOrderByAggregateInput
    _min?: employee_paymentsMinOrderByAggregateInput
    _sum?: employee_paymentsSumOrderByAggregateInput
  }

  export type employee_paymentsScalarWhereWithAggregatesInput = {
    AND?: employee_paymentsScalarWhereWithAggregatesInput | employee_paymentsScalarWhereWithAggregatesInput[]
    OR?: employee_paymentsScalarWhereWithAggregatesInput[]
    NOT?: employee_paymentsScalarWhereWithAggregatesInput | employee_paymentsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"employee_payments"> | string
    employee_id?: UuidWithAggregatesFilter<"employee_payments"> | string
    payment_type?: StringWithAggregatesFilter<"employee_payments"> | string
    payment_method?: StringWithAggregatesFilter<"employee_payments"> | string
    payment_date?: DateTimeWithAggregatesFilter<"employee_payments"> | Date | string
    basic_salary?: DecimalNullableWithAggregatesFilter<"employee_payments"> | Decimal | DecimalJsLike | number | string | null
    house_rent_allowance?: DecimalNullableWithAggregatesFilter<"employee_payments"> | Decimal | DecimalJsLike | number | string | null
    medical_allowance?: DecimalNullableWithAggregatesFilter<"employee_payments"> | Decimal | DecimalJsLike | number | string | null
    travel_allowance?: DecimalNullableWithAggregatesFilter<"employee_payments"> | Decimal | DecimalJsLike | number | string | null
    dearness_allowance?: DecimalNullableWithAggregatesFilter<"employee_payments"> | Decimal | DecimalJsLike | number | string | null
    provident_fund?: DecimalNullableWithAggregatesFilter<"employee_payments"> | Decimal | DecimalJsLike | number | string | null
    income_tax?: DecimalNullableWithAggregatesFilter<"employee_payments"> | Decimal | DecimalJsLike | number | string | null
    health_insurance?: DecimalNullableWithAggregatesFilter<"employee_payments"> | Decimal | DecimalJsLike | number | string | null
    loan_deduction?: DecimalNullableWithAggregatesFilter<"employee_payments"> | Decimal | DecimalJsLike | number | string | null
    comments?: StringNullableWithAggregatesFilter<"employee_payments"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"employee_payments"> | Date | string | null
  }

  export type salary_budgetWhereInput = {
    AND?: salary_budgetWhereInput | salary_budgetWhereInput[]
    OR?: salary_budgetWhereInput[]
    NOT?: salary_budgetWhereInput | salary_budgetWhereInput[]
    id?: IntFilter<"salary_budget"> | number
    staff_id?: StringNullableFilter<"salary_budget"> | string | null
    legacy_id?: StringNullableFilter<"salary_budget"> | string | null
    full_name?: StringNullableFilter<"salary_budget"> | string | null
    job_title?: StringNullableFilter<"salary_budget"> | string | null
    command?: StringNullableFilter<"salary_budget"> | string | null
    zone?: StringNullableFilter<"salary_budget"> | string | null
    location?: StringNullableFilter<"salary_budget"> | string | null
    unit?: StringNullableFilter<"salary_budget"> | string | null
    reference_id?: StringNullableFilter<"salary_budget"> | string | null
    grade?: StringNullableFilter<"salary_budget"> | string | null
    grade_step?: StringNullableFilter<"salary_budget"> | string | null
    bank_name?: StringNullableFilter<"salary_budget"> | string | null
    account_number?: StringNullableFilter<"salary_budget"> | string | null
    pension_administrator?: StringNullableFilter<"salary_budget"> | string | null
    pension_pin?: StringNullableFilter<"salary_budget"> | string | null
    tax?: StringNullableFilter<"salary_budget"> | string | null
    created_at?: DateTimeNullableFilter<"salary_budget"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"salary_budget"> | Date | string | null
    tax_id?: StringNullableFilter<"salary_budget"> | string | null
    basic_non_salary?: DecimalNullableFilter<"salary_budget"> | Decimal | DecimalJsLike | number | string | null
    basic_salary?: DecimalNullableFilter<"salary_budget"> | Decimal | DecimalJsLike | number | string | null
    conhess_shift_allowance?: DecimalNullableFilter<"salary_budget"> | Decimal | DecimalJsLike | number | string | null
    conmess_call_duty?: DecimalNullableFilter<"salary_budget"> | Decimal | DecimalJsLike | number | string | null
    conmess_minimum_wage?: DecimalNullableFilter<"salary_budget"> | Decimal | DecimalJsLike | number | string | null
    conmess_non_clinical?: DecimalNullableFilter<"salary_budget"> | Decimal | DecimalJsLike | number | string | null
    conposs_minimum_wage?: DecimalNullableFilter<"salary_budget"> | Decimal | DecimalJsLike | number | string | null
    conpss_minimum_wage?: DecimalNullableFilter<"salary_budget"> | Decimal | DecimalJsLike | number | string | null
    conpss_peculiar?: DecimalNullableFilter<"salary_budget"> | Decimal | DecimalJsLike | number | string | null
  }

  export type salary_budgetOrderByWithRelationInput = {
    id?: SortOrder
    staff_id?: SortOrderInput | SortOrder
    legacy_id?: SortOrderInput | SortOrder
    full_name?: SortOrderInput | SortOrder
    job_title?: SortOrderInput | SortOrder
    command?: SortOrderInput | SortOrder
    zone?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    unit?: SortOrderInput | SortOrder
    reference_id?: SortOrderInput | SortOrder
    grade?: SortOrderInput | SortOrder
    grade_step?: SortOrderInput | SortOrder
    bank_name?: SortOrderInput | SortOrder
    account_number?: SortOrderInput | SortOrder
    pension_administrator?: SortOrderInput | SortOrder
    pension_pin?: SortOrderInput | SortOrder
    tax?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    tax_id?: SortOrderInput | SortOrder
    basic_non_salary?: SortOrderInput | SortOrder
    basic_salary?: SortOrderInput | SortOrder
    conhess_shift_allowance?: SortOrderInput | SortOrder
    conmess_call_duty?: SortOrderInput | SortOrder
    conmess_minimum_wage?: SortOrderInput | SortOrder
    conmess_non_clinical?: SortOrderInput | SortOrder
    conposs_minimum_wage?: SortOrderInput | SortOrder
    conpss_minimum_wage?: SortOrderInput | SortOrder
    conpss_peculiar?: SortOrderInput | SortOrder
  }

  export type salary_budgetWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: salary_budgetWhereInput | salary_budgetWhereInput[]
    OR?: salary_budgetWhereInput[]
    NOT?: salary_budgetWhereInput | salary_budgetWhereInput[]
    staff_id?: StringNullableFilter<"salary_budget"> | string | null
    legacy_id?: StringNullableFilter<"salary_budget"> | string | null
    full_name?: StringNullableFilter<"salary_budget"> | string | null
    job_title?: StringNullableFilter<"salary_budget"> | string | null
    command?: StringNullableFilter<"salary_budget"> | string | null
    zone?: StringNullableFilter<"salary_budget"> | string | null
    location?: StringNullableFilter<"salary_budget"> | string | null
    unit?: StringNullableFilter<"salary_budget"> | string | null
    reference_id?: StringNullableFilter<"salary_budget"> | string | null
    grade?: StringNullableFilter<"salary_budget"> | string | null
    grade_step?: StringNullableFilter<"salary_budget"> | string | null
    bank_name?: StringNullableFilter<"salary_budget"> | string | null
    account_number?: StringNullableFilter<"salary_budget"> | string | null
    pension_administrator?: StringNullableFilter<"salary_budget"> | string | null
    pension_pin?: StringNullableFilter<"salary_budget"> | string | null
    tax?: StringNullableFilter<"salary_budget"> | string | null
    created_at?: DateTimeNullableFilter<"salary_budget"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"salary_budget"> | Date | string | null
    tax_id?: StringNullableFilter<"salary_budget"> | string | null
    basic_non_salary?: DecimalNullableFilter<"salary_budget"> | Decimal | DecimalJsLike | number | string | null
    basic_salary?: DecimalNullableFilter<"salary_budget"> | Decimal | DecimalJsLike | number | string | null
    conhess_shift_allowance?: DecimalNullableFilter<"salary_budget"> | Decimal | DecimalJsLike | number | string | null
    conmess_call_duty?: DecimalNullableFilter<"salary_budget"> | Decimal | DecimalJsLike | number | string | null
    conmess_minimum_wage?: DecimalNullableFilter<"salary_budget"> | Decimal | DecimalJsLike | number | string | null
    conmess_non_clinical?: DecimalNullableFilter<"salary_budget"> | Decimal | DecimalJsLike | number | string | null
    conposs_minimum_wage?: DecimalNullableFilter<"salary_budget"> | Decimal | DecimalJsLike | number | string | null
    conpss_minimum_wage?: DecimalNullableFilter<"salary_budget"> | Decimal | DecimalJsLike | number | string | null
    conpss_peculiar?: DecimalNullableFilter<"salary_budget"> | Decimal | DecimalJsLike | number | string | null
  }, "id">

  export type salary_budgetOrderByWithAggregationInput = {
    id?: SortOrder
    staff_id?: SortOrderInput | SortOrder
    legacy_id?: SortOrderInput | SortOrder
    full_name?: SortOrderInput | SortOrder
    job_title?: SortOrderInput | SortOrder
    command?: SortOrderInput | SortOrder
    zone?: SortOrderInput | SortOrder
    location?: SortOrderInput | SortOrder
    unit?: SortOrderInput | SortOrder
    reference_id?: SortOrderInput | SortOrder
    grade?: SortOrderInput | SortOrder
    grade_step?: SortOrderInput | SortOrder
    bank_name?: SortOrderInput | SortOrder
    account_number?: SortOrderInput | SortOrder
    pension_administrator?: SortOrderInput | SortOrder
    pension_pin?: SortOrderInput | SortOrder
    tax?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    tax_id?: SortOrderInput | SortOrder
    basic_non_salary?: SortOrderInput | SortOrder
    basic_salary?: SortOrderInput | SortOrder
    conhess_shift_allowance?: SortOrderInput | SortOrder
    conmess_call_duty?: SortOrderInput | SortOrder
    conmess_minimum_wage?: SortOrderInput | SortOrder
    conmess_non_clinical?: SortOrderInput | SortOrder
    conposs_minimum_wage?: SortOrderInput | SortOrder
    conpss_minimum_wage?: SortOrderInput | SortOrder
    conpss_peculiar?: SortOrderInput | SortOrder
    _count?: salary_budgetCountOrderByAggregateInput
    _avg?: salary_budgetAvgOrderByAggregateInput
    _max?: salary_budgetMaxOrderByAggregateInput
    _min?: salary_budgetMinOrderByAggregateInput
    _sum?: salary_budgetSumOrderByAggregateInput
  }

  export type salary_budgetScalarWhereWithAggregatesInput = {
    AND?: salary_budgetScalarWhereWithAggregatesInput | salary_budgetScalarWhereWithAggregatesInput[]
    OR?: salary_budgetScalarWhereWithAggregatesInput[]
    NOT?: salary_budgetScalarWhereWithAggregatesInput | salary_budgetScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"salary_budget"> | number
    staff_id?: StringNullableWithAggregatesFilter<"salary_budget"> | string | null
    legacy_id?: StringNullableWithAggregatesFilter<"salary_budget"> | string | null
    full_name?: StringNullableWithAggregatesFilter<"salary_budget"> | string | null
    job_title?: StringNullableWithAggregatesFilter<"salary_budget"> | string | null
    command?: StringNullableWithAggregatesFilter<"salary_budget"> | string | null
    zone?: StringNullableWithAggregatesFilter<"salary_budget"> | string | null
    location?: StringNullableWithAggregatesFilter<"salary_budget"> | string | null
    unit?: StringNullableWithAggregatesFilter<"salary_budget"> | string | null
    reference_id?: StringNullableWithAggregatesFilter<"salary_budget"> | string | null
    grade?: StringNullableWithAggregatesFilter<"salary_budget"> | string | null
    grade_step?: StringNullableWithAggregatesFilter<"salary_budget"> | string | null
    bank_name?: StringNullableWithAggregatesFilter<"salary_budget"> | string | null
    account_number?: StringNullableWithAggregatesFilter<"salary_budget"> | string | null
    pension_administrator?: StringNullableWithAggregatesFilter<"salary_budget"> | string | null
    pension_pin?: StringNullableWithAggregatesFilter<"salary_budget"> | string | null
    tax?: StringNullableWithAggregatesFilter<"salary_budget"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"salary_budget"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"salary_budget"> | Date | string | null
    tax_id?: StringNullableWithAggregatesFilter<"salary_budget"> | string | null
    basic_non_salary?: DecimalNullableWithAggregatesFilter<"salary_budget"> | Decimal | DecimalJsLike | number | string | null
    basic_salary?: DecimalNullableWithAggregatesFilter<"salary_budget"> | Decimal | DecimalJsLike | number | string | null
    conhess_shift_allowance?: DecimalNullableWithAggregatesFilter<"salary_budget"> | Decimal | DecimalJsLike | number | string | null
    conmess_call_duty?: DecimalNullableWithAggregatesFilter<"salary_budget"> | Decimal | DecimalJsLike | number | string | null
    conmess_minimum_wage?: DecimalNullableWithAggregatesFilter<"salary_budget"> | Decimal | DecimalJsLike | number | string | null
    conmess_non_clinical?: DecimalNullableWithAggregatesFilter<"salary_budget"> | Decimal | DecimalJsLike | number | string | null
    conposs_minimum_wage?: DecimalNullableWithAggregatesFilter<"salary_budget"> | Decimal | DecimalJsLike | number | string | null
    conpss_minimum_wage?: DecimalNullableWithAggregatesFilter<"salary_budget"> | Decimal | DecimalJsLike | number | string | null
    conpss_peculiar?: DecimalNullableWithAggregatesFilter<"salary_budget"> | Decimal | DecimalJsLike | number | string | null
  }

  export type admin_permissionsCreateInput = {
    role: string
    resource: string
    action: string
    is_allowed?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type admin_permissionsUncheckedCreateInput = {
    id?: number
    role: string
    resource: string
    action: string
    is_allowed?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type admin_permissionsUpdateInput = {
    role?: StringFieldUpdateOperationsInput | string
    resource?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    is_allowed?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type admin_permissionsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    resource?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    is_allowed?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type admin_permissionsCreateManyInput = {
    id?: number
    role: string
    resource: string
    action: string
    is_allowed?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type admin_permissionsUpdateManyMutationInput = {
    role?: StringFieldUpdateOperationsInput | string
    resource?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    is_allowed?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type admin_permissionsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    role?: StringFieldUpdateOperationsInput | string
    resource?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    is_allowed?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type admin_sessionsCreateInput = {
    session_token: string
    expires_at: Date | string
    created_at?: Date | string
    ip_address?: string | null
    user_agent?: string | null
    admin_users: admin_usersCreateNestedOneWithoutAdmin_sessionsInput
  }

  export type admin_sessionsUncheckedCreateInput = {
    id?: number
    admin_id: number
    session_token: string
    expires_at: Date | string
    created_at?: Date | string
    ip_address?: string | null
    user_agent?: string | null
  }

  export type admin_sessionsUpdateInput = {
    session_token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    admin_users?: admin_usersUpdateOneRequiredWithoutAdmin_sessionsNestedInput
  }

  export type admin_sessionsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    admin_id?: IntFieldUpdateOperationsInput | number
    session_token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type admin_sessionsCreateManyInput = {
    id?: number
    admin_id: number
    session_token: string
    expires_at: Date | string
    created_at?: Date | string
    ip_address?: string | null
    user_agent?: string | null
  }

  export type admin_sessionsUpdateManyMutationInput = {
    session_token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type admin_sessionsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    admin_id?: IntFieldUpdateOperationsInput | number
    session_token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type admin_usersCreateInput = {
    username: string
    email: string
    password_hash: string
    full_name: string
    role?: string
    is_active?: boolean
    last_login?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    admin_sessions?: admin_sessionsCreateNestedManyWithoutAdmin_usersInput
    dashboard_notifications?: dashboard_notificationsCreateNestedManyWithoutAdmin_usersInput
    dashboard_widgets?: dashboard_widgetsCreateNestedManyWithoutAdmin_usersInput
    password_reset_tokens?: password_reset_tokensCreateNestedOneWithoutAdmin_usersInput
  }

  export type admin_usersUncheckedCreateInput = {
    id?: number
    username: string
    email: string
    password_hash: string
    full_name: string
    role?: string
    is_active?: boolean
    last_login?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    admin_sessions?: admin_sessionsUncheckedCreateNestedManyWithoutAdmin_usersInput
    dashboard_notifications?: dashboard_notificationsUncheckedCreateNestedManyWithoutAdmin_usersInput
    dashboard_widgets?: dashboard_widgetsUncheckedCreateNestedManyWithoutAdmin_usersInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedOneWithoutAdmin_usersInput
  }

  export type admin_usersUpdateInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_sessions?: admin_sessionsUpdateManyWithoutAdmin_usersNestedInput
    dashboard_notifications?: dashboard_notificationsUpdateManyWithoutAdmin_usersNestedInput
    dashboard_widgets?: dashboard_widgetsUpdateManyWithoutAdmin_usersNestedInput
    password_reset_tokens?: password_reset_tokensUpdateOneWithoutAdmin_usersNestedInput
  }

  export type admin_usersUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_sessions?: admin_sessionsUncheckedUpdateManyWithoutAdmin_usersNestedInput
    dashboard_notifications?: dashboard_notificationsUncheckedUpdateManyWithoutAdmin_usersNestedInput
    dashboard_widgets?: dashboard_widgetsUncheckedUpdateManyWithoutAdmin_usersNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateOneWithoutAdmin_usersNestedInput
  }

  export type admin_usersCreateManyInput = {
    id?: number
    username: string
    email: string
    password_hash: string
    full_name: string
    role?: string
    is_active?: boolean
    last_login?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type admin_usersUpdateManyMutationInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type admin_usersUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type dashboard_notificationsCreateInput = {
    title: string
    message: string
    type: string
    is_read?: boolean
    created_at?: Date | string
    expires_at?: Date | string | null
    action_url?: string | null
    admin_users?: admin_usersCreateNestedOneWithoutDashboard_notificationsInput
  }

  export type dashboard_notificationsUncheckedCreateInput = {
    id?: number
    title: string
    message: string
    type: string
    is_read?: boolean
    recipient_id?: number | null
    created_at?: Date | string
    expires_at?: Date | string | null
    action_url?: string | null
  }

  export type dashboard_notificationsUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    action_url?: NullableStringFieldUpdateOperationsInput | string | null
    admin_users?: admin_usersUpdateOneWithoutDashboard_notificationsNestedInput
  }

  export type dashboard_notificationsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    recipient_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    action_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type dashboard_notificationsCreateManyInput = {
    id?: number
    title: string
    message: string
    type: string
    is_read?: boolean
    recipient_id?: number | null
    created_at?: Date | string
    expires_at?: Date | string | null
    action_url?: string | null
  }

  export type dashboard_notificationsUpdateManyMutationInput = {
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    action_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type dashboard_notificationsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    recipient_id?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    action_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type dashboard_widgetsCreateInput = {
    widget_type: string
    widget_position: number
    widget_size?: string
    widget_config?: JsonNullValueInput | InputJsonValue
    is_visible?: boolean
    created_at?: Date | string
    updated_at?: Date | string
    admin_users: admin_usersCreateNestedOneWithoutDashboard_widgetsInput
  }

  export type dashboard_widgetsUncheckedCreateInput = {
    id?: number
    admin_id: number
    widget_type: string
    widget_position: number
    widget_size?: string
    widget_config?: JsonNullValueInput | InputJsonValue
    is_visible?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type dashboard_widgetsUpdateInput = {
    widget_type?: StringFieldUpdateOperationsInput | string
    widget_position?: IntFieldUpdateOperationsInput | number
    widget_size?: StringFieldUpdateOperationsInput | string
    widget_config?: JsonNullValueInput | InputJsonValue
    is_visible?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_users?: admin_usersUpdateOneRequiredWithoutDashboard_widgetsNestedInput
  }

  export type dashboard_widgetsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    admin_id?: IntFieldUpdateOperationsInput | number
    widget_type?: StringFieldUpdateOperationsInput | string
    widget_position?: IntFieldUpdateOperationsInput | number
    widget_size?: StringFieldUpdateOperationsInput | string
    widget_config?: JsonNullValueInput | InputJsonValue
    is_visible?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type dashboard_widgetsCreateManyInput = {
    id?: number
    admin_id: number
    widget_type: string
    widget_position: number
    widget_size?: string
    widget_config?: JsonNullValueInput | InputJsonValue
    is_visible?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type dashboard_widgetsUpdateManyMutationInput = {
    widget_type?: StringFieldUpdateOperationsInput | string
    widget_position?: IntFieldUpdateOperationsInput | number
    widget_size?: StringFieldUpdateOperationsInput | string
    widget_config?: JsonNullValueInput | InputJsonValue
    is_visible?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type dashboard_widgetsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    admin_id?: IntFieldUpdateOperationsInput | number
    widget_type?: StringFieldUpdateOperationsInput | string
    widget_position?: IntFieldUpdateOperationsInput | number
    widget_size?: StringFieldUpdateOperationsInput | string
    widget_config?: JsonNullValueInput | InputJsonValue
    is_visible?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type document_uploadsCreateInput = {
    appointment_letter_path: string
    educational_certificates_path: string
    promotion_letter_path?: string | null
    other_documents_path?: string | null
    profile_image_path: string
    signature_path: string
    upload_date?: Date | string
    status?: string | null
    registrations: registrationsCreateNestedOneWithoutDocument_uploadsInput
  }

  export type document_uploadsUncheckedCreateInput = {
    id?: number
    registration_id: string
    appointment_letter_path: string
    educational_certificates_path: string
    promotion_letter_path?: string | null
    other_documents_path?: string | null
    profile_image_path: string
    signature_path: string
    upload_date?: Date | string
    status?: string | null
  }

  export type document_uploadsUpdateInput = {
    appointment_letter_path?: StringFieldUpdateOperationsInput | string
    educational_certificates_path?: StringFieldUpdateOperationsInput | string
    promotion_letter_path?: NullableStringFieldUpdateOperationsInput | string | null
    other_documents_path?: NullableStringFieldUpdateOperationsInput | string | null
    profile_image_path?: StringFieldUpdateOperationsInput | string
    signature_path?: StringFieldUpdateOperationsInput | string
    upload_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
    registrations?: registrationsUpdateOneRequiredWithoutDocument_uploadsNestedInput
  }

  export type document_uploadsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    registration_id?: StringFieldUpdateOperationsInput | string
    appointment_letter_path?: StringFieldUpdateOperationsInput | string
    educational_certificates_path?: StringFieldUpdateOperationsInput | string
    promotion_letter_path?: NullableStringFieldUpdateOperationsInput | string | null
    other_documents_path?: NullableStringFieldUpdateOperationsInput | string | null
    profile_image_path?: StringFieldUpdateOperationsInput | string
    signature_path?: StringFieldUpdateOperationsInput | string
    upload_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type document_uploadsCreateManyInput = {
    id?: number
    registration_id: string
    appointment_letter_path: string
    educational_certificates_path: string
    promotion_letter_path?: string | null
    other_documents_path?: string | null
    profile_image_path: string
    signature_path: string
    upload_date?: Date | string
    status?: string | null
  }

  export type document_uploadsUpdateManyMutationInput = {
    appointment_letter_path?: StringFieldUpdateOperationsInput | string
    educational_certificates_path?: StringFieldUpdateOperationsInput | string
    promotion_letter_path?: NullableStringFieldUpdateOperationsInput | string | null
    other_documents_path?: NullableStringFieldUpdateOperationsInput | string | null
    profile_image_path?: StringFieldUpdateOperationsInput | string
    signature_path?: StringFieldUpdateOperationsInput | string
    upload_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type document_uploadsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    registration_id?: StringFieldUpdateOperationsInput | string
    appointment_letter_path?: StringFieldUpdateOperationsInput | string
    educational_certificates_path?: StringFieldUpdateOperationsInput | string
    promotion_letter_path?: NullableStringFieldUpdateOperationsInput | string | null
    other_documents_path?: NullableStringFieldUpdateOperationsInput | string | null
    profile_image_path?: StringFieldUpdateOperationsInput | string
    signature_path?: StringFieldUpdateOperationsInput | string
    upload_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type employeesCreateInput = {
    id: string
    name: string
    email: string
    department: string
    position: string
    status?: string
    join_date?: Date | string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type employeesUncheckedCreateInput = {
    id: string
    name: string
    email: string
    department: string
    position: string
    status?: string
    join_date?: Date | string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type employeesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type employeesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type employeesCreateManyInput = {
    id: string
    name: string
    email: string
    department: string
    position: string
    status?: string
    join_date?: Date | string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type employeesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type employeesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    position?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    join_date?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type employment_infoCreateInput = {
    employment_id_no: string
    service_no: string
    file_no: string
    rank_position: string
    department: string
    organization: string
    employment_type: string
    probation_period: string
    work_location: string
    date_of_first_appointment: Date | string
    gl: string
    step: string
    salary_structure: string
    cadre: string
    name_of_bank: string
    account_number: string
    pfa_name: string
    rsapin: string
    educational_background?: string | null
    certifications?: string | null
    registrations: registrationsCreateNestedOneWithoutEmployment_infoInput
  }

  export type employment_infoUncheckedCreateInput = {
    id?: number
    registration_id: string
    employment_id_no: string
    service_no: string
    file_no: string
    rank_position: string
    department: string
    organization: string
    employment_type: string
    probation_period: string
    work_location: string
    date_of_first_appointment: Date | string
    gl: string
    step: string
    salary_structure: string
    cadre: string
    name_of_bank: string
    account_number: string
    pfa_name: string
    rsapin: string
    educational_background?: string | null
    certifications?: string | null
  }

  export type employment_infoUpdateInput = {
    employment_id_no?: StringFieldUpdateOperationsInput | string
    service_no?: StringFieldUpdateOperationsInput | string
    file_no?: StringFieldUpdateOperationsInput | string
    rank_position?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    organization?: StringFieldUpdateOperationsInput | string
    employment_type?: StringFieldUpdateOperationsInput | string
    probation_period?: StringFieldUpdateOperationsInput | string
    work_location?: StringFieldUpdateOperationsInput | string
    date_of_first_appointment?: DateTimeFieldUpdateOperationsInput | Date | string
    gl?: StringFieldUpdateOperationsInput | string
    step?: StringFieldUpdateOperationsInput | string
    salary_structure?: StringFieldUpdateOperationsInput | string
    cadre?: StringFieldUpdateOperationsInput | string
    name_of_bank?: StringFieldUpdateOperationsInput | string
    account_number?: StringFieldUpdateOperationsInput | string
    pfa_name?: StringFieldUpdateOperationsInput | string
    rsapin?: StringFieldUpdateOperationsInput | string
    educational_background?: NullableStringFieldUpdateOperationsInput | string | null
    certifications?: NullableStringFieldUpdateOperationsInput | string | null
    registrations?: registrationsUpdateOneRequiredWithoutEmployment_infoNestedInput
  }

  export type employment_infoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    registration_id?: StringFieldUpdateOperationsInput | string
    employment_id_no?: StringFieldUpdateOperationsInput | string
    service_no?: StringFieldUpdateOperationsInput | string
    file_no?: StringFieldUpdateOperationsInput | string
    rank_position?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    organization?: StringFieldUpdateOperationsInput | string
    employment_type?: StringFieldUpdateOperationsInput | string
    probation_period?: StringFieldUpdateOperationsInput | string
    work_location?: StringFieldUpdateOperationsInput | string
    date_of_first_appointment?: DateTimeFieldUpdateOperationsInput | Date | string
    gl?: StringFieldUpdateOperationsInput | string
    step?: StringFieldUpdateOperationsInput | string
    salary_structure?: StringFieldUpdateOperationsInput | string
    cadre?: StringFieldUpdateOperationsInput | string
    name_of_bank?: StringFieldUpdateOperationsInput | string
    account_number?: StringFieldUpdateOperationsInput | string
    pfa_name?: StringFieldUpdateOperationsInput | string
    rsapin?: StringFieldUpdateOperationsInput | string
    educational_background?: NullableStringFieldUpdateOperationsInput | string | null
    certifications?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type employment_infoCreateManyInput = {
    id?: number
    registration_id: string
    employment_id_no: string
    service_no: string
    file_no: string
    rank_position: string
    department: string
    organization: string
    employment_type: string
    probation_period: string
    work_location: string
    date_of_first_appointment: Date | string
    gl: string
    step: string
    salary_structure: string
    cadre: string
    name_of_bank: string
    account_number: string
    pfa_name: string
    rsapin: string
    educational_background?: string | null
    certifications?: string | null
  }

  export type employment_infoUpdateManyMutationInput = {
    employment_id_no?: StringFieldUpdateOperationsInput | string
    service_no?: StringFieldUpdateOperationsInput | string
    file_no?: StringFieldUpdateOperationsInput | string
    rank_position?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    organization?: StringFieldUpdateOperationsInput | string
    employment_type?: StringFieldUpdateOperationsInput | string
    probation_period?: StringFieldUpdateOperationsInput | string
    work_location?: StringFieldUpdateOperationsInput | string
    date_of_first_appointment?: DateTimeFieldUpdateOperationsInput | Date | string
    gl?: StringFieldUpdateOperationsInput | string
    step?: StringFieldUpdateOperationsInput | string
    salary_structure?: StringFieldUpdateOperationsInput | string
    cadre?: StringFieldUpdateOperationsInput | string
    name_of_bank?: StringFieldUpdateOperationsInput | string
    account_number?: StringFieldUpdateOperationsInput | string
    pfa_name?: StringFieldUpdateOperationsInput | string
    rsapin?: StringFieldUpdateOperationsInput | string
    educational_background?: NullableStringFieldUpdateOperationsInput | string | null
    certifications?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type employment_infoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    registration_id?: StringFieldUpdateOperationsInput | string
    employment_id_no?: StringFieldUpdateOperationsInput | string
    service_no?: StringFieldUpdateOperationsInput | string
    file_no?: StringFieldUpdateOperationsInput | string
    rank_position?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    organization?: StringFieldUpdateOperationsInput | string
    employment_type?: StringFieldUpdateOperationsInput | string
    probation_period?: StringFieldUpdateOperationsInput | string
    work_location?: StringFieldUpdateOperationsInput | string
    date_of_first_appointment?: DateTimeFieldUpdateOperationsInput | Date | string
    gl?: StringFieldUpdateOperationsInput | string
    step?: StringFieldUpdateOperationsInput | string
    salary_structure?: StringFieldUpdateOperationsInput | string
    cadre?: StringFieldUpdateOperationsInput | string
    name_of_bank?: StringFieldUpdateOperationsInput | string
    account_number?: StringFieldUpdateOperationsInput | string
    pfa_name?: StringFieldUpdateOperationsInput | string
    rsapin?: StringFieldUpdateOperationsInput | string
    educational_background?: NullableStringFieldUpdateOperationsInput | string | null
    certifications?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type password_reset_tokensCreateInput = {
    token: string
    expires_at: Date | string
    created_at?: Date | string
    admin_users: admin_usersCreateNestedOneWithoutPassword_reset_tokensInput
  }

  export type password_reset_tokensUncheckedCreateInput = {
    id?: number
    user_id: number
    token: string
    expires_at: Date | string
    created_at?: Date | string
  }

  export type password_reset_tokensUpdateInput = {
    token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_users?: admin_usersUpdateOneRequiredWithoutPassword_reset_tokensNestedInput
  }

  export type password_reset_tokensUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type password_reset_tokensCreateManyInput = {
    id?: number
    user_id: number
    token: string
    expires_at: Date | string
    created_at?: Date | string
  }

  export type password_reset_tokensUpdateManyMutationInput = {
    token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type password_reset_tokensUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    user_id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type pending_employeesCreateInput = {
    registration_id?: string | null
    surname: string
    firstname: string
    email: string
    department?: string | null
    position?: string | null
    status?: string
    source?: string
    submission_date?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    missing_fields?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type pending_employeesUncheckedCreateInput = {
    id?: number
    registration_id?: string | null
    surname: string
    firstname: string
    email: string
    department?: string | null
    position?: string | null
    status?: string
    source?: string
    submission_date?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    missing_fields?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type pending_employeesUpdateInput = {
    registration_id?: NullableStringFieldUpdateOperationsInput | string | null
    surname?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    source?: StringFieldUpdateOperationsInput | string
    submission_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    missing_fields?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type pending_employeesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    registration_id?: NullableStringFieldUpdateOperationsInput | string | null
    surname?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    source?: StringFieldUpdateOperationsInput | string
    submission_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    missing_fields?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type pending_employeesCreateManyInput = {
    id?: number
    registration_id?: string | null
    surname: string
    firstname: string
    email: string
    department?: string | null
    position?: string | null
    status?: string
    source?: string
    submission_date?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    missing_fields?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type pending_employeesUpdateManyMutationInput = {
    registration_id?: NullableStringFieldUpdateOperationsInput | string | null
    surname?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    source?: StringFieldUpdateOperationsInput | string
    submission_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    missing_fields?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type pending_employeesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    registration_id?: NullableStringFieldUpdateOperationsInput | string | null
    surname?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    position?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    source?: StringFieldUpdateOperationsInput | string
    submission_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    missing_fields?: NullableJsonNullValueInput | InputJsonValue
    metadata?: NullableJsonNullValueInput | InputJsonValue
  }

  export type personal_infoCreateInput = {
    title: string
    surname: string
    first_name: string
    other_names?: string | null
    phone_number: string
    email: string
    date_of_birth: Date | string
    sex: string
    marital_status: string
    state_of_origin: string
    lga: string
    state_of_residence: string
    address_state_of_residence: string
    next_of_kin_name: string
    next_of_kin_relationship: string
    next_of_kin_phone_number: string
    next_of_kin_address: string
    registrations: registrationsCreateNestedOneWithoutPersonal_infoInput
  }

  export type personal_infoUncheckedCreateInput = {
    id?: number
    registration_id: string
    title: string
    surname: string
    first_name: string
    other_names?: string | null
    phone_number: string
    email: string
    date_of_birth: Date | string
    sex: string
    marital_status: string
    state_of_origin: string
    lga: string
    state_of_residence: string
    address_state_of_residence: string
    next_of_kin_name: string
    next_of_kin_relationship: string
    next_of_kin_phone_number: string
    next_of_kin_address: string
  }

  export type personal_infoUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    other_names?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    sex?: StringFieldUpdateOperationsInput | string
    marital_status?: StringFieldUpdateOperationsInput | string
    state_of_origin?: StringFieldUpdateOperationsInput | string
    lga?: StringFieldUpdateOperationsInput | string
    state_of_residence?: StringFieldUpdateOperationsInput | string
    address_state_of_residence?: StringFieldUpdateOperationsInput | string
    next_of_kin_name?: StringFieldUpdateOperationsInput | string
    next_of_kin_relationship?: StringFieldUpdateOperationsInput | string
    next_of_kin_phone_number?: StringFieldUpdateOperationsInput | string
    next_of_kin_address?: StringFieldUpdateOperationsInput | string
    registrations?: registrationsUpdateOneRequiredWithoutPersonal_infoNestedInput
  }

  export type personal_infoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    registration_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    other_names?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    sex?: StringFieldUpdateOperationsInput | string
    marital_status?: StringFieldUpdateOperationsInput | string
    state_of_origin?: StringFieldUpdateOperationsInput | string
    lga?: StringFieldUpdateOperationsInput | string
    state_of_residence?: StringFieldUpdateOperationsInput | string
    address_state_of_residence?: StringFieldUpdateOperationsInput | string
    next_of_kin_name?: StringFieldUpdateOperationsInput | string
    next_of_kin_relationship?: StringFieldUpdateOperationsInput | string
    next_of_kin_phone_number?: StringFieldUpdateOperationsInput | string
    next_of_kin_address?: StringFieldUpdateOperationsInput | string
  }

  export type personal_infoCreateManyInput = {
    id?: number
    registration_id: string
    title: string
    surname: string
    first_name: string
    other_names?: string | null
    phone_number: string
    email: string
    date_of_birth: Date | string
    sex: string
    marital_status: string
    state_of_origin: string
    lga: string
    state_of_residence: string
    address_state_of_residence: string
    next_of_kin_name: string
    next_of_kin_relationship: string
    next_of_kin_phone_number: string
    next_of_kin_address: string
  }

  export type personal_infoUpdateManyMutationInput = {
    title?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    other_names?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    sex?: StringFieldUpdateOperationsInput | string
    marital_status?: StringFieldUpdateOperationsInput | string
    state_of_origin?: StringFieldUpdateOperationsInput | string
    lga?: StringFieldUpdateOperationsInput | string
    state_of_residence?: StringFieldUpdateOperationsInput | string
    address_state_of_residence?: StringFieldUpdateOperationsInput | string
    next_of_kin_name?: StringFieldUpdateOperationsInput | string
    next_of_kin_relationship?: StringFieldUpdateOperationsInput | string
    next_of_kin_phone_number?: StringFieldUpdateOperationsInput | string
    next_of_kin_address?: StringFieldUpdateOperationsInput | string
  }

  export type personal_infoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    registration_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    other_names?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    sex?: StringFieldUpdateOperationsInput | string
    marital_status?: StringFieldUpdateOperationsInput | string
    state_of_origin?: StringFieldUpdateOperationsInput | string
    lga?: StringFieldUpdateOperationsInput | string
    state_of_residence?: StringFieldUpdateOperationsInput | string
    address_state_of_residence?: StringFieldUpdateOperationsInput | string
    next_of_kin_name?: StringFieldUpdateOperationsInput | string
    next_of_kin_relationship?: StringFieldUpdateOperationsInput | string
    next_of_kin_phone_number?: StringFieldUpdateOperationsInput | string
    next_of_kin_address?: StringFieldUpdateOperationsInput | string
  }

  export type registration_commentsCreateInput = {
    comment_text: string
    author?: string | null
    created_at?: Date | string
    registrations: registrationsCreateNestedOneWithoutRegistration_commentsInput
  }

  export type registration_commentsUncheckedCreateInput = {
    id?: number
    registration_id: string
    comment_text: string
    author?: string | null
    created_at?: Date | string
  }

  export type registration_commentsUpdateInput = {
    comment_text?: StringFieldUpdateOperationsInput | string
    author?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    registrations?: registrationsUpdateOneRequiredWithoutRegistration_commentsNestedInput
  }

  export type registration_commentsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    registration_id?: StringFieldUpdateOperationsInput | string
    comment_text?: StringFieldUpdateOperationsInput | string
    author?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type registration_commentsCreateManyInput = {
    id?: number
    registration_id: string
    comment_text: string
    author?: string | null
    created_at?: Date | string
  }

  export type registration_commentsUpdateManyMutationInput = {
    comment_text?: StringFieldUpdateOperationsInput | string
    author?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type registration_commentsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    registration_id?: StringFieldUpdateOperationsInput | string
    comment_text?: StringFieldUpdateOperationsInput | string
    author?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type registration_historyCreateInput = {
    action: string
    details?: string | null
    performed_by?: string | null
    performed_at?: Date | string
    registrations?: registrationsCreateNestedOneWithoutRegistration_historyInput
  }

  export type registration_historyUncheckedCreateInput = {
    id?: number
    registration_id?: string | null
    action: string
    details?: string | null
    performed_by?: string | null
    performed_at?: Date | string
  }

  export type registration_historyUpdateInput = {
    action?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    performed_by?: NullableStringFieldUpdateOperationsInput | string | null
    performed_at?: DateTimeFieldUpdateOperationsInput | Date | string
    registrations?: registrationsUpdateOneWithoutRegistration_historyNestedInput
  }

  export type registration_historyUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    registration_id?: NullableStringFieldUpdateOperationsInput | string | null
    action?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    performed_by?: NullableStringFieldUpdateOperationsInput | string | null
    performed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type registration_historyCreateManyInput = {
    id?: number
    registration_id?: string | null
    action: string
    details?: string | null
    performed_by?: string | null
    performed_at?: Date | string
  }

  export type registration_historyUpdateManyMutationInput = {
    action?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    performed_by?: NullableStringFieldUpdateOperationsInput | string | null
    performed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type registration_historyUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    registration_id?: NullableStringFieldUpdateOperationsInput | string | null
    action?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    performed_by?: NullableStringFieldUpdateOperationsInput | string | null
    performed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type registrationsCreateInput = {
    registration_Id?: string
    nin?: string | null
    status?: string
    current_step?: string
    declaration?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    submitted_at?: Date | string | null
    approved_at?: Date | string | null
    rejected_at?: Date | string | null
    VerificationData?: VerificationDataCreateNestedOneWithoutRegistrationInput
    document_uploads?: document_uploadsCreateNestedOneWithoutRegistrationsInput
    employment_info?: employment_infoCreateNestedOneWithoutRegistrationsInput
    personal_info?: personal_infoCreateNestedOneWithoutRegistrationsInput
    registration_comments?: registration_commentsCreateNestedManyWithoutRegistrationsInput
    registration_history?: registration_historyCreateNestedManyWithoutRegistrationsInput
  }

  export type registrationsUncheckedCreateInput = {
    id?: number
    registration_Id?: string
    nin?: string | null
    status?: string
    current_step?: string
    declaration?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    submitted_at?: Date | string | null
    approved_at?: Date | string | null
    rejected_at?: Date | string | null
    VerificationData?: VerificationDataUncheckedCreateNestedOneWithoutRegistrationInput
    document_uploads?: document_uploadsUncheckedCreateNestedOneWithoutRegistrationsInput
    employment_info?: employment_infoUncheckedCreateNestedOneWithoutRegistrationsInput
    personal_info?: personal_infoUncheckedCreateNestedOneWithoutRegistrationsInput
    registration_comments?: registration_commentsUncheckedCreateNestedManyWithoutRegistrationsInput
    registration_history?: registration_historyUncheckedCreateNestedManyWithoutRegistrationsInput
  }

  export type registrationsUpdateInput = {
    registration_Id?: StringFieldUpdateOperationsInput | string
    nin?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    current_step?: StringFieldUpdateOperationsInput | string
    declaration?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    submitted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rejected_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    VerificationData?: VerificationDataUpdateOneWithoutRegistrationNestedInput
    document_uploads?: document_uploadsUpdateOneWithoutRegistrationsNestedInput
    employment_info?: employment_infoUpdateOneWithoutRegistrationsNestedInput
    personal_info?: personal_infoUpdateOneWithoutRegistrationsNestedInput
    registration_comments?: registration_commentsUpdateManyWithoutRegistrationsNestedInput
    registration_history?: registration_historyUpdateManyWithoutRegistrationsNestedInput
  }

  export type registrationsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    registration_Id?: StringFieldUpdateOperationsInput | string
    nin?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    current_step?: StringFieldUpdateOperationsInput | string
    declaration?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    submitted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rejected_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    VerificationData?: VerificationDataUncheckedUpdateOneWithoutRegistrationNestedInput
    document_uploads?: document_uploadsUncheckedUpdateOneWithoutRegistrationsNestedInput
    employment_info?: employment_infoUncheckedUpdateOneWithoutRegistrationsNestedInput
    personal_info?: personal_infoUncheckedUpdateOneWithoutRegistrationsNestedInput
    registration_comments?: registration_commentsUncheckedUpdateManyWithoutRegistrationsNestedInput
    registration_history?: registration_historyUncheckedUpdateManyWithoutRegistrationsNestedInput
  }

  export type registrationsCreateManyInput = {
    id?: number
    registration_Id?: string
    nin?: string | null
    status?: string
    current_step?: string
    declaration?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    submitted_at?: Date | string | null
    approved_at?: Date | string | null
    rejected_at?: Date | string | null
  }

  export type registrationsUpdateManyMutationInput = {
    registration_Id?: StringFieldUpdateOperationsInput | string
    nin?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    current_step?: StringFieldUpdateOperationsInput | string
    declaration?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    submitted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rejected_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type registrationsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    registration_Id?: StringFieldUpdateOperationsInput | string
    nin?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    current_step?: StringFieldUpdateOperationsInput | string
    declaration?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    submitted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rejected_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type VerificationDataCreateInput = {
    id?: string
    nin?: string | null
    vnin?: string | null
    title?: string | null
    surname?: string | null
    email?: string | null
    gender?: string | null
    state_of_origin?: string | null
    religion?: string | null
    profession?: string | null
    residence_address?: string | null
    residence_lga?: string | null
    residence_state?: string | null
    nok_surname?: string | null
    nok_lga?: string | null
    nok_state?: string | null
    nok_town?: string | null
    maiden_name?: string | null
    tracking_id?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    birthcountry?: string | null
    birthdate?: string | null
    birthlga?: string | null
    birthstate?: string | null
    central_iD?: string | null
    educationallevel?: string | null
    employmentstatus?: string | null
    firstname?: string | null
    heigth?: string | null
    lga_origin?: string | null
    maritalstatus?: string | null
    middlename?: string | null
    nok_address1?: string | null
    nok_address2?: string | null
    nok_firstname?: string | null
    nok_middlename?: string | null
    nok_postalcode?: string | null
    nspokenlang?: string | null
    ospokenlang?: string | null
    pfirstname?: string | null
    photo?: string | null
    pmiddlename?: string | null
    psurname?: string | null
    residence_AdressLine1?: string | null
    residence_Town?: string | null
    residencestatus?: string | null
    self_origin_lga?: string | null
    self_origin_place?: string | null
    self_origin_state?: string | null
    signature?: string | null
    spoken_language?: string | null
    telephoneno?: string | null
    userid?: string | null
    registration: registrationsCreateNestedOneWithoutVerificationDataInput
  }

  export type VerificationDataUncheckedCreateInput = {
    id?: string
    nin?: string | null
    vnin?: string | null
    title?: string | null
    surname?: string | null
    email?: string | null
    gender?: string | null
    state_of_origin?: string | null
    religion?: string | null
    profession?: string | null
    residence_address?: string | null
    residence_lga?: string | null
    residence_state?: string | null
    nok_surname?: string | null
    nok_lga?: string | null
    nok_state?: string | null
    nok_town?: string | null
    maiden_name?: string | null
    tracking_id?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    birthcountry?: string | null
    birthdate?: string | null
    birthlga?: string | null
    birthstate?: string | null
    central_iD?: string | null
    educationallevel?: string | null
    employmentstatus?: string | null
    firstname?: string | null
    heigth?: string | null
    lga_origin?: string | null
    maritalstatus?: string | null
    middlename?: string | null
    nok_address1?: string | null
    nok_address2?: string | null
    nok_firstname?: string | null
    nok_middlename?: string | null
    nok_postalcode?: string | null
    nspokenlang?: string | null
    ospokenlang?: string | null
    pfirstname?: string | null
    photo?: string | null
    pmiddlename?: string | null
    psurname?: string | null
    residence_AdressLine1?: string | null
    residence_Town?: string | null
    residencestatus?: string | null
    self_origin_lga?: string | null
    self_origin_place?: string | null
    self_origin_state?: string | null
    signature?: string | null
    spoken_language?: string | null
    telephoneno?: string | null
    userid?: string | null
    registration_id: number
  }

  export type VerificationDataUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nin?: NullableStringFieldUpdateOperationsInput | string | null
    vnin?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    surname?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    state_of_origin?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: NullableStringFieldUpdateOperationsInput | string | null
    residence_address?: NullableStringFieldUpdateOperationsInput | string | null
    residence_lga?: NullableStringFieldUpdateOperationsInput | string | null
    residence_state?: NullableStringFieldUpdateOperationsInput | string | null
    nok_surname?: NullableStringFieldUpdateOperationsInput | string | null
    nok_lga?: NullableStringFieldUpdateOperationsInput | string | null
    nok_state?: NullableStringFieldUpdateOperationsInput | string | null
    nok_town?: NullableStringFieldUpdateOperationsInput | string | null
    maiden_name?: NullableStringFieldUpdateOperationsInput | string | null
    tracking_id?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    birthcountry?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    birthlga?: NullableStringFieldUpdateOperationsInput | string | null
    birthstate?: NullableStringFieldUpdateOperationsInput | string | null
    central_iD?: NullableStringFieldUpdateOperationsInput | string | null
    educationallevel?: NullableStringFieldUpdateOperationsInput | string | null
    employmentstatus?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    heigth?: NullableStringFieldUpdateOperationsInput | string | null
    lga_origin?: NullableStringFieldUpdateOperationsInput | string | null
    maritalstatus?: NullableStringFieldUpdateOperationsInput | string | null
    middlename?: NullableStringFieldUpdateOperationsInput | string | null
    nok_address1?: NullableStringFieldUpdateOperationsInput | string | null
    nok_address2?: NullableStringFieldUpdateOperationsInput | string | null
    nok_firstname?: NullableStringFieldUpdateOperationsInput | string | null
    nok_middlename?: NullableStringFieldUpdateOperationsInput | string | null
    nok_postalcode?: NullableStringFieldUpdateOperationsInput | string | null
    nspokenlang?: NullableStringFieldUpdateOperationsInput | string | null
    ospokenlang?: NullableStringFieldUpdateOperationsInput | string | null
    pfirstname?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    pmiddlename?: NullableStringFieldUpdateOperationsInput | string | null
    psurname?: NullableStringFieldUpdateOperationsInput | string | null
    residence_AdressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    residence_Town?: NullableStringFieldUpdateOperationsInput | string | null
    residencestatus?: NullableStringFieldUpdateOperationsInput | string | null
    self_origin_lga?: NullableStringFieldUpdateOperationsInput | string | null
    self_origin_place?: NullableStringFieldUpdateOperationsInput | string | null
    self_origin_state?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    spoken_language?: NullableStringFieldUpdateOperationsInput | string | null
    telephoneno?: NullableStringFieldUpdateOperationsInput | string | null
    userid?: NullableStringFieldUpdateOperationsInput | string | null
    registration?: registrationsUpdateOneRequiredWithoutVerificationDataNestedInput
  }

  export type VerificationDataUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    nin?: NullableStringFieldUpdateOperationsInput | string | null
    vnin?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    surname?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    state_of_origin?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: NullableStringFieldUpdateOperationsInput | string | null
    residence_address?: NullableStringFieldUpdateOperationsInput | string | null
    residence_lga?: NullableStringFieldUpdateOperationsInput | string | null
    residence_state?: NullableStringFieldUpdateOperationsInput | string | null
    nok_surname?: NullableStringFieldUpdateOperationsInput | string | null
    nok_lga?: NullableStringFieldUpdateOperationsInput | string | null
    nok_state?: NullableStringFieldUpdateOperationsInput | string | null
    nok_town?: NullableStringFieldUpdateOperationsInput | string | null
    maiden_name?: NullableStringFieldUpdateOperationsInput | string | null
    tracking_id?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    birthcountry?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    birthlga?: NullableStringFieldUpdateOperationsInput | string | null
    birthstate?: NullableStringFieldUpdateOperationsInput | string | null
    central_iD?: NullableStringFieldUpdateOperationsInput | string | null
    educationallevel?: NullableStringFieldUpdateOperationsInput | string | null
    employmentstatus?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    heigth?: NullableStringFieldUpdateOperationsInput | string | null
    lga_origin?: NullableStringFieldUpdateOperationsInput | string | null
    maritalstatus?: NullableStringFieldUpdateOperationsInput | string | null
    middlename?: NullableStringFieldUpdateOperationsInput | string | null
    nok_address1?: NullableStringFieldUpdateOperationsInput | string | null
    nok_address2?: NullableStringFieldUpdateOperationsInput | string | null
    nok_firstname?: NullableStringFieldUpdateOperationsInput | string | null
    nok_middlename?: NullableStringFieldUpdateOperationsInput | string | null
    nok_postalcode?: NullableStringFieldUpdateOperationsInput | string | null
    nspokenlang?: NullableStringFieldUpdateOperationsInput | string | null
    ospokenlang?: NullableStringFieldUpdateOperationsInput | string | null
    pfirstname?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    pmiddlename?: NullableStringFieldUpdateOperationsInput | string | null
    psurname?: NullableStringFieldUpdateOperationsInput | string | null
    residence_AdressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    residence_Town?: NullableStringFieldUpdateOperationsInput | string | null
    residencestatus?: NullableStringFieldUpdateOperationsInput | string | null
    self_origin_lga?: NullableStringFieldUpdateOperationsInput | string | null
    self_origin_place?: NullableStringFieldUpdateOperationsInput | string | null
    self_origin_state?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    spoken_language?: NullableStringFieldUpdateOperationsInput | string | null
    telephoneno?: NullableStringFieldUpdateOperationsInput | string | null
    userid?: NullableStringFieldUpdateOperationsInput | string | null
    registration_id?: IntFieldUpdateOperationsInput | number
  }

  export type VerificationDataCreateManyInput = {
    id?: string
    nin?: string | null
    vnin?: string | null
    title?: string | null
    surname?: string | null
    email?: string | null
    gender?: string | null
    state_of_origin?: string | null
    religion?: string | null
    profession?: string | null
    residence_address?: string | null
    residence_lga?: string | null
    residence_state?: string | null
    nok_surname?: string | null
    nok_lga?: string | null
    nok_state?: string | null
    nok_town?: string | null
    maiden_name?: string | null
    tracking_id?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    birthcountry?: string | null
    birthdate?: string | null
    birthlga?: string | null
    birthstate?: string | null
    central_iD?: string | null
    educationallevel?: string | null
    employmentstatus?: string | null
    firstname?: string | null
    heigth?: string | null
    lga_origin?: string | null
    maritalstatus?: string | null
    middlename?: string | null
    nok_address1?: string | null
    nok_address2?: string | null
    nok_firstname?: string | null
    nok_middlename?: string | null
    nok_postalcode?: string | null
    nspokenlang?: string | null
    ospokenlang?: string | null
    pfirstname?: string | null
    photo?: string | null
    pmiddlename?: string | null
    psurname?: string | null
    residence_AdressLine1?: string | null
    residence_Town?: string | null
    residencestatus?: string | null
    self_origin_lga?: string | null
    self_origin_place?: string | null
    self_origin_state?: string | null
    signature?: string | null
    spoken_language?: string | null
    telephoneno?: string | null
    userid?: string | null
    registration_id: number
  }

  export type VerificationDataUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nin?: NullableStringFieldUpdateOperationsInput | string | null
    vnin?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    surname?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    state_of_origin?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: NullableStringFieldUpdateOperationsInput | string | null
    residence_address?: NullableStringFieldUpdateOperationsInput | string | null
    residence_lga?: NullableStringFieldUpdateOperationsInput | string | null
    residence_state?: NullableStringFieldUpdateOperationsInput | string | null
    nok_surname?: NullableStringFieldUpdateOperationsInput | string | null
    nok_lga?: NullableStringFieldUpdateOperationsInput | string | null
    nok_state?: NullableStringFieldUpdateOperationsInput | string | null
    nok_town?: NullableStringFieldUpdateOperationsInput | string | null
    maiden_name?: NullableStringFieldUpdateOperationsInput | string | null
    tracking_id?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    birthcountry?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    birthlga?: NullableStringFieldUpdateOperationsInput | string | null
    birthstate?: NullableStringFieldUpdateOperationsInput | string | null
    central_iD?: NullableStringFieldUpdateOperationsInput | string | null
    educationallevel?: NullableStringFieldUpdateOperationsInput | string | null
    employmentstatus?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    heigth?: NullableStringFieldUpdateOperationsInput | string | null
    lga_origin?: NullableStringFieldUpdateOperationsInput | string | null
    maritalstatus?: NullableStringFieldUpdateOperationsInput | string | null
    middlename?: NullableStringFieldUpdateOperationsInput | string | null
    nok_address1?: NullableStringFieldUpdateOperationsInput | string | null
    nok_address2?: NullableStringFieldUpdateOperationsInput | string | null
    nok_firstname?: NullableStringFieldUpdateOperationsInput | string | null
    nok_middlename?: NullableStringFieldUpdateOperationsInput | string | null
    nok_postalcode?: NullableStringFieldUpdateOperationsInput | string | null
    nspokenlang?: NullableStringFieldUpdateOperationsInput | string | null
    ospokenlang?: NullableStringFieldUpdateOperationsInput | string | null
    pfirstname?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    pmiddlename?: NullableStringFieldUpdateOperationsInput | string | null
    psurname?: NullableStringFieldUpdateOperationsInput | string | null
    residence_AdressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    residence_Town?: NullableStringFieldUpdateOperationsInput | string | null
    residencestatus?: NullableStringFieldUpdateOperationsInput | string | null
    self_origin_lga?: NullableStringFieldUpdateOperationsInput | string | null
    self_origin_place?: NullableStringFieldUpdateOperationsInput | string | null
    self_origin_state?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    spoken_language?: NullableStringFieldUpdateOperationsInput | string | null
    telephoneno?: NullableStringFieldUpdateOperationsInput | string | null
    userid?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VerificationDataUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    nin?: NullableStringFieldUpdateOperationsInput | string | null
    vnin?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    surname?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    state_of_origin?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: NullableStringFieldUpdateOperationsInput | string | null
    residence_address?: NullableStringFieldUpdateOperationsInput | string | null
    residence_lga?: NullableStringFieldUpdateOperationsInput | string | null
    residence_state?: NullableStringFieldUpdateOperationsInput | string | null
    nok_surname?: NullableStringFieldUpdateOperationsInput | string | null
    nok_lga?: NullableStringFieldUpdateOperationsInput | string | null
    nok_state?: NullableStringFieldUpdateOperationsInput | string | null
    nok_town?: NullableStringFieldUpdateOperationsInput | string | null
    maiden_name?: NullableStringFieldUpdateOperationsInput | string | null
    tracking_id?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    birthcountry?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    birthlga?: NullableStringFieldUpdateOperationsInput | string | null
    birthstate?: NullableStringFieldUpdateOperationsInput | string | null
    central_iD?: NullableStringFieldUpdateOperationsInput | string | null
    educationallevel?: NullableStringFieldUpdateOperationsInput | string | null
    employmentstatus?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    heigth?: NullableStringFieldUpdateOperationsInput | string | null
    lga_origin?: NullableStringFieldUpdateOperationsInput | string | null
    maritalstatus?: NullableStringFieldUpdateOperationsInput | string | null
    middlename?: NullableStringFieldUpdateOperationsInput | string | null
    nok_address1?: NullableStringFieldUpdateOperationsInput | string | null
    nok_address2?: NullableStringFieldUpdateOperationsInput | string | null
    nok_firstname?: NullableStringFieldUpdateOperationsInput | string | null
    nok_middlename?: NullableStringFieldUpdateOperationsInput | string | null
    nok_postalcode?: NullableStringFieldUpdateOperationsInput | string | null
    nspokenlang?: NullableStringFieldUpdateOperationsInput | string | null
    ospokenlang?: NullableStringFieldUpdateOperationsInput | string | null
    pfirstname?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    pmiddlename?: NullableStringFieldUpdateOperationsInput | string | null
    psurname?: NullableStringFieldUpdateOperationsInput | string | null
    residence_AdressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    residence_Town?: NullableStringFieldUpdateOperationsInput | string | null
    residencestatus?: NullableStringFieldUpdateOperationsInput | string | null
    self_origin_lga?: NullableStringFieldUpdateOperationsInput | string | null
    self_origin_place?: NullableStringFieldUpdateOperationsInput | string | null
    self_origin_state?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    spoken_language?: NullableStringFieldUpdateOperationsInput | string | null
    telephoneno?: NullableStringFieldUpdateOperationsInput | string | null
    userid?: NullableStringFieldUpdateOperationsInput | string | null
    registration_id?: IntFieldUpdateOperationsInput | number
  }

  export type AccountCreateInput = {
    id?: string
    accountName: string
    accountNumber: string
    bankName: string
    accountType: string
    currency: string
    balance: number
    openingDate: Date | string
    status: string
    branchCode?: string | null
    swiftCode?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    previousBalance?: number | null
  }

  export type AccountUncheckedCreateInput = {
    id?: string
    accountName: string
    accountNumber: string
    bankName: string
    accountType: string
    currency: string
    balance: number
    openingDate: Date | string
    status: string
    branchCode?: string | null
    swiftCode?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    previousBalance?: number | null
  }

  export type AccountUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountName?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    accountType?: StringFieldUpdateOperationsInput | string
    currency?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    openingDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    branchCode?: NullableStringFieldUpdateOperationsInput | string | null
    swiftCode?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    previousBalance?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type AccountUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountName?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    accountType?: StringFieldUpdateOperationsInput | string
    currency?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    openingDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    branchCode?: NullableStringFieldUpdateOperationsInput | string | null
    swiftCode?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    previousBalance?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type AccountCreateManyInput = {
    id?: string
    accountName: string
    accountNumber: string
    bankName: string
    accountType: string
    currency: string
    balance: number
    openingDate: Date | string
    status: string
    branchCode?: string | null
    swiftCode?: string | null
    description?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    previousBalance?: number | null
  }

  export type AccountUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountName?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    accountType?: StringFieldUpdateOperationsInput | string
    currency?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    openingDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    branchCode?: NullableStringFieldUpdateOperationsInput | string | null
    swiftCode?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    previousBalance?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type AccountUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountName?: StringFieldUpdateOperationsInput | string
    accountNumber?: StringFieldUpdateOperationsInput | string
    bankName?: StringFieldUpdateOperationsInput | string
    accountType?: StringFieldUpdateOperationsInput | string
    currency?: StringFieldUpdateOperationsInput | string
    balance?: FloatFieldUpdateOperationsInput | number
    openingDate?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: StringFieldUpdateOperationsInput | string
    branchCode?: NullableStringFieldUpdateOperationsInput | string | null
    swiftCode?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    previousBalance?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type employee_paymentsCreateInput = {
    id?: string
    employee_id: string
    payment_type: string
    payment_method: string
    payment_date: Date | string
    basic_salary?: Decimal | DecimalJsLike | number | string | null
    house_rent_allowance?: Decimal | DecimalJsLike | number | string | null
    medical_allowance?: Decimal | DecimalJsLike | number | string | null
    travel_allowance?: Decimal | DecimalJsLike | number | string | null
    dearness_allowance?: Decimal | DecimalJsLike | number | string | null
    provident_fund?: Decimal | DecimalJsLike | number | string | null
    income_tax?: Decimal | DecimalJsLike | number | string | null
    health_insurance?: Decimal | DecimalJsLike | number | string | null
    loan_deduction?: Decimal | DecimalJsLike | number | string | null
    comments?: string | null
    created_at?: Date | string | null
  }

  export type employee_paymentsUncheckedCreateInput = {
    id?: string
    employee_id: string
    payment_type: string
    payment_method: string
    payment_date: Date | string
    basic_salary?: Decimal | DecimalJsLike | number | string | null
    house_rent_allowance?: Decimal | DecimalJsLike | number | string | null
    medical_allowance?: Decimal | DecimalJsLike | number | string | null
    travel_allowance?: Decimal | DecimalJsLike | number | string | null
    dearness_allowance?: Decimal | DecimalJsLike | number | string | null
    provident_fund?: Decimal | DecimalJsLike | number | string | null
    income_tax?: Decimal | DecimalJsLike | number | string | null
    health_insurance?: Decimal | DecimalJsLike | number | string | null
    loan_deduction?: Decimal | DecimalJsLike | number | string | null
    comments?: string | null
    created_at?: Date | string | null
  }

  export type employee_paymentsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    employee_id?: StringFieldUpdateOperationsInput | string
    payment_type?: StringFieldUpdateOperationsInput | string
    payment_method?: StringFieldUpdateOperationsInput | string
    payment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    basic_salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    house_rent_allowance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    medical_allowance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    travel_allowance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dearness_allowance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    provident_fund?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    income_tax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    health_insurance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    loan_deduction?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type employee_paymentsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    employee_id?: StringFieldUpdateOperationsInput | string
    payment_type?: StringFieldUpdateOperationsInput | string
    payment_method?: StringFieldUpdateOperationsInput | string
    payment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    basic_salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    house_rent_allowance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    medical_allowance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    travel_allowance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dearness_allowance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    provident_fund?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    income_tax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    health_insurance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    loan_deduction?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type employee_paymentsCreateManyInput = {
    id?: string
    employee_id: string
    payment_type: string
    payment_method: string
    payment_date: Date | string
    basic_salary?: Decimal | DecimalJsLike | number | string | null
    house_rent_allowance?: Decimal | DecimalJsLike | number | string | null
    medical_allowance?: Decimal | DecimalJsLike | number | string | null
    travel_allowance?: Decimal | DecimalJsLike | number | string | null
    dearness_allowance?: Decimal | DecimalJsLike | number | string | null
    provident_fund?: Decimal | DecimalJsLike | number | string | null
    income_tax?: Decimal | DecimalJsLike | number | string | null
    health_insurance?: Decimal | DecimalJsLike | number | string | null
    loan_deduction?: Decimal | DecimalJsLike | number | string | null
    comments?: string | null
    created_at?: Date | string | null
  }

  export type employee_paymentsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    employee_id?: StringFieldUpdateOperationsInput | string
    payment_type?: StringFieldUpdateOperationsInput | string
    payment_method?: StringFieldUpdateOperationsInput | string
    payment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    basic_salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    house_rent_allowance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    medical_allowance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    travel_allowance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dearness_allowance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    provident_fund?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    income_tax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    health_insurance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    loan_deduction?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type employee_paymentsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    employee_id?: StringFieldUpdateOperationsInput | string
    payment_type?: StringFieldUpdateOperationsInput | string
    payment_method?: StringFieldUpdateOperationsInput | string
    payment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    basic_salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    house_rent_allowance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    medical_allowance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    travel_allowance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    dearness_allowance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    provident_fund?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    income_tax?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    health_insurance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    loan_deduction?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    comments?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type salary_budgetCreateInput = {
    staff_id?: string | null
    legacy_id?: string | null
    full_name?: string | null
    job_title?: string | null
    command?: string | null
    zone?: string | null
    location?: string | null
    unit?: string | null
    reference_id?: string | null
    grade?: string | null
    grade_step?: string | null
    bank_name?: string | null
    account_number?: string | null
    pension_administrator?: string | null
    pension_pin?: string | null
    tax?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    tax_id?: string | null
    basic_non_salary?: Decimal | DecimalJsLike | number | string | null
    basic_salary?: Decimal | DecimalJsLike | number | string | null
    conhess_shift_allowance?: Decimal | DecimalJsLike | number | string | null
    conmess_call_duty?: Decimal | DecimalJsLike | number | string | null
    conmess_minimum_wage?: Decimal | DecimalJsLike | number | string | null
    conmess_non_clinical?: Decimal | DecimalJsLike | number | string | null
    conposs_minimum_wage?: Decimal | DecimalJsLike | number | string | null
    conpss_minimum_wage?: Decimal | DecimalJsLike | number | string | null
    conpss_peculiar?: Decimal | DecimalJsLike | number | string | null
  }

  export type salary_budgetUncheckedCreateInput = {
    id?: number
    staff_id?: string | null
    legacy_id?: string | null
    full_name?: string | null
    job_title?: string | null
    command?: string | null
    zone?: string | null
    location?: string | null
    unit?: string | null
    reference_id?: string | null
    grade?: string | null
    grade_step?: string | null
    bank_name?: string | null
    account_number?: string | null
    pension_administrator?: string | null
    pension_pin?: string | null
    tax?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    tax_id?: string | null
    basic_non_salary?: Decimal | DecimalJsLike | number | string | null
    basic_salary?: Decimal | DecimalJsLike | number | string | null
    conhess_shift_allowance?: Decimal | DecimalJsLike | number | string | null
    conmess_call_duty?: Decimal | DecimalJsLike | number | string | null
    conmess_minimum_wage?: Decimal | DecimalJsLike | number | string | null
    conmess_non_clinical?: Decimal | DecimalJsLike | number | string | null
    conposs_minimum_wage?: Decimal | DecimalJsLike | number | string | null
    conpss_minimum_wage?: Decimal | DecimalJsLike | number | string | null
    conpss_peculiar?: Decimal | DecimalJsLike | number | string | null
  }

  export type salary_budgetUpdateInput = {
    staff_id?: NullableStringFieldUpdateOperationsInput | string | null
    legacy_id?: NullableStringFieldUpdateOperationsInput | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    job_title?: NullableStringFieldUpdateOperationsInput | string | null
    command?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    reference_id?: NullableStringFieldUpdateOperationsInput | string | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    grade_step?: NullableStringFieldUpdateOperationsInput | string | null
    bank_name?: NullableStringFieldUpdateOperationsInput | string | null
    account_number?: NullableStringFieldUpdateOperationsInput | string | null
    pension_administrator?: NullableStringFieldUpdateOperationsInput | string | null
    pension_pin?: NullableStringFieldUpdateOperationsInput | string | null
    tax?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tax_id?: NullableStringFieldUpdateOperationsInput | string | null
    basic_non_salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    basic_salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conhess_shift_allowance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conmess_call_duty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conmess_minimum_wage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conmess_non_clinical?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conposs_minimum_wage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conpss_minimum_wage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conpss_peculiar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type salary_budgetUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    staff_id?: NullableStringFieldUpdateOperationsInput | string | null
    legacy_id?: NullableStringFieldUpdateOperationsInput | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    job_title?: NullableStringFieldUpdateOperationsInput | string | null
    command?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    reference_id?: NullableStringFieldUpdateOperationsInput | string | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    grade_step?: NullableStringFieldUpdateOperationsInput | string | null
    bank_name?: NullableStringFieldUpdateOperationsInput | string | null
    account_number?: NullableStringFieldUpdateOperationsInput | string | null
    pension_administrator?: NullableStringFieldUpdateOperationsInput | string | null
    pension_pin?: NullableStringFieldUpdateOperationsInput | string | null
    tax?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tax_id?: NullableStringFieldUpdateOperationsInput | string | null
    basic_non_salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    basic_salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conhess_shift_allowance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conmess_call_duty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conmess_minimum_wage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conmess_non_clinical?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conposs_minimum_wage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conpss_minimum_wage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conpss_peculiar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type salary_budgetCreateManyInput = {
    id?: number
    staff_id?: string | null
    legacy_id?: string | null
    full_name?: string | null
    job_title?: string | null
    command?: string | null
    zone?: string | null
    location?: string | null
    unit?: string | null
    reference_id?: string | null
    grade?: string | null
    grade_step?: string | null
    bank_name?: string | null
    account_number?: string | null
    pension_administrator?: string | null
    pension_pin?: string | null
    tax?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    tax_id?: string | null
    basic_non_salary?: Decimal | DecimalJsLike | number | string | null
    basic_salary?: Decimal | DecimalJsLike | number | string | null
    conhess_shift_allowance?: Decimal | DecimalJsLike | number | string | null
    conmess_call_duty?: Decimal | DecimalJsLike | number | string | null
    conmess_minimum_wage?: Decimal | DecimalJsLike | number | string | null
    conmess_non_clinical?: Decimal | DecimalJsLike | number | string | null
    conposs_minimum_wage?: Decimal | DecimalJsLike | number | string | null
    conpss_minimum_wage?: Decimal | DecimalJsLike | number | string | null
    conpss_peculiar?: Decimal | DecimalJsLike | number | string | null
  }

  export type salary_budgetUpdateManyMutationInput = {
    staff_id?: NullableStringFieldUpdateOperationsInput | string | null
    legacy_id?: NullableStringFieldUpdateOperationsInput | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    job_title?: NullableStringFieldUpdateOperationsInput | string | null
    command?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    reference_id?: NullableStringFieldUpdateOperationsInput | string | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    grade_step?: NullableStringFieldUpdateOperationsInput | string | null
    bank_name?: NullableStringFieldUpdateOperationsInput | string | null
    account_number?: NullableStringFieldUpdateOperationsInput | string | null
    pension_administrator?: NullableStringFieldUpdateOperationsInput | string | null
    pension_pin?: NullableStringFieldUpdateOperationsInput | string | null
    tax?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tax_id?: NullableStringFieldUpdateOperationsInput | string | null
    basic_non_salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    basic_salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conhess_shift_allowance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conmess_call_duty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conmess_minimum_wage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conmess_non_clinical?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conposs_minimum_wage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conpss_minimum_wage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conpss_peculiar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type salary_budgetUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    staff_id?: NullableStringFieldUpdateOperationsInput | string | null
    legacy_id?: NullableStringFieldUpdateOperationsInput | string | null
    full_name?: NullableStringFieldUpdateOperationsInput | string | null
    job_title?: NullableStringFieldUpdateOperationsInput | string | null
    command?: NullableStringFieldUpdateOperationsInput | string | null
    zone?: NullableStringFieldUpdateOperationsInput | string | null
    location?: NullableStringFieldUpdateOperationsInput | string | null
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    reference_id?: NullableStringFieldUpdateOperationsInput | string | null
    grade?: NullableStringFieldUpdateOperationsInput | string | null
    grade_step?: NullableStringFieldUpdateOperationsInput | string | null
    bank_name?: NullableStringFieldUpdateOperationsInput | string | null
    account_number?: NullableStringFieldUpdateOperationsInput | string | null
    pension_administrator?: NullableStringFieldUpdateOperationsInput | string | null
    pension_pin?: NullableStringFieldUpdateOperationsInput | string | null
    tax?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tax_id?: NullableStringFieldUpdateOperationsInput | string | null
    basic_non_salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    basic_salary?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conhess_shift_allowance?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conmess_call_duty?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conmess_minimum_wage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conmess_non_clinical?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conposs_minimum_wage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conpss_minimum_wage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    conpss_peculiar?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type admin_permissionsRoleResourceActionCompoundUniqueInput = {
    role: string
    resource: string
    action: string
  }

  export type admin_permissionsCountOrderByAggregateInput = {
    id?: SortOrder
    role?: SortOrder
    resource?: SortOrder
    action?: SortOrder
    is_allowed?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type admin_permissionsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type admin_permissionsMaxOrderByAggregateInput = {
    id?: SortOrder
    role?: SortOrder
    resource?: SortOrder
    action?: SortOrder
    is_allowed?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type admin_permissionsMinOrderByAggregateInput = {
    id?: SortOrder
    role?: SortOrder
    resource?: SortOrder
    action?: SortOrder
    is_allowed?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type admin_permissionsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type Admin_usersScalarRelationFilter = {
    is?: admin_usersWhereInput
    isNot?: admin_usersWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type admin_sessionsCountOrderByAggregateInput = {
    id?: SortOrder
    admin_id?: SortOrder
    session_token?: SortOrder
    expires_at?: SortOrder
    created_at?: SortOrder
    ip_address?: SortOrder
    user_agent?: SortOrder
  }

  export type admin_sessionsAvgOrderByAggregateInput = {
    id?: SortOrder
    admin_id?: SortOrder
  }

  export type admin_sessionsMaxOrderByAggregateInput = {
    id?: SortOrder
    admin_id?: SortOrder
    session_token?: SortOrder
    expires_at?: SortOrder
    created_at?: SortOrder
    ip_address?: SortOrder
    user_agent?: SortOrder
  }

  export type admin_sessionsMinOrderByAggregateInput = {
    id?: SortOrder
    admin_id?: SortOrder
    session_token?: SortOrder
    expires_at?: SortOrder
    created_at?: SortOrder
    ip_address?: SortOrder
    user_agent?: SortOrder
  }

  export type admin_sessionsSumOrderByAggregateInput = {
    id?: SortOrder
    admin_id?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type Admin_sessionsListRelationFilter = {
    every?: admin_sessionsWhereInput
    some?: admin_sessionsWhereInput
    none?: admin_sessionsWhereInput
  }

  export type Dashboard_notificationsListRelationFilter = {
    every?: dashboard_notificationsWhereInput
    some?: dashboard_notificationsWhereInput
    none?: dashboard_notificationsWhereInput
  }

  export type Dashboard_widgetsListRelationFilter = {
    every?: dashboard_widgetsWhereInput
    some?: dashboard_widgetsWhereInput
    none?: dashboard_widgetsWhereInput
  }

  export type Password_reset_tokensNullableScalarRelationFilter = {
    is?: password_reset_tokensWhereInput | null
    isNot?: password_reset_tokensWhereInput | null
  }

  export type admin_sessionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type dashboard_notificationsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type dashboard_widgetsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type admin_usersCountOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password_hash?: SortOrder
    full_name?: SortOrder
    role?: SortOrder
    is_active?: SortOrder
    last_login?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type admin_usersAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type admin_usersMaxOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password_hash?: SortOrder
    full_name?: SortOrder
    role?: SortOrder
    is_active?: SortOrder
    last_login?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type admin_usersMinOrderByAggregateInput = {
    id?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password_hash?: SortOrder
    full_name?: SortOrder
    role?: SortOrder
    is_active?: SortOrder
    last_login?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type admin_usersSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type Admin_usersNullableScalarRelationFilter = {
    is?: admin_usersWhereInput | null
    isNot?: admin_usersWhereInput | null
  }

  export type dashboard_notificationsCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    is_read?: SortOrder
    recipient_id?: SortOrder
    created_at?: SortOrder
    expires_at?: SortOrder
    action_url?: SortOrder
  }

  export type dashboard_notificationsAvgOrderByAggregateInput = {
    id?: SortOrder
    recipient_id?: SortOrder
  }

  export type dashboard_notificationsMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    is_read?: SortOrder
    recipient_id?: SortOrder
    created_at?: SortOrder
    expires_at?: SortOrder
    action_url?: SortOrder
  }

  export type dashboard_notificationsMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    message?: SortOrder
    type?: SortOrder
    is_read?: SortOrder
    recipient_id?: SortOrder
    created_at?: SortOrder
    expires_at?: SortOrder
    action_url?: SortOrder
  }

  export type dashboard_notificationsSumOrderByAggregateInput = {
    id?: SortOrder
    recipient_id?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type dashboard_widgetsCountOrderByAggregateInput = {
    id?: SortOrder
    admin_id?: SortOrder
    widget_type?: SortOrder
    widget_position?: SortOrder
    widget_size?: SortOrder
    widget_config?: SortOrder
    is_visible?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type dashboard_widgetsAvgOrderByAggregateInput = {
    id?: SortOrder
    admin_id?: SortOrder
    widget_position?: SortOrder
  }

  export type dashboard_widgetsMaxOrderByAggregateInput = {
    id?: SortOrder
    admin_id?: SortOrder
    widget_type?: SortOrder
    widget_position?: SortOrder
    widget_size?: SortOrder
    is_visible?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type dashboard_widgetsMinOrderByAggregateInput = {
    id?: SortOrder
    admin_id?: SortOrder
    widget_type?: SortOrder
    widget_position?: SortOrder
    widget_size?: SortOrder
    is_visible?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type dashboard_widgetsSumOrderByAggregateInput = {
    id?: SortOrder
    admin_id?: SortOrder
    widget_position?: SortOrder
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type RegistrationsScalarRelationFilter = {
    is?: registrationsWhereInput
    isNot?: registrationsWhereInput
  }

  export type document_uploadsCountOrderByAggregateInput = {
    id?: SortOrder
    registration_id?: SortOrder
    appointment_letter_path?: SortOrder
    educational_certificates_path?: SortOrder
    promotion_letter_path?: SortOrder
    other_documents_path?: SortOrder
    profile_image_path?: SortOrder
    signature_path?: SortOrder
    upload_date?: SortOrder
    status?: SortOrder
  }

  export type document_uploadsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type document_uploadsMaxOrderByAggregateInput = {
    id?: SortOrder
    registration_id?: SortOrder
    appointment_letter_path?: SortOrder
    educational_certificates_path?: SortOrder
    promotion_letter_path?: SortOrder
    other_documents_path?: SortOrder
    profile_image_path?: SortOrder
    signature_path?: SortOrder
    upload_date?: SortOrder
    status?: SortOrder
  }

  export type document_uploadsMinOrderByAggregateInput = {
    id?: SortOrder
    registration_id?: SortOrder
    appointment_letter_path?: SortOrder
    educational_certificates_path?: SortOrder
    promotion_letter_path?: SortOrder
    other_documents_path?: SortOrder
    profile_image_path?: SortOrder
    signature_path?: SortOrder
    upload_date?: SortOrder
    status?: SortOrder
  }

  export type document_uploadsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type employeesCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    department?: SortOrder
    position?: SortOrder
    status?: SortOrder
    join_date?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type employeesMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    department?: SortOrder
    position?: SortOrder
    status?: SortOrder
    join_date?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type employeesMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    department?: SortOrder
    position?: SortOrder
    status?: SortOrder
    join_date?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type employment_infoCountOrderByAggregateInput = {
    id?: SortOrder
    registration_id?: SortOrder
    employment_id_no?: SortOrder
    service_no?: SortOrder
    file_no?: SortOrder
    rank_position?: SortOrder
    department?: SortOrder
    organization?: SortOrder
    employment_type?: SortOrder
    probation_period?: SortOrder
    work_location?: SortOrder
    date_of_first_appointment?: SortOrder
    gl?: SortOrder
    step?: SortOrder
    salary_structure?: SortOrder
    cadre?: SortOrder
    name_of_bank?: SortOrder
    account_number?: SortOrder
    pfa_name?: SortOrder
    rsapin?: SortOrder
    educational_background?: SortOrder
    certifications?: SortOrder
  }

  export type employment_infoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type employment_infoMaxOrderByAggregateInput = {
    id?: SortOrder
    registration_id?: SortOrder
    employment_id_no?: SortOrder
    service_no?: SortOrder
    file_no?: SortOrder
    rank_position?: SortOrder
    department?: SortOrder
    organization?: SortOrder
    employment_type?: SortOrder
    probation_period?: SortOrder
    work_location?: SortOrder
    date_of_first_appointment?: SortOrder
    gl?: SortOrder
    step?: SortOrder
    salary_structure?: SortOrder
    cadre?: SortOrder
    name_of_bank?: SortOrder
    account_number?: SortOrder
    pfa_name?: SortOrder
    rsapin?: SortOrder
    educational_background?: SortOrder
    certifications?: SortOrder
  }

  export type employment_infoMinOrderByAggregateInput = {
    id?: SortOrder
    registration_id?: SortOrder
    employment_id_no?: SortOrder
    service_no?: SortOrder
    file_no?: SortOrder
    rank_position?: SortOrder
    department?: SortOrder
    organization?: SortOrder
    employment_type?: SortOrder
    probation_period?: SortOrder
    work_location?: SortOrder
    date_of_first_appointment?: SortOrder
    gl?: SortOrder
    step?: SortOrder
    salary_structure?: SortOrder
    cadre?: SortOrder
    name_of_bank?: SortOrder
    account_number?: SortOrder
    pfa_name?: SortOrder
    rsapin?: SortOrder
    educational_background?: SortOrder
    certifications?: SortOrder
  }

  export type employment_infoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type password_reset_tokensCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    token?: SortOrder
    expires_at?: SortOrder
    created_at?: SortOrder
  }

  export type password_reset_tokensAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }

  export type password_reset_tokensMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    token?: SortOrder
    expires_at?: SortOrder
    created_at?: SortOrder
  }

  export type password_reset_tokensMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    token?: SortOrder
    expires_at?: SortOrder
    created_at?: SortOrder
  }

  export type password_reset_tokensSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type pending_employeesCountOrderByAggregateInput = {
    id?: SortOrder
    registration_id?: SortOrder
    surname?: SortOrder
    firstname?: SortOrder
    email?: SortOrder
    department?: SortOrder
    position?: SortOrder
    status?: SortOrder
    source?: SortOrder
    submission_date?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    missing_fields?: SortOrder
    metadata?: SortOrder
  }

  export type pending_employeesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type pending_employeesMaxOrderByAggregateInput = {
    id?: SortOrder
    registration_id?: SortOrder
    surname?: SortOrder
    firstname?: SortOrder
    email?: SortOrder
    department?: SortOrder
    position?: SortOrder
    status?: SortOrder
    source?: SortOrder
    submission_date?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type pending_employeesMinOrderByAggregateInput = {
    id?: SortOrder
    registration_id?: SortOrder
    surname?: SortOrder
    firstname?: SortOrder
    email?: SortOrder
    department?: SortOrder
    position?: SortOrder
    status?: SortOrder
    source?: SortOrder
    submission_date?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type pending_employeesSumOrderByAggregateInput = {
    id?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type personal_infoCountOrderByAggregateInput = {
    id?: SortOrder
    registration_id?: SortOrder
    title?: SortOrder
    surname?: SortOrder
    first_name?: SortOrder
    other_names?: SortOrder
    phone_number?: SortOrder
    email?: SortOrder
    date_of_birth?: SortOrder
    sex?: SortOrder
    marital_status?: SortOrder
    state_of_origin?: SortOrder
    lga?: SortOrder
    state_of_residence?: SortOrder
    address_state_of_residence?: SortOrder
    next_of_kin_name?: SortOrder
    next_of_kin_relationship?: SortOrder
    next_of_kin_phone_number?: SortOrder
    next_of_kin_address?: SortOrder
  }

  export type personal_infoAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type personal_infoMaxOrderByAggregateInput = {
    id?: SortOrder
    registration_id?: SortOrder
    title?: SortOrder
    surname?: SortOrder
    first_name?: SortOrder
    other_names?: SortOrder
    phone_number?: SortOrder
    email?: SortOrder
    date_of_birth?: SortOrder
    sex?: SortOrder
    marital_status?: SortOrder
    state_of_origin?: SortOrder
    lga?: SortOrder
    state_of_residence?: SortOrder
    address_state_of_residence?: SortOrder
    next_of_kin_name?: SortOrder
    next_of_kin_relationship?: SortOrder
    next_of_kin_phone_number?: SortOrder
    next_of_kin_address?: SortOrder
  }

  export type personal_infoMinOrderByAggregateInput = {
    id?: SortOrder
    registration_id?: SortOrder
    title?: SortOrder
    surname?: SortOrder
    first_name?: SortOrder
    other_names?: SortOrder
    phone_number?: SortOrder
    email?: SortOrder
    date_of_birth?: SortOrder
    sex?: SortOrder
    marital_status?: SortOrder
    state_of_origin?: SortOrder
    lga?: SortOrder
    state_of_residence?: SortOrder
    address_state_of_residence?: SortOrder
    next_of_kin_name?: SortOrder
    next_of_kin_relationship?: SortOrder
    next_of_kin_phone_number?: SortOrder
    next_of_kin_address?: SortOrder
  }

  export type personal_infoSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type registration_commentsCountOrderByAggregateInput = {
    id?: SortOrder
    registration_id?: SortOrder
    comment_text?: SortOrder
    author?: SortOrder
    created_at?: SortOrder
  }

  export type registration_commentsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type registration_commentsMaxOrderByAggregateInput = {
    id?: SortOrder
    registration_id?: SortOrder
    comment_text?: SortOrder
    author?: SortOrder
    created_at?: SortOrder
  }

  export type registration_commentsMinOrderByAggregateInput = {
    id?: SortOrder
    registration_id?: SortOrder
    comment_text?: SortOrder
    author?: SortOrder
    created_at?: SortOrder
  }

  export type registration_commentsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type RegistrationsNullableScalarRelationFilter = {
    is?: registrationsWhereInput | null
    isNot?: registrationsWhereInput | null
  }

  export type registration_historyCountOrderByAggregateInput = {
    id?: SortOrder
    registration_id?: SortOrder
    action?: SortOrder
    details?: SortOrder
    performed_by?: SortOrder
    performed_at?: SortOrder
  }

  export type registration_historyAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type registration_historyMaxOrderByAggregateInput = {
    id?: SortOrder
    registration_id?: SortOrder
    action?: SortOrder
    details?: SortOrder
    performed_by?: SortOrder
    performed_at?: SortOrder
  }

  export type registration_historyMinOrderByAggregateInput = {
    id?: SortOrder
    registration_id?: SortOrder
    action?: SortOrder
    details?: SortOrder
    performed_by?: SortOrder
    performed_at?: SortOrder
  }

  export type registration_historySumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type VerificationDataNullableScalarRelationFilter = {
    is?: VerificationDataWhereInput | null
    isNot?: VerificationDataWhereInput | null
  }

  export type Document_uploadsNullableScalarRelationFilter = {
    is?: document_uploadsWhereInput | null
    isNot?: document_uploadsWhereInput | null
  }

  export type Employment_infoNullableScalarRelationFilter = {
    is?: employment_infoWhereInput | null
    isNot?: employment_infoWhereInput | null
  }

  export type Personal_infoNullableScalarRelationFilter = {
    is?: personal_infoWhereInput | null
    isNot?: personal_infoWhereInput | null
  }

  export type Registration_commentsListRelationFilter = {
    every?: registration_commentsWhereInput
    some?: registration_commentsWhereInput
    none?: registration_commentsWhereInput
  }

  export type Registration_historyListRelationFilter = {
    every?: registration_historyWhereInput
    some?: registration_historyWhereInput
    none?: registration_historyWhereInput
  }

  export type registration_commentsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type registration_historyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type registrationsCountOrderByAggregateInput = {
    id?: SortOrder
    registration_Id?: SortOrder
    nin?: SortOrder
    status?: SortOrder
    current_step?: SortOrder
    declaration?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    submitted_at?: SortOrder
    approved_at?: SortOrder
    rejected_at?: SortOrder
  }

  export type registrationsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type registrationsMaxOrderByAggregateInput = {
    id?: SortOrder
    registration_Id?: SortOrder
    nin?: SortOrder
    status?: SortOrder
    current_step?: SortOrder
    declaration?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    submitted_at?: SortOrder
    approved_at?: SortOrder
    rejected_at?: SortOrder
  }

  export type registrationsMinOrderByAggregateInput = {
    id?: SortOrder
    registration_Id?: SortOrder
    nin?: SortOrder
    status?: SortOrder
    current_step?: SortOrder
    declaration?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    submitted_at?: SortOrder
    approved_at?: SortOrder
    rejected_at?: SortOrder
  }

  export type registrationsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type VerificationDataCountOrderByAggregateInput = {
    id?: SortOrder
    nin?: SortOrder
    vnin?: SortOrder
    title?: SortOrder
    surname?: SortOrder
    email?: SortOrder
    gender?: SortOrder
    state_of_origin?: SortOrder
    religion?: SortOrder
    profession?: SortOrder
    residence_address?: SortOrder
    residence_lga?: SortOrder
    residence_state?: SortOrder
    nok_surname?: SortOrder
    nok_lga?: SortOrder
    nok_state?: SortOrder
    nok_town?: SortOrder
    maiden_name?: SortOrder
    tracking_id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    birthcountry?: SortOrder
    birthdate?: SortOrder
    birthlga?: SortOrder
    birthstate?: SortOrder
    central_iD?: SortOrder
    educationallevel?: SortOrder
    employmentstatus?: SortOrder
    firstname?: SortOrder
    heigth?: SortOrder
    lga_origin?: SortOrder
    maritalstatus?: SortOrder
    middlename?: SortOrder
    nok_address1?: SortOrder
    nok_address2?: SortOrder
    nok_firstname?: SortOrder
    nok_middlename?: SortOrder
    nok_postalcode?: SortOrder
    nspokenlang?: SortOrder
    ospokenlang?: SortOrder
    pfirstname?: SortOrder
    photo?: SortOrder
    pmiddlename?: SortOrder
    psurname?: SortOrder
    residence_AdressLine1?: SortOrder
    residence_Town?: SortOrder
    residencestatus?: SortOrder
    self_origin_lga?: SortOrder
    self_origin_place?: SortOrder
    self_origin_state?: SortOrder
    signature?: SortOrder
    spoken_language?: SortOrder
    telephoneno?: SortOrder
    userid?: SortOrder
    registration_id?: SortOrder
  }

  export type VerificationDataAvgOrderByAggregateInput = {
    registration_id?: SortOrder
  }

  export type VerificationDataMaxOrderByAggregateInput = {
    id?: SortOrder
    nin?: SortOrder
    vnin?: SortOrder
    title?: SortOrder
    surname?: SortOrder
    email?: SortOrder
    gender?: SortOrder
    state_of_origin?: SortOrder
    religion?: SortOrder
    profession?: SortOrder
    residence_address?: SortOrder
    residence_lga?: SortOrder
    residence_state?: SortOrder
    nok_surname?: SortOrder
    nok_lga?: SortOrder
    nok_state?: SortOrder
    nok_town?: SortOrder
    maiden_name?: SortOrder
    tracking_id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    birthcountry?: SortOrder
    birthdate?: SortOrder
    birthlga?: SortOrder
    birthstate?: SortOrder
    central_iD?: SortOrder
    educationallevel?: SortOrder
    employmentstatus?: SortOrder
    firstname?: SortOrder
    heigth?: SortOrder
    lga_origin?: SortOrder
    maritalstatus?: SortOrder
    middlename?: SortOrder
    nok_address1?: SortOrder
    nok_address2?: SortOrder
    nok_firstname?: SortOrder
    nok_middlename?: SortOrder
    nok_postalcode?: SortOrder
    nspokenlang?: SortOrder
    ospokenlang?: SortOrder
    pfirstname?: SortOrder
    photo?: SortOrder
    pmiddlename?: SortOrder
    psurname?: SortOrder
    residence_AdressLine1?: SortOrder
    residence_Town?: SortOrder
    residencestatus?: SortOrder
    self_origin_lga?: SortOrder
    self_origin_place?: SortOrder
    self_origin_state?: SortOrder
    signature?: SortOrder
    spoken_language?: SortOrder
    telephoneno?: SortOrder
    userid?: SortOrder
    registration_id?: SortOrder
  }

  export type VerificationDataMinOrderByAggregateInput = {
    id?: SortOrder
    nin?: SortOrder
    vnin?: SortOrder
    title?: SortOrder
    surname?: SortOrder
    email?: SortOrder
    gender?: SortOrder
    state_of_origin?: SortOrder
    religion?: SortOrder
    profession?: SortOrder
    residence_address?: SortOrder
    residence_lga?: SortOrder
    residence_state?: SortOrder
    nok_surname?: SortOrder
    nok_lga?: SortOrder
    nok_state?: SortOrder
    nok_town?: SortOrder
    maiden_name?: SortOrder
    tracking_id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    birthcountry?: SortOrder
    birthdate?: SortOrder
    birthlga?: SortOrder
    birthstate?: SortOrder
    central_iD?: SortOrder
    educationallevel?: SortOrder
    employmentstatus?: SortOrder
    firstname?: SortOrder
    heigth?: SortOrder
    lga_origin?: SortOrder
    maritalstatus?: SortOrder
    middlename?: SortOrder
    nok_address1?: SortOrder
    nok_address2?: SortOrder
    nok_firstname?: SortOrder
    nok_middlename?: SortOrder
    nok_postalcode?: SortOrder
    nspokenlang?: SortOrder
    ospokenlang?: SortOrder
    pfirstname?: SortOrder
    photo?: SortOrder
    pmiddlename?: SortOrder
    psurname?: SortOrder
    residence_AdressLine1?: SortOrder
    residence_Town?: SortOrder
    residencestatus?: SortOrder
    self_origin_lga?: SortOrder
    self_origin_place?: SortOrder
    self_origin_state?: SortOrder
    signature?: SortOrder
    spoken_language?: SortOrder
    telephoneno?: SortOrder
    userid?: SortOrder
    registration_id?: SortOrder
  }

  export type VerificationDataSumOrderByAggregateInput = {
    registration_id?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type AccountCountOrderByAggregateInput = {
    id?: SortOrder
    accountName?: SortOrder
    accountNumber?: SortOrder
    bankName?: SortOrder
    accountType?: SortOrder
    currency?: SortOrder
    balance?: SortOrder
    openingDate?: SortOrder
    status?: SortOrder
    branchCode?: SortOrder
    swiftCode?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    previousBalance?: SortOrder
  }

  export type AccountAvgOrderByAggregateInput = {
    balance?: SortOrder
    previousBalance?: SortOrder
  }

  export type AccountMaxOrderByAggregateInput = {
    id?: SortOrder
    accountName?: SortOrder
    accountNumber?: SortOrder
    bankName?: SortOrder
    accountType?: SortOrder
    currency?: SortOrder
    balance?: SortOrder
    openingDate?: SortOrder
    status?: SortOrder
    branchCode?: SortOrder
    swiftCode?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    previousBalance?: SortOrder
  }

  export type AccountMinOrderByAggregateInput = {
    id?: SortOrder
    accountName?: SortOrder
    accountNumber?: SortOrder
    bankName?: SortOrder
    accountType?: SortOrder
    currency?: SortOrder
    balance?: SortOrder
    openingDate?: SortOrder
    status?: SortOrder
    branchCode?: SortOrder
    swiftCode?: SortOrder
    description?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    previousBalance?: SortOrder
  }

  export type AccountSumOrderByAggregateInput = {
    balance?: SortOrder
    previousBalance?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type UuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type employee_paymentsCountOrderByAggregateInput = {
    id?: SortOrder
    employee_id?: SortOrder
    payment_type?: SortOrder
    payment_method?: SortOrder
    payment_date?: SortOrder
    basic_salary?: SortOrder
    house_rent_allowance?: SortOrder
    medical_allowance?: SortOrder
    travel_allowance?: SortOrder
    dearness_allowance?: SortOrder
    provident_fund?: SortOrder
    income_tax?: SortOrder
    health_insurance?: SortOrder
    loan_deduction?: SortOrder
    comments?: SortOrder
    created_at?: SortOrder
  }

  export type employee_paymentsAvgOrderByAggregateInput = {
    basic_salary?: SortOrder
    house_rent_allowance?: SortOrder
    medical_allowance?: SortOrder
    travel_allowance?: SortOrder
    dearness_allowance?: SortOrder
    provident_fund?: SortOrder
    income_tax?: SortOrder
    health_insurance?: SortOrder
    loan_deduction?: SortOrder
  }

  export type employee_paymentsMaxOrderByAggregateInput = {
    id?: SortOrder
    employee_id?: SortOrder
    payment_type?: SortOrder
    payment_method?: SortOrder
    payment_date?: SortOrder
    basic_salary?: SortOrder
    house_rent_allowance?: SortOrder
    medical_allowance?: SortOrder
    travel_allowance?: SortOrder
    dearness_allowance?: SortOrder
    provident_fund?: SortOrder
    income_tax?: SortOrder
    health_insurance?: SortOrder
    loan_deduction?: SortOrder
    comments?: SortOrder
    created_at?: SortOrder
  }

  export type employee_paymentsMinOrderByAggregateInput = {
    id?: SortOrder
    employee_id?: SortOrder
    payment_type?: SortOrder
    payment_method?: SortOrder
    payment_date?: SortOrder
    basic_salary?: SortOrder
    house_rent_allowance?: SortOrder
    medical_allowance?: SortOrder
    travel_allowance?: SortOrder
    dearness_allowance?: SortOrder
    provident_fund?: SortOrder
    income_tax?: SortOrder
    health_insurance?: SortOrder
    loan_deduction?: SortOrder
    comments?: SortOrder
    created_at?: SortOrder
  }

  export type employee_paymentsSumOrderByAggregateInput = {
    basic_salary?: SortOrder
    house_rent_allowance?: SortOrder
    medical_allowance?: SortOrder
    travel_allowance?: SortOrder
    dearness_allowance?: SortOrder
    provident_fund?: SortOrder
    income_tax?: SortOrder
    health_insurance?: SortOrder
    loan_deduction?: SortOrder
  }

  export type UuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type salary_budgetCountOrderByAggregateInput = {
    id?: SortOrder
    staff_id?: SortOrder
    legacy_id?: SortOrder
    full_name?: SortOrder
    job_title?: SortOrder
    command?: SortOrder
    zone?: SortOrder
    location?: SortOrder
    unit?: SortOrder
    reference_id?: SortOrder
    grade?: SortOrder
    grade_step?: SortOrder
    bank_name?: SortOrder
    account_number?: SortOrder
    pension_administrator?: SortOrder
    pension_pin?: SortOrder
    tax?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    tax_id?: SortOrder
    basic_non_salary?: SortOrder
    basic_salary?: SortOrder
    conhess_shift_allowance?: SortOrder
    conmess_call_duty?: SortOrder
    conmess_minimum_wage?: SortOrder
    conmess_non_clinical?: SortOrder
    conposs_minimum_wage?: SortOrder
    conpss_minimum_wage?: SortOrder
    conpss_peculiar?: SortOrder
  }

  export type salary_budgetAvgOrderByAggregateInput = {
    id?: SortOrder
    basic_non_salary?: SortOrder
    basic_salary?: SortOrder
    conhess_shift_allowance?: SortOrder
    conmess_call_duty?: SortOrder
    conmess_minimum_wage?: SortOrder
    conmess_non_clinical?: SortOrder
    conposs_minimum_wage?: SortOrder
    conpss_minimum_wage?: SortOrder
    conpss_peculiar?: SortOrder
  }

  export type salary_budgetMaxOrderByAggregateInput = {
    id?: SortOrder
    staff_id?: SortOrder
    legacy_id?: SortOrder
    full_name?: SortOrder
    job_title?: SortOrder
    command?: SortOrder
    zone?: SortOrder
    location?: SortOrder
    unit?: SortOrder
    reference_id?: SortOrder
    grade?: SortOrder
    grade_step?: SortOrder
    bank_name?: SortOrder
    account_number?: SortOrder
    pension_administrator?: SortOrder
    pension_pin?: SortOrder
    tax?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    tax_id?: SortOrder
    basic_non_salary?: SortOrder
    basic_salary?: SortOrder
    conhess_shift_allowance?: SortOrder
    conmess_call_duty?: SortOrder
    conmess_minimum_wage?: SortOrder
    conmess_non_clinical?: SortOrder
    conposs_minimum_wage?: SortOrder
    conpss_minimum_wage?: SortOrder
    conpss_peculiar?: SortOrder
  }

  export type salary_budgetMinOrderByAggregateInput = {
    id?: SortOrder
    staff_id?: SortOrder
    legacy_id?: SortOrder
    full_name?: SortOrder
    job_title?: SortOrder
    command?: SortOrder
    zone?: SortOrder
    location?: SortOrder
    unit?: SortOrder
    reference_id?: SortOrder
    grade?: SortOrder
    grade_step?: SortOrder
    bank_name?: SortOrder
    account_number?: SortOrder
    pension_administrator?: SortOrder
    pension_pin?: SortOrder
    tax?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    tax_id?: SortOrder
    basic_non_salary?: SortOrder
    basic_salary?: SortOrder
    conhess_shift_allowance?: SortOrder
    conmess_call_duty?: SortOrder
    conmess_minimum_wage?: SortOrder
    conmess_non_clinical?: SortOrder
    conposs_minimum_wage?: SortOrder
    conpss_minimum_wage?: SortOrder
    conpss_peculiar?: SortOrder
  }

  export type salary_budgetSumOrderByAggregateInput = {
    id?: SortOrder
    basic_non_salary?: SortOrder
    basic_salary?: SortOrder
    conhess_shift_allowance?: SortOrder
    conmess_call_duty?: SortOrder
    conmess_minimum_wage?: SortOrder
    conmess_non_clinical?: SortOrder
    conposs_minimum_wage?: SortOrder
    conpss_minimum_wage?: SortOrder
    conpss_peculiar?: SortOrder
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type admin_usersCreateNestedOneWithoutAdmin_sessionsInput = {
    create?: XOR<admin_usersCreateWithoutAdmin_sessionsInput, admin_usersUncheckedCreateWithoutAdmin_sessionsInput>
    connectOrCreate?: admin_usersCreateOrConnectWithoutAdmin_sessionsInput
    connect?: admin_usersWhereUniqueInput
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type admin_usersUpdateOneRequiredWithoutAdmin_sessionsNestedInput = {
    create?: XOR<admin_usersCreateWithoutAdmin_sessionsInput, admin_usersUncheckedCreateWithoutAdmin_sessionsInput>
    connectOrCreate?: admin_usersCreateOrConnectWithoutAdmin_sessionsInput
    upsert?: admin_usersUpsertWithoutAdmin_sessionsInput
    connect?: admin_usersWhereUniqueInput
    update?: XOR<XOR<admin_usersUpdateToOneWithWhereWithoutAdmin_sessionsInput, admin_usersUpdateWithoutAdmin_sessionsInput>, admin_usersUncheckedUpdateWithoutAdmin_sessionsInput>
  }

  export type admin_sessionsCreateNestedManyWithoutAdmin_usersInput = {
    create?: XOR<admin_sessionsCreateWithoutAdmin_usersInput, admin_sessionsUncheckedCreateWithoutAdmin_usersInput> | admin_sessionsCreateWithoutAdmin_usersInput[] | admin_sessionsUncheckedCreateWithoutAdmin_usersInput[]
    connectOrCreate?: admin_sessionsCreateOrConnectWithoutAdmin_usersInput | admin_sessionsCreateOrConnectWithoutAdmin_usersInput[]
    createMany?: admin_sessionsCreateManyAdmin_usersInputEnvelope
    connect?: admin_sessionsWhereUniqueInput | admin_sessionsWhereUniqueInput[]
  }

  export type dashboard_notificationsCreateNestedManyWithoutAdmin_usersInput = {
    create?: XOR<dashboard_notificationsCreateWithoutAdmin_usersInput, dashboard_notificationsUncheckedCreateWithoutAdmin_usersInput> | dashboard_notificationsCreateWithoutAdmin_usersInput[] | dashboard_notificationsUncheckedCreateWithoutAdmin_usersInput[]
    connectOrCreate?: dashboard_notificationsCreateOrConnectWithoutAdmin_usersInput | dashboard_notificationsCreateOrConnectWithoutAdmin_usersInput[]
    createMany?: dashboard_notificationsCreateManyAdmin_usersInputEnvelope
    connect?: dashboard_notificationsWhereUniqueInput | dashboard_notificationsWhereUniqueInput[]
  }

  export type dashboard_widgetsCreateNestedManyWithoutAdmin_usersInput = {
    create?: XOR<dashboard_widgetsCreateWithoutAdmin_usersInput, dashboard_widgetsUncheckedCreateWithoutAdmin_usersInput> | dashboard_widgetsCreateWithoutAdmin_usersInput[] | dashboard_widgetsUncheckedCreateWithoutAdmin_usersInput[]
    connectOrCreate?: dashboard_widgetsCreateOrConnectWithoutAdmin_usersInput | dashboard_widgetsCreateOrConnectWithoutAdmin_usersInput[]
    createMany?: dashboard_widgetsCreateManyAdmin_usersInputEnvelope
    connect?: dashboard_widgetsWhereUniqueInput | dashboard_widgetsWhereUniqueInput[]
  }

  export type password_reset_tokensCreateNestedOneWithoutAdmin_usersInput = {
    create?: XOR<password_reset_tokensCreateWithoutAdmin_usersInput, password_reset_tokensUncheckedCreateWithoutAdmin_usersInput>
    connectOrCreate?: password_reset_tokensCreateOrConnectWithoutAdmin_usersInput
    connect?: password_reset_tokensWhereUniqueInput
  }

  export type admin_sessionsUncheckedCreateNestedManyWithoutAdmin_usersInput = {
    create?: XOR<admin_sessionsCreateWithoutAdmin_usersInput, admin_sessionsUncheckedCreateWithoutAdmin_usersInput> | admin_sessionsCreateWithoutAdmin_usersInput[] | admin_sessionsUncheckedCreateWithoutAdmin_usersInput[]
    connectOrCreate?: admin_sessionsCreateOrConnectWithoutAdmin_usersInput | admin_sessionsCreateOrConnectWithoutAdmin_usersInput[]
    createMany?: admin_sessionsCreateManyAdmin_usersInputEnvelope
    connect?: admin_sessionsWhereUniqueInput | admin_sessionsWhereUniqueInput[]
  }

  export type dashboard_notificationsUncheckedCreateNestedManyWithoutAdmin_usersInput = {
    create?: XOR<dashboard_notificationsCreateWithoutAdmin_usersInput, dashboard_notificationsUncheckedCreateWithoutAdmin_usersInput> | dashboard_notificationsCreateWithoutAdmin_usersInput[] | dashboard_notificationsUncheckedCreateWithoutAdmin_usersInput[]
    connectOrCreate?: dashboard_notificationsCreateOrConnectWithoutAdmin_usersInput | dashboard_notificationsCreateOrConnectWithoutAdmin_usersInput[]
    createMany?: dashboard_notificationsCreateManyAdmin_usersInputEnvelope
    connect?: dashboard_notificationsWhereUniqueInput | dashboard_notificationsWhereUniqueInput[]
  }

  export type dashboard_widgetsUncheckedCreateNestedManyWithoutAdmin_usersInput = {
    create?: XOR<dashboard_widgetsCreateWithoutAdmin_usersInput, dashboard_widgetsUncheckedCreateWithoutAdmin_usersInput> | dashboard_widgetsCreateWithoutAdmin_usersInput[] | dashboard_widgetsUncheckedCreateWithoutAdmin_usersInput[]
    connectOrCreate?: dashboard_widgetsCreateOrConnectWithoutAdmin_usersInput | dashboard_widgetsCreateOrConnectWithoutAdmin_usersInput[]
    createMany?: dashboard_widgetsCreateManyAdmin_usersInputEnvelope
    connect?: dashboard_widgetsWhereUniqueInput | dashboard_widgetsWhereUniqueInput[]
  }

  export type password_reset_tokensUncheckedCreateNestedOneWithoutAdmin_usersInput = {
    create?: XOR<password_reset_tokensCreateWithoutAdmin_usersInput, password_reset_tokensUncheckedCreateWithoutAdmin_usersInput>
    connectOrCreate?: password_reset_tokensCreateOrConnectWithoutAdmin_usersInput
    connect?: password_reset_tokensWhereUniqueInput
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type admin_sessionsUpdateManyWithoutAdmin_usersNestedInput = {
    create?: XOR<admin_sessionsCreateWithoutAdmin_usersInput, admin_sessionsUncheckedCreateWithoutAdmin_usersInput> | admin_sessionsCreateWithoutAdmin_usersInput[] | admin_sessionsUncheckedCreateWithoutAdmin_usersInput[]
    connectOrCreate?: admin_sessionsCreateOrConnectWithoutAdmin_usersInput | admin_sessionsCreateOrConnectWithoutAdmin_usersInput[]
    upsert?: admin_sessionsUpsertWithWhereUniqueWithoutAdmin_usersInput | admin_sessionsUpsertWithWhereUniqueWithoutAdmin_usersInput[]
    createMany?: admin_sessionsCreateManyAdmin_usersInputEnvelope
    set?: admin_sessionsWhereUniqueInput | admin_sessionsWhereUniqueInput[]
    disconnect?: admin_sessionsWhereUniqueInput | admin_sessionsWhereUniqueInput[]
    delete?: admin_sessionsWhereUniqueInput | admin_sessionsWhereUniqueInput[]
    connect?: admin_sessionsWhereUniqueInput | admin_sessionsWhereUniqueInput[]
    update?: admin_sessionsUpdateWithWhereUniqueWithoutAdmin_usersInput | admin_sessionsUpdateWithWhereUniqueWithoutAdmin_usersInput[]
    updateMany?: admin_sessionsUpdateManyWithWhereWithoutAdmin_usersInput | admin_sessionsUpdateManyWithWhereWithoutAdmin_usersInput[]
    deleteMany?: admin_sessionsScalarWhereInput | admin_sessionsScalarWhereInput[]
  }

  export type dashboard_notificationsUpdateManyWithoutAdmin_usersNestedInput = {
    create?: XOR<dashboard_notificationsCreateWithoutAdmin_usersInput, dashboard_notificationsUncheckedCreateWithoutAdmin_usersInput> | dashboard_notificationsCreateWithoutAdmin_usersInput[] | dashboard_notificationsUncheckedCreateWithoutAdmin_usersInput[]
    connectOrCreate?: dashboard_notificationsCreateOrConnectWithoutAdmin_usersInput | dashboard_notificationsCreateOrConnectWithoutAdmin_usersInput[]
    upsert?: dashboard_notificationsUpsertWithWhereUniqueWithoutAdmin_usersInput | dashboard_notificationsUpsertWithWhereUniqueWithoutAdmin_usersInput[]
    createMany?: dashboard_notificationsCreateManyAdmin_usersInputEnvelope
    set?: dashboard_notificationsWhereUniqueInput | dashboard_notificationsWhereUniqueInput[]
    disconnect?: dashboard_notificationsWhereUniqueInput | dashboard_notificationsWhereUniqueInput[]
    delete?: dashboard_notificationsWhereUniqueInput | dashboard_notificationsWhereUniqueInput[]
    connect?: dashboard_notificationsWhereUniqueInput | dashboard_notificationsWhereUniqueInput[]
    update?: dashboard_notificationsUpdateWithWhereUniqueWithoutAdmin_usersInput | dashboard_notificationsUpdateWithWhereUniqueWithoutAdmin_usersInput[]
    updateMany?: dashboard_notificationsUpdateManyWithWhereWithoutAdmin_usersInput | dashboard_notificationsUpdateManyWithWhereWithoutAdmin_usersInput[]
    deleteMany?: dashboard_notificationsScalarWhereInput | dashboard_notificationsScalarWhereInput[]
  }

  export type dashboard_widgetsUpdateManyWithoutAdmin_usersNestedInput = {
    create?: XOR<dashboard_widgetsCreateWithoutAdmin_usersInput, dashboard_widgetsUncheckedCreateWithoutAdmin_usersInput> | dashboard_widgetsCreateWithoutAdmin_usersInput[] | dashboard_widgetsUncheckedCreateWithoutAdmin_usersInput[]
    connectOrCreate?: dashboard_widgetsCreateOrConnectWithoutAdmin_usersInput | dashboard_widgetsCreateOrConnectWithoutAdmin_usersInput[]
    upsert?: dashboard_widgetsUpsertWithWhereUniqueWithoutAdmin_usersInput | dashboard_widgetsUpsertWithWhereUniqueWithoutAdmin_usersInput[]
    createMany?: dashboard_widgetsCreateManyAdmin_usersInputEnvelope
    set?: dashboard_widgetsWhereUniqueInput | dashboard_widgetsWhereUniqueInput[]
    disconnect?: dashboard_widgetsWhereUniqueInput | dashboard_widgetsWhereUniqueInput[]
    delete?: dashboard_widgetsWhereUniqueInput | dashboard_widgetsWhereUniqueInput[]
    connect?: dashboard_widgetsWhereUniqueInput | dashboard_widgetsWhereUniqueInput[]
    update?: dashboard_widgetsUpdateWithWhereUniqueWithoutAdmin_usersInput | dashboard_widgetsUpdateWithWhereUniqueWithoutAdmin_usersInput[]
    updateMany?: dashboard_widgetsUpdateManyWithWhereWithoutAdmin_usersInput | dashboard_widgetsUpdateManyWithWhereWithoutAdmin_usersInput[]
    deleteMany?: dashboard_widgetsScalarWhereInput | dashboard_widgetsScalarWhereInput[]
  }

  export type password_reset_tokensUpdateOneWithoutAdmin_usersNestedInput = {
    create?: XOR<password_reset_tokensCreateWithoutAdmin_usersInput, password_reset_tokensUncheckedCreateWithoutAdmin_usersInput>
    connectOrCreate?: password_reset_tokensCreateOrConnectWithoutAdmin_usersInput
    upsert?: password_reset_tokensUpsertWithoutAdmin_usersInput
    disconnect?: password_reset_tokensWhereInput | boolean
    delete?: password_reset_tokensWhereInput | boolean
    connect?: password_reset_tokensWhereUniqueInput
    update?: XOR<XOR<password_reset_tokensUpdateToOneWithWhereWithoutAdmin_usersInput, password_reset_tokensUpdateWithoutAdmin_usersInput>, password_reset_tokensUncheckedUpdateWithoutAdmin_usersInput>
  }

  export type admin_sessionsUncheckedUpdateManyWithoutAdmin_usersNestedInput = {
    create?: XOR<admin_sessionsCreateWithoutAdmin_usersInput, admin_sessionsUncheckedCreateWithoutAdmin_usersInput> | admin_sessionsCreateWithoutAdmin_usersInput[] | admin_sessionsUncheckedCreateWithoutAdmin_usersInput[]
    connectOrCreate?: admin_sessionsCreateOrConnectWithoutAdmin_usersInput | admin_sessionsCreateOrConnectWithoutAdmin_usersInput[]
    upsert?: admin_sessionsUpsertWithWhereUniqueWithoutAdmin_usersInput | admin_sessionsUpsertWithWhereUniqueWithoutAdmin_usersInput[]
    createMany?: admin_sessionsCreateManyAdmin_usersInputEnvelope
    set?: admin_sessionsWhereUniqueInput | admin_sessionsWhereUniqueInput[]
    disconnect?: admin_sessionsWhereUniqueInput | admin_sessionsWhereUniqueInput[]
    delete?: admin_sessionsWhereUniqueInput | admin_sessionsWhereUniqueInput[]
    connect?: admin_sessionsWhereUniqueInput | admin_sessionsWhereUniqueInput[]
    update?: admin_sessionsUpdateWithWhereUniqueWithoutAdmin_usersInput | admin_sessionsUpdateWithWhereUniqueWithoutAdmin_usersInput[]
    updateMany?: admin_sessionsUpdateManyWithWhereWithoutAdmin_usersInput | admin_sessionsUpdateManyWithWhereWithoutAdmin_usersInput[]
    deleteMany?: admin_sessionsScalarWhereInput | admin_sessionsScalarWhereInput[]
  }

  export type dashboard_notificationsUncheckedUpdateManyWithoutAdmin_usersNestedInput = {
    create?: XOR<dashboard_notificationsCreateWithoutAdmin_usersInput, dashboard_notificationsUncheckedCreateWithoutAdmin_usersInput> | dashboard_notificationsCreateWithoutAdmin_usersInput[] | dashboard_notificationsUncheckedCreateWithoutAdmin_usersInput[]
    connectOrCreate?: dashboard_notificationsCreateOrConnectWithoutAdmin_usersInput | dashboard_notificationsCreateOrConnectWithoutAdmin_usersInput[]
    upsert?: dashboard_notificationsUpsertWithWhereUniqueWithoutAdmin_usersInput | dashboard_notificationsUpsertWithWhereUniqueWithoutAdmin_usersInput[]
    createMany?: dashboard_notificationsCreateManyAdmin_usersInputEnvelope
    set?: dashboard_notificationsWhereUniqueInput | dashboard_notificationsWhereUniqueInput[]
    disconnect?: dashboard_notificationsWhereUniqueInput | dashboard_notificationsWhereUniqueInput[]
    delete?: dashboard_notificationsWhereUniqueInput | dashboard_notificationsWhereUniqueInput[]
    connect?: dashboard_notificationsWhereUniqueInput | dashboard_notificationsWhereUniqueInput[]
    update?: dashboard_notificationsUpdateWithWhereUniqueWithoutAdmin_usersInput | dashboard_notificationsUpdateWithWhereUniqueWithoutAdmin_usersInput[]
    updateMany?: dashboard_notificationsUpdateManyWithWhereWithoutAdmin_usersInput | dashboard_notificationsUpdateManyWithWhereWithoutAdmin_usersInput[]
    deleteMany?: dashboard_notificationsScalarWhereInput | dashboard_notificationsScalarWhereInput[]
  }

  export type dashboard_widgetsUncheckedUpdateManyWithoutAdmin_usersNestedInput = {
    create?: XOR<dashboard_widgetsCreateWithoutAdmin_usersInput, dashboard_widgetsUncheckedCreateWithoutAdmin_usersInput> | dashboard_widgetsCreateWithoutAdmin_usersInput[] | dashboard_widgetsUncheckedCreateWithoutAdmin_usersInput[]
    connectOrCreate?: dashboard_widgetsCreateOrConnectWithoutAdmin_usersInput | dashboard_widgetsCreateOrConnectWithoutAdmin_usersInput[]
    upsert?: dashboard_widgetsUpsertWithWhereUniqueWithoutAdmin_usersInput | dashboard_widgetsUpsertWithWhereUniqueWithoutAdmin_usersInput[]
    createMany?: dashboard_widgetsCreateManyAdmin_usersInputEnvelope
    set?: dashboard_widgetsWhereUniqueInput | dashboard_widgetsWhereUniqueInput[]
    disconnect?: dashboard_widgetsWhereUniqueInput | dashboard_widgetsWhereUniqueInput[]
    delete?: dashboard_widgetsWhereUniqueInput | dashboard_widgetsWhereUniqueInput[]
    connect?: dashboard_widgetsWhereUniqueInput | dashboard_widgetsWhereUniqueInput[]
    update?: dashboard_widgetsUpdateWithWhereUniqueWithoutAdmin_usersInput | dashboard_widgetsUpdateWithWhereUniqueWithoutAdmin_usersInput[]
    updateMany?: dashboard_widgetsUpdateManyWithWhereWithoutAdmin_usersInput | dashboard_widgetsUpdateManyWithWhereWithoutAdmin_usersInput[]
    deleteMany?: dashboard_widgetsScalarWhereInput | dashboard_widgetsScalarWhereInput[]
  }

  export type password_reset_tokensUncheckedUpdateOneWithoutAdmin_usersNestedInput = {
    create?: XOR<password_reset_tokensCreateWithoutAdmin_usersInput, password_reset_tokensUncheckedCreateWithoutAdmin_usersInput>
    connectOrCreate?: password_reset_tokensCreateOrConnectWithoutAdmin_usersInput
    upsert?: password_reset_tokensUpsertWithoutAdmin_usersInput
    disconnect?: password_reset_tokensWhereInput | boolean
    delete?: password_reset_tokensWhereInput | boolean
    connect?: password_reset_tokensWhereUniqueInput
    update?: XOR<XOR<password_reset_tokensUpdateToOneWithWhereWithoutAdmin_usersInput, password_reset_tokensUpdateWithoutAdmin_usersInput>, password_reset_tokensUncheckedUpdateWithoutAdmin_usersInput>
  }

  export type admin_usersCreateNestedOneWithoutDashboard_notificationsInput = {
    create?: XOR<admin_usersCreateWithoutDashboard_notificationsInput, admin_usersUncheckedCreateWithoutDashboard_notificationsInput>
    connectOrCreate?: admin_usersCreateOrConnectWithoutDashboard_notificationsInput
    connect?: admin_usersWhereUniqueInput
  }

  export type admin_usersUpdateOneWithoutDashboard_notificationsNestedInput = {
    create?: XOR<admin_usersCreateWithoutDashboard_notificationsInput, admin_usersUncheckedCreateWithoutDashboard_notificationsInput>
    connectOrCreate?: admin_usersCreateOrConnectWithoutDashboard_notificationsInput
    upsert?: admin_usersUpsertWithoutDashboard_notificationsInput
    disconnect?: admin_usersWhereInput | boolean
    delete?: admin_usersWhereInput | boolean
    connect?: admin_usersWhereUniqueInput
    update?: XOR<XOR<admin_usersUpdateToOneWithWhereWithoutDashboard_notificationsInput, admin_usersUpdateWithoutDashboard_notificationsInput>, admin_usersUncheckedUpdateWithoutDashboard_notificationsInput>
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type admin_usersCreateNestedOneWithoutDashboard_widgetsInput = {
    create?: XOR<admin_usersCreateWithoutDashboard_widgetsInput, admin_usersUncheckedCreateWithoutDashboard_widgetsInput>
    connectOrCreate?: admin_usersCreateOrConnectWithoutDashboard_widgetsInput
    connect?: admin_usersWhereUniqueInput
  }

  export type admin_usersUpdateOneRequiredWithoutDashboard_widgetsNestedInput = {
    create?: XOR<admin_usersCreateWithoutDashboard_widgetsInput, admin_usersUncheckedCreateWithoutDashboard_widgetsInput>
    connectOrCreate?: admin_usersCreateOrConnectWithoutDashboard_widgetsInput
    upsert?: admin_usersUpsertWithoutDashboard_widgetsInput
    connect?: admin_usersWhereUniqueInput
    update?: XOR<XOR<admin_usersUpdateToOneWithWhereWithoutDashboard_widgetsInput, admin_usersUpdateWithoutDashboard_widgetsInput>, admin_usersUncheckedUpdateWithoutDashboard_widgetsInput>
  }

  export type registrationsCreateNestedOneWithoutDocument_uploadsInput = {
    create?: XOR<registrationsCreateWithoutDocument_uploadsInput, registrationsUncheckedCreateWithoutDocument_uploadsInput>
    connectOrCreate?: registrationsCreateOrConnectWithoutDocument_uploadsInput
    connect?: registrationsWhereUniqueInput
  }

  export type registrationsUpdateOneRequiredWithoutDocument_uploadsNestedInput = {
    create?: XOR<registrationsCreateWithoutDocument_uploadsInput, registrationsUncheckedCreateWithoutDocument_uploadsInput>
    connectOrCreate?: registrationsCreateOrConnectWithoutDocument_uploadsInput
    upsert?: registrationsUpsertWithoutDocument_uploadsInput
    connect?: registrationsWhereUniqueInput
    update?: XOR<XOR<registrationsUpdateToOneWithWhereWithoutDocument_uploadsInput, registrationsUpdateWithoutDocument_uploadsInput>, registrationsUncheckedUpdateWithoutDocument_uploadsInput>
  }

  export type registrationsCreateNestedOneWithoutEmployment_infoInput = {
    create?: XOR<registrationsCreateWithoutEmployment_infoInput, registrationsUncheckedCreateWithoutEmployment_infoInput>
    connectOrCreate?: registrationsCreateOrConnectWithoutEmployment_infoInput
    connect?: registrationsWhereUniqueInput
  }

  export type registrationsUpdateOneRequiredWithoutEmployment_infoNestedInput = {
    create?: XOR<registrationsCreateWithoutEmployment_infoInput, registrationsUncheckedCreateWithoutEmployment_infoInput>
    connectOrCreate?: registrationsCreateOrConnectWithoutEmployment_infoInput
    upsert?: registrationsUpsertWithoutEmployment_infoInput
    connect?: registrationsWhereUniqueInput
    update?: XOR<XOR<registrationsUpdateToOneWithWhereWithoutEmployment_infoInput, registrationsUpdateWithoutEmployment_infoInput>, registrationsUncheckedUpdateWithoutEmployment_infoInput>
  }

  export type admin_usersCreateNestedOneWithoutPassword_reset_tokensInput = {
    create?: XOR<admin_usersCreateWithoutPassword_reset_tokensInput, admin_usersUncheckedCreateWithoutPassword_reset_tokensInput>
    connectOrCreate?: admin_usersCreateOrConnectWithoutPassword_reset_tokensInput
    connect?: admin_usersWhereUniqueInput
  }

  export type admin_usersUpdateOneRequiredWithoutPassword_reset_tokensNestedInput = {
    create?: XOR<admin_usersCreateWithoutPassword_reset_tokensInput, admin_usersUncheckedCreateWithoutPassword_reset_tokensInput>
    connectOrCreate?: admin_usersCreateOrConnectWithoutPassword_reset_tokensInput
    upsert?: admin_usersUpsertWithoutPassword_reset_tokensInput
    connect?: admin_usersWhereUniqueInput
    update?: XOR<XOR<admin_usersUpdateToOneWithWhereWithoutPassword_reset_tokensInput, admin_usersUpdateWithoutPassword_reset_tokensInput>, admin_usersUncheckedUpdateWithoutPassword_reset_tokensInput>
  }

  export type registrationsCreateNestedOneWithoutPersonal_infoInput = {
    create?: XOR<registrationsCreateWithoutPersonal_infoInput, registrationsUncheckedCreateWithoutPersonal_infoInput>
    connectOrCreate?: registrationsCreateOrConnectWithoutPersonal_infoInput
    connect?: registrationsWhereUniqueInput
  }

  export type registrationsUpdateOneRequiredWithoutPersonal_infoNestedInput = {
    create?: XOR<registrationsCreateWithoutPersonal_infoInput, registrationsUncheckedCreateWithoutPersonal_infoInput>
    connectOrCreate?: registrationsCreateOrConnectWithoutPersonal_infoInput
    upsert?: registrationsUpsertWithoutPersonal_infoInput
    connect?: registrationsWhereUniqueInput
    update?: XOR<XOR<registrationsUpdateToOneWithWhereWithoutPersonal_infoInput, registrationsUpdateWithoutPersonal_infoInput>, registrationsUncheckedUpdateWithoutPersonal_infoInput>
  }

  export type registrationsCreateNestedOneWithoutRegistration_commentsInput = {
    create?: XOR<registrationsCreateWithoutRegistration_commentsInput, registrationsUncheckedCreateWithoutRegistration_commentsInput>
    connectOrCreate?: registrationsCreateOrConnectWithoutRegistration_commentsInput
    connect?: registrationsWhereUniqueInput
  }

  export type registrationsUpdateOneRequiredWithoutRegistration_commentsNestedInput = {
    create?: XOR<registrationsCreateWithoutRegistration_commentsInput, registrationsUncheckedCreateWithoutRegistration_commentsInput>
    connectOrCreate?: registrationsCreateOrConnectWithoutRegistration_commentsInput
    upsert?: registrationsUpsertWithoutRegistration_commentsInput
    connect?: registrationsWhereUniqueInput
    update?: XOR<XOR<registrationsUpdateToOneWithWhereWithoutRegistration_commentsInput, registrationsUpdateWithoutRegistration_commentsInput>, registrationsUncheckedUpdateWithoutRegistration_commentsInput>
  }

  export type registrationsCreateNestedOneWithoutRegistration_historyInput = {
    create?: XOR<registrationsCreateWithoutRegistration_historyInput, registrationsUncheckedCreateWithoutRegistration_historyInput>
    connectOrCreate?: registrationsCreateOrConnectWithoutRegistration_historyInput
    connect?: registrationsWhereUniqueInput
  }

  export type registrationsUpdateOneWithoutRegistration_historyNestedInput = {
    create?: XOR<registrationsCreateWithoutRegistration_historyInput, registrationsUncheckedCreateWithoutRegistration_historyInput>
    connectOrCreate?: registrationsCreateOrConnectWithoutRegistration_historyInput
    upsert?: registrationsUpsertWithoutRegistration_historyInput
    disconnect?: registrationsWhereInput | boolean
    delete?: registrationsWhereInput | boolean
    connect?: registrationsWhereUniqueInput
    update?: XOR<XOR<registrationsUpdateToOneWithWhereWithoutRegistration_historyInput, registrationsUpdateWithoutRegistration_historyInput>, registrationsUncheckedUpdateWithoutRegistration_historyInput>
  }

  export type VerificationDataCreateNestedOneWithoutRegistrationInput = {
    create?: XOR<VerificationDataCreateWithoutRegistrationInput, VerificationDataUncheckedCreateWithoutRegistrationInput>
    connectOrCreate?: VerificationDataCreateOrConnectWithoutRegistrationInput
    connect?: VerificationDataWhereUniqueInput
  }

  export type document_uploadsCreateNestedOneWithoutRegistrationsInput = {
    create?: XOR<document_uploadsCreateWithoutRegistrationsInput, document_uploadsUncheckedCreateWithoutRegistrationsInput>
    connectOrCreate?: document_uploadsCreateOrConnectWithoutRegistrationsInput
    connect?: document_uploadsWhereUniqueInput
  }

  export type employment_infoCreateNestedOneWithoutRegistrationsInput = {
    create?: XOR<employment_infoCreateWithoutRegistrationsInput, employment_infoUncheckedCreateWithoutRegistrationsInput>
    connectOrCreate?: employment_infoCreateOrConnectWithoutRegistrationsInput
    connect?: employment_infoWhereUniqueInput
  }

  export type personal_infoCreateNestedOneWithoutRegistrationsInput = {
    create?: XOR<personal_infoCreateWithoutRegistrationsInput, personal_infoUncheckedCreateWithoutRegistrationsInput>
    connectOrCreate?: personal_infoCreateOrConnectWithoutRegistrationsInput
    connect?: personal_infoWhereUniqueInput
  }

  export type registration_commentsCreateNestedManyWithoutRegistrationsInput = {
    create?: XOR<registration_commentsCreateWithoutRegistrationsInput, registration_commentsUncheckedCreateWithoutRegistrationsInput> | registration_commentsCreateWithoutRegistrationsInput[] | registration_commentsUncheckedCreateWithoutRegistrationsInput[]
    connectOrCreate?: registration_commentsCreateOrConnectWithoutRegistrationsInput | registration_commentsCreateOrConnectWithoutRegistrationsInput[]
    createMany?: registration_commentsCreateManyRegistrationsInputEnvelope
    connect?: registration_commentsWhereUniqueInput | registration_commentsWhereUniqueInput[]
  }

  export type registration_historyCreateNestedManyWithoutRegistrationsInput = {
    create?: XOR<registration_historyCreateWithoutRegistrationsInput, registration_historyUncheckedCreateWithoutRegistrationsInput> | registration_historyCreateWithoutRegistrationsInput[] | registration_historyUncheckedCreateWithoutRegistrationsInput[]
    connectOrCreate?: registration_historyCreateOrConnectWithoutRegistrationsInput | registration_historyCreateOrConnectWithoutRegistrationsInput[]
    createMany?: registration_historyCreateManyRegistrationsInputEnvelope
    connect?: registration_historyWhereUniqueInput | registration_historyWhereUniqueInput[]
  }

  export type VerificationDataUncheckedCreateNestedOneWithoutRegistrationInput = {
    create?: XOR<VerificationDataCreateWithoutRegistrationInput, VerificationDataUncheckedCreateWithoutRegistrationInput>
    connectOrCreate?: VerificationDataCreateOrConnectWithoutRegistrationInput
    connect?: VerificationDataWhereUniqueInput
  }

  export type document_uploadsUncheckedCreateNestedOneWithoutRegistrationsInput = {
    create?: XOR<document_uploadsCreateWithoutRegistrationsInput, document_uploadsUncheckedCreateWithoutRegistrationsInput>
    connectOrCreate?: document_uploadsCreateOrConnectWithoutRegistrationsInput
    connect?: document_uploadsWhereUniqueInput
  }

  export type employment_infoUncheckedCreateNestedOneWithoutRegistrationsInput = {
    create?: XOR<employment_infoCreateWithoutRegistrationsInput, employment_infoUncheckedCreateWithoutRegistrationsInput>
    connectOrCreate?: employment_infoCreateOrConnectWithoutRegistrationsInput
    connect?: employment_infoWhereUniqueInput
  }

  export type personal_infoUncheckedCreateNestedOneWithoutRegistrationsInput = {
    create?: XOR<personal_infoCreateWithoutRegistrationsInput, personal_infoUncheckedCreateWithoutRegistrationsInput>
    connectOrCreate?: personal_infoCreateOrConnectWithoutRegistrationsInput
    connect?: personal_infoWhereUniqueInput
  }

  export type registration_commentsUncheckedCreateNestedManyWithoutRegistrationsInput = {
    create?: XOR<registration_commentsCreateWithoutRegistrationsInput, registration_commentsUncheckedCreateWithoutRegistrationsInput> | registration_commentsCreateWithoutRegistrationsInput[] | registration_commentsUncheckedCreateWithoutRegistrationsInput[]
    connectOrCreate?: registration_commentsCreateOrConnectWithoutRegistrationsInput | registration_commentsCreateOrConnectWithoutRegistrationsInput[]
    createMany?: registration_commentsCreateManyRegistrationsInputEnvelope
    connect?: registration_commentsWhereUniqueInput | registration_commentsWhereUniqueInput[]
  }

  export type registration_historyUncheckedCreateNestedManyWithoutRegistrationsInput = {
    create?: XOR<registration_historyCreateWithoutRegistrationsInput, registration_historyUncheckedCreateWithoutRegistrationsInput> | registration_historyCreateWithoutRegistrationsInput[] | registration_historyUncheckedCreateWithoutRegistrationsInput[]
    connectOrCreate?: registration_historyCreateOrConnectWithoutRegistrationsInput | registration_historyCreateOrConnectWithoutRegistrationsInput[]
    createMany?: registration_historyCreateManyRegistrationsInputEnvelope
    connect?: registration_historyWhereUniqueInput | registration_historyWhereUniqueInput[]
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type VerificationDataUpdateOneWithoutRegistrationNestedInput = {
    create?: XOR<VerificationDataCreateWithoutRegistrationInput, VerificationDataUncheckedCreateWithoutRegistrationInput>
    connectOrCreate?: VerificationDataCreateOrConnectWithoutRegistrationInput
    upsert?: VerificationDataUpsertWithoutRegistrationInput
    disconnect?: VerificationDataWhereInput | boolean
    delete?: VerificationDataWhereInput | boolean
    connect?: VerificationDataWhereUniqueInput
    update?: XOR<XOR<VerificationDataUpdateToOneWithWhereWithoutRegistrationInput, VerificationDataUpdateWithoutRegistrationInput>, VerificationDataUncheckedUpdateWithoutRegistrationInput>
  }

  export type document_uploadsUpdateOneWithoutRegistrationsNestedInput = {
    create?: XOR<document_uploadsCreateWithoutRegistrationsInput, document_uploadsUncheckedCreateWithoutRegistrationsInput>
    connectOrCreate?: document_uploadsCreateOrConnectWithoutRegistrationsInput
    upsert?: document_uploadsUpsertWithoutRegistrationsInput
    disconnect?: document_uploadsWhereInput | boolean
    delete?: document_uploadsWhereInput | boolean
    connect?: document_uploadsWhereUniqueInput
    update?: XOR<XOR<document_uploadsUpdateToOneWithWhereWithoutRegistrationsInput, document_uploadsUpdateWithoutRegistrationsInput>, document_uploadsUncheckedUpdateWithoutRegistrationsInput>
  }

  export type employment_infoUpdateOneWithoutRegistrationsNestedInput = {
    create?: XOR<employment_infoCreateWithoutRegistrationsInput, employment_infoUncheckedCreateWithoutRegistrationsInput>
    connectOrCreate?: employment_infoCreateOrConnectWithoutRegistrationsInput
    upsert?: employment_infoUpsertWithoutRegistrationsInput
    disconnect?: employment_infoWhereInput | boolean
    delete?: employment_infoWhereInput | boolean
    connect?: employment_infoWhereUniqueInput
    update?: XOR<XOR<employment_infoUpdateToOneWithWhereWithoutRegistrationsInput, employment_infoUpdateWithoutRegistrationsInput>, employment_infoUncheckedUpdateWithoutRegistrationsInput>
  }

  export type personal_infoUpdateOneWithoutRegistrationsNestedInput = {
    create?: XOR<personal_infoCreateWithoutRegistrationsInput, personal_infoUncheckedCreateWithoutRegistrationsInput>
    connectOrCreate?: personal_infoCreateOrConnectWithoutRegistrationsInput
    upsert?: personal_infoUpsertWithoutRegistrationsInput
    disconnect?: personal_infoWhereInput | boolean
    delete?: personal_infoWhereInput | boolean
    connect?: personal_infoWhereUniqueInput
    update?: XOR<XOR<personal_infoUpdateToOneWithWhereWithoutRegistrationsInput, personal_infoUpdateWithoutRegistrationsInput>, personal_infoUncheckedUpdateWithoutRegistrationsInput>
  }

  export type registration_commentsUpdateManyWithoutRegistrationsNestedInput = {
    create?: XOR<registration_commentsCreateWithoutRegistrationsInput, registration_commentsUncheckedCreateWithoutRegistrationsInput> | registration_commentsCreateWithoutRegistrationsInput[] | registration_commentsUncheckedCreateWithoutRegistrationsInput[]
    connectOrCreate?: registration_commentsCreateOrConnectWithoutRegistrationsInput | registration_commentsCreateOrConnectWithoutRegistrationsInput[]
    upsert?: registration_commentsUpsertWithWhereUniqueWithoutRegistrationsInput | registration_commentsUpsertWithWhereUniqueWithoutRegistrationsInput[]
    createMany?: registration_commentsCreateManyRegistrationsInputEnvelope
    set?: registration_commentsWhereUniqueInput | registration_commentsWhereUniqueInput[]
    disconnect?: registration_commentsWhereUniqueInput | registration_commentsWhereUniqueInput[]
    delete?: registration_commentsWhereUniqueInput | registration_commentsWhereUniqueInput[]
    connect?: registration_commentsWhereUniqueInput | registration_commentsWhereUniqueInput[]
    update?: registration_commentsUpdateWithWhereUniqueWithoutRegistrationsInput | registration_commentsUpdateWithWhereUniqueWithoutRegistrationsInput[]
    updateMany?: registration_commentsUpdateManyWithWhereWithoutRegistrationsInput | registration_commentsUpdateManyWithWhereWithoutRegistrationsInput[]
    deleteMany?: registration_commentsScalarWhereInput | registration_commentsScalarWhereInput[]
  }

  export type registration_historyUpdateManyWithoutRegistrationsNestedInput = {
    create?: XOR<registration_historyCreateWithoutRegistrationsInput, registration_historyUncheckedCreateWithoutRegistrationsInput> | registration_historyCreateWithoutRegistrationsInput[] | registration_historyUncheckedCreateWithoutRegistrationsInput[]
    connectOrCreate?: registration_historyCreateOrConnectWithoutRegistrationsInput | registration_historyCreateOrConnectWithoutRegistrationsInput[]
    upsert?: registration_historyUpsertWithWhereUniqueWithoutRegistrationsInput | registration_historyUpsertWithWhereUniqueWithoutRegistrationsInput[]
    createMany?: registration_historyCreateManyRegistrationsInputEnvelope
    set?: registration_historyWhereUniqueInput | registration_historyWhereUniqueInput[]
    disconnect?: registration_historyWhereUniqueInput | registration_historyWhereUniqueInput[]
    delete?: registration_historyWhereUniqueInput | registration_historyWhereUniqueInput[]
    connect?: registration_historyWhereUniqueInput | registration_historyWhereUniqueInput[]
    update?: registration_historyUpdateWithWhereUniqueWithoutRegistrationsInput | registration_historyUpdateWithWhereUniqueWithoutRegistrationsInput[]
    updateMany?: registration_historyUpdateManyWithWhereWithoutRegistrationsInput | registration_historyUpdateManyWithWhereWithoutRegistrationsInput[]
    deleteMany?: registration_historyScalarWhereInput | registration_historyScalarWhereInput[]
  }

  export type VerificationDataUncheckedUpdateOneWithoutRegistrationNestedInput = {
    create?: XOR<VerificationDataCreateWithoutRegistrationInput, VerificationDataUncheckedCreateWithoutRegistrationInput>
    connectOrCreate?: VerificationDataCreateOrConnectWithoutRegistrationInput
    upsert?: VerificationDataUpsertWithoutRegistrationInput
    disconnect?: VerificationDataWhereInput | boolean
    delete?: VerificationDataWhereInput | boolean
    connect?: VerificationDataWhereUniqueInput
    update?: XOR<XOR<VerificationDataUpdateToOneWithWhereWithoutRegistrationInput, VerificationDataUpdateWithoutRegistrationInput>, VerificationDataUncheckedUpdateWithoutRegistrationInput>
  }

  export type document_uploadsUncheckedUpdateOneWithoutRegistrationsNestedInput = {
    create?: XOR<document_uploadsCreateWithoutRegistrationsInput, document_uploadsUncheckedCreateWithoutRegistrationsInput>
    connectOrCreate?: document_uploadsCreateOrConnectWithoutRegistrationsInput
    upsert?: document_uploadsUpsertWithoutRegistrationsInput
    disconnect?: document_uploadsWhereInput | boolean
    delete?: document_uploadsWhereInput | boolean
    connect?: document_uploadsWhereUniqueInput
    update?: XOR<XOR<document_uploadsUpdateToOneWithWhereWithoutRegistrationsInput, document_uploadsUpdateWithoutRegistrationsInput>, document_uploadsUncheckedUpdateWithoutRegistrationsInput>
  }

  export type employment_infoUncheckedUpdateOneWithoutRegistrationsNestedInput = {
    create?: XOR<employment_infoCreateWithoutRegistrationsInput, employment_infoUncheckedCreateWithoutRegistrationsInput>
    connectOrCreate?: employment_infoCreateOrConnectWithoutRegistrationsInput
    upsert?: employment_infoUpsertWithoutRegistrationsInput
    disconnect?: employment_infoWhereInput | boolean
    delete?: employment_infoWhereInput | boolean
    connect?: employment_infoWhereUniqueInput
    update?: XOR<XOR<employment_infoUpdateToOneWithWhereWithoutRegistrationsInput, employment_infoUpdateWithoutRegistrationsInput>, employment_infoUncheckedUpdateWithoutRegistrationsInput>
  }

  export type personal_infoUncheckedUpdateOneWithoutRegistrationsNestedInput = {
    create?: XOR<personal_infoCreateWithoutRegistrationsInput, personal_infoUncheckedCreateWithoutRegistrationsInput>
    connectOrCreate?: personal_infoCreateOrConnectWithoutRegistrationsInput
    upsert?: personal_infoUpsertWithoutRegistrationsInput
    disconnect?: personal_infoWhereInput | boolean
    delete?: personal_infoWhereInput | boolean
    connect?: personal_infoWhereUniqueInput
    update?: XOR<XOR<personal_infoUpdateToOneWithWhereWithoutRegistrationsInput, personal_infoUpdateWithoutRegistrationsInput>, personal_infoUncheckedUpdateWithoutRegistrationsInput>
  }

  export type registration_commentsUncheckedUpdateManyWithoutRegistrationsNestedInput = {
    create?: XOR<registration_commentsCreateWithoutRegistrationsInput, registration_commentsUncheckedCreateWithoutRegistrationsInput> | registration_commentsCreateWithoutRegistrationsInput[] | registration_commentsUncheckedCreateWithoutRegistrationsInput[]
    connectOrCreate?: registration_commentsCreateOrConnectWithoutRegistrationsInput | registration_commentsCreateOrConnectWithoutRegistrationsInput[]
    upsert?: registration_commentsUpsertWithWhereUniqueWithoutRegistrationsInput | registration_commentsUpsertWithWhereUniqueWithoutRegistrationsInput[]
    createMany?: registration_commentsCreateManyRegistrationsInputEnvelope
    set?: registration_commentsWhereUniqueInput | registration_commentsWhereUniqueInput[]
    disconnect?: registration_commentsWhereUniqueInput | registration_commentsWhereUniqueInput[]
    delete?: registration_commentsWhereUniqueInput | registration_commentsWhereUniqueInput[]
    connect?: registration_commentsWhereUniqueInput | registration_commentsWhereUniqueInput[]
    update?: registration_commentsUpdateWithWhereUniqueWithoutRegistrationsInput | registration_commentsUpdateWithWhereUniqueWithoutRegistrationsInput[]
    updateMany?: registration_commentsUpdateManyWithWhereWithoutRegistrationsInput | registration_commentsUpdateManyWithWhereWithoutRegistrationsInput[]
    deleteMany?: registration_commentsScalarWhereInput | registration_commentsScalarWhereInput[]
  }

  export type registration_historyUncheckedUpdateManyWithoutRegistrationsNestedInput = {
    create?: XOR<registration_historyCreateWithoutRegistrationsInput, registration_historyUncheckedCreateWithoutRegistrationsInput> | registration_historyCreateWithoutRegistrationsInput[] | registration_historyUncheckedCreateWithoutRegistrationsInput[]
    connectOrCreate?: registration_historyCreateOrConnectWithoutRegistrationsInput | registration_historyCreateOrConnectWithoutRegistrationsInput[]
    upsert?: registration_historyUpsertWithWhereUniqueWithoutRegistrationsInput | registration_historyUpsertWithWhereUniqueWithoutRegistrationsInput[]
    createMany?: registration_historyCreateManyRegistrationsInputEnvelope
    set?: registration_historyWhereUniqueInput | registration_historyWhereUniqueInput[]
    disconnect?: registration_historyWhereUniqueInput | registration_historyWhereUniqueInput[]
    delete?: registration_historyWhereUniqueInput | registration_historyWhereUniqueInput[]
    connect?: registration_historyWhereUniqueInput | registration_historyWhereUniqueInput[]
    update?: registration_historyUpdateWithWhereUniqueWithoutRegistrationsInput | registration_historyUpdateWithWhereUniqueWithoutRegistrationsInput[]
    updateMany?: registration_historyUpdateManyWithWhereWithoutRegistrationsInput | registration_historyUpdateManyWithWhereWithoutRegistrationsInput[]
    deleteMany?: registration_historyScalarWhereInput | registration_historyScalarWhereInput[]
  }

  export type registrationsCreateNestedOneWithoutVerificationDataInput = {
    create?: XOR<registrationsCreateWithoutVerificationDataInput, registrationsUncheckedCreateWithoutVerificationDataInput>
    connectOrCreate?: registrationsCreateOrConnectWithoutVerificationDataInput
    connect?: registrationsWhereUniqueInput
  }

  export type registrationsUpdateOneRequiredWithoutVerificationDataNestedInput = {
    create?: XOR<registrationsCreateWithoutVerificationDataInput, registrationsUncheckedCreateWithoutVerificationDataInput>
    connectOrCreate?: registrationsCreateOrConnectWithoutVerificationDataInput
    upsert?: registrationsUpsertWithoutVerificationDataInput
    connect?: registrationsWhereUniqueInput
    update?: XOR<XOR<registrationsUpdateToOneWithWhereWithoutVerificationDataInput, registrationsUpdateWithoutVerificationDataInput>, registrationsUncheckedUpdateWithoutVerificationDataInput>
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedUuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedUuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type admin_usersCreateWithoutAdmin_sessionsInput = {
    username: string
    email: string
    password_hash: string
    full_name: string
    role?: string
    is_active?: boolean
    last_login?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    dashboard_notifications?: dashboard_notificationsCreateNestedManyWithoutAdmin_usersInput
    dashboard_widgets?: dashboard_widgetsCreateNestedManyWithoutAdmin_usersInput
    password_reset_tokens?: password_reset_tokensCreateNestedOneWithoutAdmin_usersInput
  }

  export type admin_usersUncheckedCreateWithoutAdmin_sessionsInput = {
    id?: number
    username: string
    email: string
    password_hash: string
    full_name: string
    role?: string
    is_active?: boolean
    last_login?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    dashboard_notifications?: dashboard_notificationsUncheckedCreateNestedManyWithoutAdmin_usersInput
    dashboard_widgets?: dashboard_widgetsUncheckedCreateNestedManyWithoutAdmin_usersInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedOneWithoutAdmin_usersInput
  }

  export type admin_usersCreateOrConnectWithoutAdmin_sessionsInput = {
    where: admin_usersWhereUniqueInput
    create: XOR<admin_usersCreateWithoutAdmin_sessionsInput, admin_usersUncheckedCreateWithoutAdmin_sessionsInput>
  }

  export type admin_usersUpsertWithoutAdmin_sessionsInput = {
    update: XOR<admin_usersUpdateWithoutAdmin_sessionsInput, admin_usersUncheckedUpdateWithoutAdmin_sessionsInput>
    create: XOR<admin_usersCreateWithoutAdmin_sessionsInput, admin_usersUncheckedCreateWithoutAdmin_sessionsInput>
    where?: admin_usersWhereInput
  }

  export type admin_usersUpdateToOneWithWhereWithoutAdmin_sessionsInput = {
    where?: admin_usersWhereInput
    data: XOR<admin_usersUpdateWithoutAdmin_sessionsInput, admin_usersUncheckedUpdateWithoutAdmin_sessionsInput>
  }

  export type admin_usersUpdateWithoutAdmin_sessionsInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    dashboard_notifications?: dashboard_notificationsUpdateManyWithoutAdmin_usersNestedInput
    dashboard_widgets?: dashboard_widgetsUpdateManyWithoutAdmin_usersNestedInput
    password_reset_tokens?: password_reset_tokensUpdateOneWithoutAdmin_usersNestedInput
  }

  export type admin_usersUncheckedUpdateWithoutAdmin_sessionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    dashboard_notifications?: dashboard_notificationsUncheckedUpdateManyWithoutAdmin_usersNestedInput
    dashboard_widgets?: dashboard_widgetsUncheckedUpdateManyWithoutAdmin_usersNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateOneWithoutAdmin_usersNestedInput
  }

  export type admin_sessionsCreateWithoutAdmin_usersInput = {
    session_token: string
    expires_at: Date | string
    created_at?: Date | string
    ip_address?: string | null
    user_agent?: string | null
  }

  export type admin_sessionsUncheckedCreateWithoutAdmin_usersInput = {
    id?: number
    session_token: string
    expires_at: Date | string
    created_at?: Date | string
    ip_address?: string | null
    user_agent?: string | null
  }

  export type admin_sessionsCreateOrConnectWithoutAdmin_usersInput = {
    where: admin_sessionsWhereUniqueInput
    create: XOR<admin_sessionsCreateWithoutAdmin_usersInput, admin_sessionsUncheckedCreateWithoutAdmin_usersInput>
  }

  export type admin_sessionsCreateManyAdmin_usersInputEnvelope = {
    data: admin_sessionsCreateManyAdmin_usersInput | admin_sessionsCreateManyAdmin_usersInput[]
    skipDuplicates?: boolean
  }

  export type dashboard_notificationsCreateWithoutAdmin_usersInput = {
    title: string
    message: string
    type: string
    is_read?: boolean
    created_at?: Date | string
    expires_at?: Date | string | null
    action_url?: string | null
  }

  export type dashboard_notificationsUncheckedCreateWithoutAdmin_usersInput = {
    id?: number
    title: string
    message: string
    type: string
    is_read?: boolean
    created_at?: Date | string
    expires_at?: Date | string | null
    action_url?: string | null
  }

  export type dashboard_notificationsCreateOrConnectWithoutAdmin_usersInput = {
    where: dashboard_notificationsWhereUniqueInput
    create: XOR<dashboard_notificationsCreateWithoutAdmin_usersInput, dashboard_notificationsUncheckedCreateWithoutAdmin_usersInput>
  }

  export type dashboard_notificationsCreateManyAdmin_usersInputEnvelope = {
    data: dashboard_notificationsCreateManyAdmin_usersInput | dashboard_notificationsCreateManyAdmin_usersInput[]
    skipDuplicates?: boolean
  }

  export type dashboard_widgetsCreateWithoutAdmin_usersInput = {
    widget_type: string
    widget_position: number
    widget_size?: string
    widget_config?: JsonNullValueInput | InputJsonValue
    is_visible?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type dashboard_widgetsUncheckedCreateWithoutAdmin_usersInput = {
    id?: number
    widget_type: string
    widget_position: number
    widget_size?: string
    widget_config?: JsonNullValueInput | InputJsonValue
    is_visible?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type dashboard_widgetsCreateOrConnectWithoutAdmin_usersInput = {
    where: dashboard_widgetsWhereUniqueInput
    create: XOR<dashboard_widgetsCreateWithoutAdmin_usersInput, dashboard_widgetsUncheckedCreateWithoutAdmin_usersInput>
  }

  export type dashboard_widgetsCreateManyAdmin_usersInputEnvelope = {
    data: dashboard_widgetsCreateManyAdmin_usersInput | dashboard_widgetsCreateManyAdmin_usersInput[]
    skipDuplicates?: boolean
  }

  export type password_reset_tokensCreateWithoutAdmin_usersInput = {
    token: string
    expires_at: Date | string
    created_at?: Date | string
  }

  export type password_reset_tokensUncheckedCreateWithoutAdmin_usersInput = {
    id?: number
    token: string
    expires_at: Date | string
    created_at?: Date | string
  }

  export type password_reset_tokensCreateOrConnectWithoutAdmin_usersInput = {
    where: password_reset_tokensWhereUniqueInput
    create: XOR<password_reset_tokensCreateWithoutAdmin_usersInput, password_reset_tokensUncheckedCreateWithoutAdmin_usersInput>
  }

  export type admin_sessionsUpsertWithWhereUniqueWithoutAdmin_usersInput = {
    where: admin_sessionsWhereUniqueInput
    update: XOR<admin_sessionsUpdateWithoutAdmin_usersInput, admin_sessionsUncheckedUpdateWithoutAdmin_usersInput>
    create: XOR<admin_sessionsCreateWithoutAdmin_usersInput, admin_sessionsUncheckedCreateWithoutAdmin_usersInput>
  }

  export type admin_sessionsUpdateWithWhereUniqueWithoutAdmin_usersInput = {
    where: admin_sessionsWhereUniqueInput
    data: XOR<admin_sessionsUpdateWithoutAdmin_usersInput, admin_sessionsUncheckedUpdateWithoutAdmin_usersInput>
  }

  export type admin_sessionsUpdateManyWithWhereWithoutAdmin_usersInput = {
    where: admin_sessionsScalarWhereInput
    data: XOR<admin_sessionsUpdateManyMutationInput, admin_sessionsUncheckedUpdateManyWithoutAdmin_usersInput>
  }

  export type admin_sessionsScalarWhereInput = {
    AND?: admin_sessionsScalarWhereInput | admin_sessionsScalarWhereInput[]
    OR?: admin_sessionsScalarWhereInput[]
    NOT?: admin_sessionsScalarWhereInput | admin_sessionsScalarWhereInput[]
    id?: IntFilter<"admin_sessions"> | number
    admin_id?: IntFilter<"admin_sessions"> | number
    session_token?: StringFilter<"admin_sessions"> | string
    expires_at?: DateTimeFilter<"admin_sessions"> | Date | string
    created_at?: DateTimeFilter<"admin_sessions"> | Date | string
    ip_address?: StringNullableFilter<"admin_sessions"> | string | null
    user_agent?: StringNullableFilter<"admin_sessions"> | string | null
  }

  export type dashboard_notificationsUpsertWithWhereUniqueWithoutAdmin_usersInput = {
    where: dashboard_notificationsWhereUniqueInput
    update: XOR<dashboard_notificationsUpdateWithoutAdmin_usersInput, dashboard_notificationsUncheckedUpdateWithoutAdmin_usersInput>
    create: XOR<dashboard_notificationsCreateWithoutAdmin_usersInput, dashboard_notificationsUncheckedCreateWithoutAdmin_usersInput>
  }

  export type dashboard_notificationsUpdateWithWhereUniqueWithoutAdmin_usersInput = {
    where: dashboard_notificationsWhereUniqueInput
    data: XOR<dashboard_notificationsUpdateWithoutAdmin_usersInput, dashboard_notificationsUncheckedUpdateWithoutAdmin_usersInput>
  }

  export type dashboard_notificationsUpdateManyWithWhereWithoutAdmin_usersInput = {
    where: dashboard_notificationsScalarWhereInput
    data: XOR<dashboard_notificationsUpdateManyMutationInput, dashboard_notificationsUncheckedUpdateManyWithoutAdmin_usersInput>
  }

  export type dashboard_notificationsScalarWhereInput = {
    AND?: dashboard_notificationsScalarWhereInput | dashboard_notificationsScalarWhereInput[]
    OR?: dashboard_notificationsScalarWhereInput[]
    NOT?: dashboard_notificationsScalarWhereInput | dashboard_notificationsScalarWhereInput[]
    id?: IntFilter<"dashboard_notifications"> | number
    title?: StringFilter<"dashboard_notifications"> | string
    message?: StringFilter<"dashboard_notifications"> | string
    type?: StringFilter<"dashboard_notifications"> | string
    is_read?: BoolFilter<"dashboard_notifications"> | boolean
    recipient_id?: IntNullableFilter<"dashboard_notifications"> | number | null
    created_at?: DateTimeFilter<"dashboard_notifications"> | Date | string
    expires_at?: DateTimeNullableFilter<"dashboard_notifications"> | Date | string | null
    action_url?: StringNullableFilter<"dashboard_notifications"> | string | null
  }

  export type dashboard_widgetsUpsertWithWhereUniqueWithoutAdmin_usersInput = {
    where: dashboard_widgetsWhereUniqueInput
    update: XOR<dashboard_widgetsUpdateWithoutAdmin_usersInput, dashboard_widgetsUncheckedUpdateWithoutAdmin_usersInput>
    create: XOR<dashboard_widgetsCreateWithoutAdmin_usersInput, dashboard_widgetsUncheckedCreateWithoutAdmin_usersInput>
  }

  export type dashboard_widgetsUpdateWithWhereUniqueWithoutAdmin_usersInput = {
    where: dashboard_widgetsWhereUniqueInput
    data: XOR<dashboard_widgetsUpdateWithoutAdmin_usersInput, dashboard_widgetsUncheckedUpdateWithoutAdmin_usersInput>
  }

  export type dashboard_widgetsUpdateManyWithWhereWithoutAdmin_usersInput = {
    where: dashboard_widgetsScalarWhereInput
    data: XOR<dashboard_widgetsUpdateManyMutationInput, dashboard_widgetsUncheckedUpdateManyWithoutAdmin_usersInput>
  }

  export type dashboard_widgetsScalarWhereInput = {
    AND?: dashboard_widgetsScalarWhereInput | dashboard_widgetsScalarWhereInput[]
    OR?: dashboard_widgetsScalarWhereInput[]
    NOT?: dashboard_widgetsScalarWhereInput | dashboard_widgetsScalarWhereInput[]
    id?: IntFilter<"dashboard_widgets"> | number
    admin_id?: IntFilter<"dashboard_widgets"> | number
    widget_type?: StringFilter<"dashboard_widgets"> | string
    widget_position?: IntFilter<"dashboard_widgets"> | number
    widget_size?: StringFilter<"dashboard_widgets"> | string
    widget_config?: JsonFilter<"dashboard_widgets">
    is_visible?: BoolFilter<"dashboard_widgets"> | boolean
    created_at?: DateTimeFilter<"dashboard_widgets"> | Date | string
    updated_at?: DateTimeFilter<"dashboard_widgets"> | Date | string
  }

  export type password_reset_tokensUpsertWithoutAdmin_usersInput = {
    update: XOR<password_reset_tokensUpdateWithoutAdmin_usersInput, password_reset_tokensUncheckedUpdateWithoutAdmin_usersInput>
    create: XOR<password_reset_tokensCreateWithoutAdmin_usersInput, password_reset_tokensUncheckedCreateWithoutAdmin_usersInput>
    where?: password_reset_tokensWhereInput
  }

  export type password_reset_tokensUpdateToOneWithWhereWithoutAdmin_usersInput = {
    where?: password_reset_tokensWhereInput
    data: XOR<password_reset_tokensUpdateWithoutAdmin_usersInput, password_reset_tokensUncheckedUpdateWithoutAdmin_usersInput>
  }

  export type password_reset_tokensUpdateWithoutAdmin_usersInput = {
    token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type password_reset_tokensUncheckedUpdateWithoutAdmin_usersInput = {
    id?: IntFieldUpdateOperationsInput | number
    token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type admin_usersCreateWithoutDashboard_notificationsInput = {
    username: string
    email: string
    password_hash: string
    full_name: string
    role?: string
    is_active?: boolean
    last_login?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    admin_sessions?: admin_sessionsCreateNestedManyWithoutAdmin_usersInput
    dashboard_widgets?: dashboard_widgetsCreateNestedManyWithoutAdmin_usersInput
    password_reset_tokens?: password_reset_tokensCreateNestedOneWithoutAdmin_usersInput
  }

  export type admin_usersUncheckedCreateWithoutDashboard_notificationsInput = {
    id?: number
    username: string
    email: string
    password_hash: string
    full_name: string
    role?: string
    is_active?: boolean
    last_login?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    admin_sessions?: admin_sessionsUncheckedCreateNestedManyWithoutAdmin_usersInput
    dashboard_widgets?: dashboard_widgetsUncheckedCreateNestedManyWithoutAdmin_usersInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedOneWithoutAdmin_usersInput
  }

  export type admin_usersCreateOrConnectWithoutDashboard_notificationsInput = {
    where: admin_usersWhereUniqueInput
    create: XOR<admin_usersCreateWithoutDashboard_notificationsInput, admin_usersUncheckedCreateWithoutDashboard_notificationsInput>
  }

  export type admin_usersUpsertWithoutDashboard_notificationsInput = {
    update: XOR<admin_usersUpdateWithoutDashboard_notificationsInput, admin_usersUncheckedUpdateWithoutDashboard_notificationsInput>
    create: XOR<admin_usersCreateWithoutDashboard_notificationsInput, admin_usersUncheckedCreateWithoutDashboard_notificationsInput>
    where?: admin_usersWhereInput
  }

  export type admin_usersUpdateToOneWithWhereWithoutDashboard_notificationsInput = {
    where?: admin_usersWhereInput
    data: XOR<admin_usersUpdateWithoutDashboard_notificationsInput, admin_usersUncheckedUpdateWithoutDashboard_notificationsInput>
  }

  export type admin_usersUpdateWithoutDashboard_notificationsInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_sessions?: admin_sessionsUpdateManyWithoutAdmin_usersNestedInput
    dashboard_widgets?: dashboard_widgetsUpdateManyWithoutAdmin_usersNestedInput
    password_reset_tokens?: password_reset_tokensUpdateOneWithoutAdmin_usersNestedInput
  }

  export type admin_usersUncheckedUpdateWithoutDashboard_notificationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_sessions?: admin_sessionsUncheckedUpdateManyWithoutAdmin_usersNestedInput
    dashboard_widgets?: dashboard_widgetsUncheckedUpdateManyWithoutAdmin_usersNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateOneWithoutAdmin_usersNestedInput
  }

  export type admin_usersCreateWithoutDashboard_widgetsInput = {
    username: string
    email: string
    password_hash: string
    full_name: string
    role?: string
    is_active?: boolean
    last_login?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    admin_sessions?: admin_sessionsCreateNestedManyWithoutAdmin_usersInput
    dashboard_notifications?: dashboard_notificationsCreateNestedManyWithoutAdmin_usersInput
    password_reset_tokens?: password_reset_tokensCreateNestedOneWithoutAdmin_usersInput
  }

  export type admin_usersUncheckedCreateWithoutDashboard_widgetsInput = {
    id?: number
    username: string
    email: string
    password_hash: string
    full_name: string
    role?: string
    is_active?: boolean
    last_login?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    admin_sessions?: admin_sessionsUncheckedCreateNestedManyWithoutAdmin_usersInput
    dashboard_notifications?: dashboard_notificationsUncheckedCreateNestedManyWithoutAdmin_usersInput
    password_reset_tokens?: password_reset_tokensUncheckedCreateNestedOneWithoutAdmin_usersInput
  }

  export type admin_usersCreateOrConnectWithoutDashboard_widgetsInput = {
    where: admin_usersWhereUniqueInput
    create: XOR<admin_usersCreateWithoutDashboard_widgetsInput, admin_usersUncheckedCreateWithoutDashboard_widgetsInput>
  }

  export type admin_usersUpsertWithoutDashboard_widgetsInput = {
    update: XOR<admin_usersUpdateWithoutDashboard_widgetsInput, admin_usersUncheckedUpdateWithoutDashboard_widgetsInput>
    create: XOR<admin_usersCreateWithoutDashboard_widgetsInput, admin_usersUncheckedCreateWithoutDashboard_widgetsInput>
    where?: admin_usersWhereInput
  }

  export type admin_usersUpdateToOneWithWhereWithoutDashboard_widgetsInput = {
    where?: admin_usersWhereInput
    data: XOR<admin_usersUpdateWithoutDashboard_widgetsInput, admin_usersUncheckedUpdateWithoutDashboard_widgetsInput>
  }

  export type admin_usersUpdateWithoutDashboard_widgetsInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_sessions?: admin_sessionsUpdateManyWithoutAdmin_usersNestedInput
    dashboard_notifications?: dashboard_notificationsUpdateManyWithoutAdmin_usersNestedInput
    password_reset_tokens?: password_reset_tokensUpdateOneWithoutAdmin_usersNestedInput
  }

  export type admin_usersUncheckedUpdateWithoutDashboard_widgetsInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_sessions?: admin_sessionsUncheckedUpdateManyWithoutAdmin_usersNestedInput
    dashboard_notifications?: dashboard_notificationsUncheckedUpdateManyWithoutAdmin_usersNestedInput
    password_reset_tokens?: password_reset_tokensUncheckedUpdateOneWithoutAdmin_usersNestedInput
  }

  export type registrationsCreateWithoutDocument_uploadsInput = {
    registration_Id?: string
    nin?: string | null
    status?: string
    current_step?: string
    declaration?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    submitted_at?: Date | string | null
    approved_at?: Date | string | null
    rejected_at?: Date | string | null
    VerificationData?: VerificationDataCreateNestedOneWithoutRegistrationInput
    employment_info?: employment_infoCreateNestedOneWithoutRegistrationsInput
    personal_info?: personal_infoCreateNestedOneWithoutRegistrationsInput
    registration_comments?: registration_commentsCreateNestedManyWithoutRegistrationsInput
    registration_history?: registration_historyCreateNestedManyWithoutRegistrationsInput
  }

  export type registrationsUncheckedCreateWithoutDocument_uploadsInput = {
    id?: number
    registration_Id?: string
    nin?: string | null
    status?: string
    current_step?: string
    declaration?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    submitted_at?: Date | string | null
    approved_at?: Date | string | null
    rejected_at?: Date | string | null
    VerificationData?: VerificationDataUncheckedCreateNestedOneWithoutRegistrationInput
    employment_info?: employment_infoUncheckedCreateNestedOneWithoutRegistrationsInput
    personal_info?: personal_infoUncheckedCreateNestedOneWithoutRegistrationsInput
    registration_comments?: registration_commentsUncheckedCreateNestedManyWithoutRegistrationsInput
    registration_history?: registration_historyUncheckedCreateNestedManyWithoutRegistrationsInput
  }

  export type registrationsCreateOrConnectWithoutDocument_uploadsInput = {
    where: registrationsWhereUniqueInput
    create: XOR<registrationsCreateWithoutDocument_uploadsInput, registrationsUncheckedCreateWithoutDocument_uploadsInput>
  }

  export type registrationsUpsertWithoutDocument_uploadsInput = {
    update: XOR<registrationsUpdateWithoutDocument_uploadsInput, registrationsUncheckedUpdateWithoutDocument_uploadsInput>
    create: XOR<registrationsCreateWithoutDocument_uploadsInput, registrationsUncheckedCreateWithoutDocument_uploadsInput>
    where?: registrationsWhereInput
  }

  export type registrationsUpdateToOneWithWhereWithoutDocument_uploadsInput = {
    where?: registrationsWhereInput
    data: XOR<registrationsUpdateWithoutDocument_uploadsInput, registrationsUncheckedUpdateWithoutDocument_uploadsInput>
  }

  export type registrationsUpdateWithoutDocument_uploadsInput = {
    registration_Id?: StringFieldUpdateOperationsInput | string
    nin?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    current_step?: StringFieldUpdateOperationsInput | string
    declaration?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    submitted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rejected_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    VerificationData?: VerificationDataUpdateOneWithoutRegistrationNestedInput
    employment_info?: employment_infoUpdateOneWithoutRegistrationsNestedInput
    personal_info?: personal_infoUpdateOneWithoutRegistrationsNestedInput
    registration_comments?: registration_commentsUpdateManyWithoutRegistrationsNestedInput
    registration_history?: registration_historyUpdateManyWithoutRegistrationsNestedInput
  }

  export type registrationsUncheckedUpdateWithoutDocument_uploadsInput = {
    id?: IntFieldUpdateOperationsInput | number
    registration_Id?: StringFieldUpdateOperationsInput | string
    nin?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    current_step?: StringFieldUpdateOperationsInput | string
    declaration?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    submitted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rejected_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    VerificationData?: VerificationDataUncheckedUpdateOneWithoutRegistrationNestedInput
    employment_info?: employment_infoUncheckedUpdateOneWithoutRegistrationsNestedInput
    personal_info?: personal_infoUncheckedUpdateOneWithoutRegistrationsNestedInput
    registration_comments?: registration_commentsUncheckedUpdateManyWithoutRegistrationsNestedInput
    registration_history?: registration_historyUncheckedUpdateManyWithoutRegistrationsNestedInput
  }

  export type registrationsCreateWithoutEmployment_infoInput = {
    registration_Id?: string
    nin?: string | null
    status?: string
    current_step?: string
    declaration?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    submitted_at?: Date | string | null
    approved_at?: Date | string | null
    rejected_at?: Date | string | null
    VerificationData?: VerificationDataCreateNestedOneWithoutRegistrationInput
    document_uploads?: document_uploadsCreateNestedOneWithoutRegistrationsInput
    personal_info?: personal_infoCreateNestedOneWithoutRegistrationsInput
    registration_comments?: registration_commentsCreateNestedManyWithoutRegistrationsInput
    registration_history?: registration_historyCreateNestedManyWithoutRegistrationsInput
  }

  export type registrationsUncheckedCreateWithoutEmployment_infoInput = {
    id?: number
    registration_Id?: string
    nin?: string | null
    status?: string
    current_step?: string
    declaration?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    submitted_at?: Date | string | null
    approved_at?: Date | string | null
    rejected_at?: Date | string | null
    VerificationData?: VerificationDataUncheckedCreateNestedOneWithoutRegistrationInput
    document_uploads?: document_uploadsUncheckedCreateNestedOneWithoutRegistrationsInput
    personal_info?: personal_infoUncheckedCreateNestedOneWithoutRegistrationsInput
    registration_comments?: registration_commentsUncheckedCreateNestedManyWithoutRegistrationsInput
    registration_history?: registration_historyUncheckedCreateNestedManyWithoutRegistrationsInput
  }

  export type registrationsCreateOrConnectWithoutEmployment_infoInput = {
    where: registrationsWhereUniqueInput
    create: XOR<registrationsCreateWithoutEmployment_infoInput, registrationsUncheckedCreateWithoutEmployment_infoInput>
  }

  export type registrationsUpsertWithoutEmployment_infoInput = {
    update: XOR<registrationsUpdateWithoutEmployment_infoInput, registrationsUncheckedUpdateWithoutEmployment_infoInput>
    create: XOR<registrationsCreateWithoutEmployment_infoInput, registrationsUncheckedCreateWithoutEmployment_infoInput>
    where?: registrationsWhereInput
  }

  export type registrationsUpdateToOneWithWhereWithoutEmployment_infoInput = {
    where?: registrationsWhereInput
    data: XOR<registrationsUpdateWithoutEmployment_infoInput, registrationsUncheckedUpdateWithoutEmployment_infoInput>
  }

  export type registrationsUpdateWithoutEmployment_infoInput = {
    registration_Id?: StringFieldUpdateOperationsInput | string
    nin?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    current_step?: StringFieldUpdateOperationsInput | string
    declaration?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    submitted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rejected_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    VerificationData?: VerificationDataUpdateOneWithoutRegistrationNestedInput
    document_uploads?: document_uploadsUpdateOneWithoutRegistrationsNestedInput
    personal_info?: personal_infoUpdateOneWithoutRegistrationsNestedInput
    registration_comments?: registration_commentsUpdateManyWithoutRegistrationsNestedInput
    registration_history?: registration_historyUpdateManyWithoutRegistrationsNestedInput
  }

  export type registrationsUncheckedUpdateWithoutEmployment_infoInput = {
    id?: IntFieldUpdateOperationsInput | number
    registration_Id?: StringFieldUpdateOperationsInput | string
    nin?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    current_step?: StringFieldUpdateOperationsInput | string
    declaration?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    submitted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rejected_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    VerificationData?: VerificationDataUncheckedUpdateOneWithoutRegistrationNestedInput
    document_uploads?: document_uploadsUncheckedUpdateOneWithoutRegistrationsNestedInput
    personal_info?: personal_infoUncheckedUpdateOneWithoutRegistrationsNestedInput
    registration_comments?: registration_commentsUncheckedUpdateManyWithoutRegistrationsNestedInput
    registration_history?: registration_historyUncheckedUpdateManyWithoutRegistrationsNestedInput
  }

  export type admin_usersCreateWithoutPassword_reset_tokensInput = {
    username: string
    email: string
    password_hash: string
    full_name: string
    role?: string
    is_active?: boolean
    last_login?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    admin_sessions?: admin_sessionsCreateNestedManyWithoutAdmin_usersInput
    dashboard_notifications?: dashboard_notificationsCreateNestedManyWithoutAdmin_usersInput
    dashboard_widgets?: dashboard_widgetsCreateNestedManyWithoutAdmin_usersInput
  }

  export type admin_usersUncheckedCreateWithoutPassword_reset_tokensInput = {
    id?: number
    username: string
    email: string
    password_hash: string
    full_name: string
    role?: string
    is_active?: boolean
    last_login?: Date | string | null
    created_at?: Date | string
    updated_at?: Date | string
    admin_sessions?: admin_sessionsUncheckedCreateNestedManyWithoutAdmin_usersInput
    dashboard_notifications?: dashboard_notificationsUncheckedCreateNestedManyWithoutAdmin_usersInput
    dashboard_widgets?: dashboard_widgetsUncheckedCreateNestedManyWithoutAdmin_usersInput
  }

  export type admin_usersCreateOrConnectWithoutPassword_reset_tokensInput = {
    where: admin_usersWhereUniqueInput
    create: XOR<admin_usersCreateWithoutPassword_reset_tokensInput, admin_usersUncheckedCreateWithoutPassword_reset_tokensInput>
  }

  export type admin_usersUpsertWithoutPassword_reset_tokensInput = {
    update: XOR<admin_usersUpdateWithoutPassword_reset_tokensInput, admin_usersUncheckedUpdateWithoutPassword_reset_tokensInput>
    create: XOR<admin_usersCreateWithoutPassword_reset_tokensInput, admin_usersUncheckedCreateWithoutPassword_reset_tokensInput>
    where?: admin_usersWhereInput
  }

  export type admin_usersUpdateToOneWithWhereWithoutPassword_reset_tokensInput = {
    where?: admin_usersWhereInput
    data: XOR<admin_usersUpdateWithoutPassword_reset_tokensInput, admin_usersUncheckedUpdateWithoutPassword_reset_tokensInput>
  }

  export type admin_usersUpdateWithoutPassword_reset_tokensInput = {
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_sessions?: admin_sessionsUpdateManyWithoutAdmin_usersNestedInput
    dashboard_notifications?: dashboard_notificationsUpdateManyWithoutAdmin_usersNestedInput
    dashboard_widgets?: dashboard_widgetsUpdateManyWithoutAdmin_usersNestedInput
  }

  export type admin_usersUncheckedUpdateWithoutPassword_reset_tokensInput = {
    id?: IntFieldUpdateOperationsInput | number
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password_hash?: StringFieldUpdateOperationsInput | string
    full_name?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    last_login?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    admin_sessions?: admin_sessionsUncheckedUpdateManyWithoutAdmin_usersNestedInput
    dashboard_notifications?: dashboard_notificationsUncheckedUpdateManyWithoutAdmin_usersNestedInput
    dashboard_widgets?: dashboard_widgetsUncheckedUpdateManyWithoutAdmin_usersNestedInput
  }

  export type registrationsCreateWithoutPersonal_infoInput = {
    registration_Id?: string
    nin?: string | null
    status?: string
    current_step?: string
    declaration?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    submitted_at?: Date | string | null
    approved_at?: Date | string | null
    rejected_at?: Date | string | null
    VerificationData?: VerificationDataCreateNestedOneWithoutRegistrationInput
    document_uploads?: document_uploadsCreateNestedOneWithoutRegistrationsInput
    employment_info?: employment_infoCreateNestedOneWithoutRegistrationsInput
    registration_comments?: registration_commentsCreateNestedManyWithoutRegistrationsInput
    registration_history?: registration_historyCreateNestedManyWithoutRegistrationsInput
  }

  export type registrationsUncheckedCreateWithoutPersonal_infoInput = {
    id?: number
    registration_Id?: string
    nin?: string | null
    status?: string
    current_step?: string
    declaration?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    submitted_at?: Date | string | null
    approved_at?: Date | string | null
    rejected_at?: Date | string | null
    VerificationData?: VerificationDataUncheckedCreateNestedOneWithoutRegistrationInput
    document_uploads?: document_uploadsUncheckedCreateNestedOneWithoutRegistrationsInput
    employment_info?: employment_infoUncheckedCreateNestedOneWithoutRegistrationsInput
    registration_comments?: registration_commentsUncheckedCreateNestedManyWithoutRegistrationsInput
    registration_history?: registration_historyUncheckedCreateNestedManyWithoutRegistrationsInput
  }

  export type registrationsCreateOrConnectWithoutPersonal_infoInput = {
    where: registrationsWhereUniqueInput
    create: XOR<registrationsCreateWithoutPersonal_infoInput, registrationsUncheckedCreateWithoutPersonal_infoInput>
  }

  export type registrationsUpsertWithoutPersonal_infoInput = {
    update: XOR<registrationsUpdateWithoutPersonal_infoInput, registrationsUncheckedUpdateWithoutPersonal_infoInput>
    create: XOR<registrationsCreateWithoutPersonal_infoInput, registrationsUncheckedCreateWithoutPersonal_infoInput>
    where?: registrationsWhereInput
  }

  export type registrationsUpdateToOneWithWhereWithoutPersonal_infoInput = {
    where?: registrationsWhereInput
    data: XOR<registrationsUpdateWithoutPersonal_infoInput, registrationsUncheckedUpdateWithoutPersonal_infoInput>
  }

  export type registrationsUpdateWithoutPersonal_infoInput = {
    registration_Id?: StringFieldUpdateOperationsInput | string
    nin?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    current_step?: StringFieldUpdateOperationsInput | string
    declaration?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    submitted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rejected_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    VerificationData?: VerificationDataUpdateOneWithoutRegistrationNestedInput
    document_uploads?: document_uploadsUpdateOneWithoutRegistrationsNestedInput
    employment_info?: employment_infoUpdateOneWithoutRegistrationsNestedInput
    registration_comments?: registration_commentsUpdateManyWithoutRegistrationsNestedInput
    registration_history?: registration_historyUpdateManyWithoutRegistrationsNestedInput
  }

  export type registrationsUncheckedUpdateWithoutPersonal_infoInput = {
    id?: IntFieldUpdateOperationsInput | number
    registration_Id?: StringFieldUpdateOperationsInput | string
    nin?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    current_step?: StringFieldUpdateOperationsInput | string
    declaration?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    submitted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rejected_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    VerificationData?: VerificationDataUncheckedUpdateOneWithoutRegistrationNestedInput
    document_uploads?: document_uploadsUncheckedUpdateOneWithoutRegistrationsNestedInput
    employment_info?: employment_infoUncheckedUpdateOneWithoutRegistrationsNestedInput
    registration_comments?: registration_commentsUncheckedUpdateManyWithoutRegistrationsNestedInput
    registration_history?: registration_historyUncheckedUpdateManyWithoutRegistrationsNestedInput
  }

  export type registrationsCreateWithoutRegistration_commentsInput = {
    registration_Id?: string
    nin?: string | null
    status?: string
    current_step?: string
    declaration?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    submitted_at?: Date | string | null
    approved_at?: Date | string | null
    rejected_at?: Date | string | null
    VerificationData?: VerificationDataCreateNestedOneWithoutRegistrationInput
    document_uploads?: document_uploadsCreateNestedOneWithoutRegistrationsInput
    employment_info?: employment_infoCreateNestedOneWithoutRegistrationsInput
    personal_info?: personal_infoCreateNestedOneWithoutRegistrationsInput
    registration_history?: registration_historyCreateNestedManyWithoutRegistrationsInput
  }

  export type registrationsUncheckedCreateWithoutRegistration_commentsInput = {
    id?: number
    registration_Id?: string
    nin?: string | null
    status?: string
    current_step?: string
    declaration?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    submitted_at?: Date | string | null
    approved_at?: Date | string | null
    rejected_at?: Date | string | null
    VerificationData?: VerificationDataUncheckedCreateNestedOneWithoutRegistrationInput
    document_uploads?: document_uploadsUncheckedCreateNestedOneWithoutRegistrationsInput
    employment_info?: employment_infoUncheckedCreateNestedOneWithoutRegistrationsInput
    personal_info?: personal_infoUncheckedCreateNestedOneWithoutRegistrationsInput
    registration_history?: registration_historyUncheckedCreateNestedManyWithoutRegistrationsInput
  }

  export type registrationsCreateOrConnectWithoutRegistration_commentsInput = {
    where: registrationsWhereUniqueInput
    create: XOR<registrationsCreateWithoutRegistration_commentsInput, registrationsUncheckedCreateWithoutRegistration_commentsInput>
  }

  export type registrationsUpsertWithoutRegistration_commentsInput = {
    update: XOR<registrationsUpdateWithoutRegistration_commentsInput, registrationsUncheckedUpdateWithoutRegistration_commentsInput>
    create: XOR<registrationsCreateWithoutRegistration_commentsInput, registrationsUncheckedCreateWithoutRegistration_commentsInput>
    where?: registrationsWhereInput
  }

  export type registrationsUpdateToOneWithWhereWithoutRegistration_commentsInput = {
    where?: registrationsWhereInput
    data: XOR<registrationsUpdateWithoutRegistration_commentsInput, registrationsUncheckedUpdateWithoutRegistration_commentsInput>
  }

  export type registrationsUpdateWithoutRegistration_commentsInput = {
    registration_Id?: StringFieldUpdateOperationsInput | string
    nin?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    current_step?: StringFieldUpdateOperationsInput | string
    declaration?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    submitted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rejected_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    VerificationData?: VerificationDataUpdateOneWithoutRegistrationNestedInput
    document_uploads?: document_uploadsUpdateOneWithoutRegistrationsNestedInput
    employment_info?: employment_infoUpdateOneWithoutRegistrationsNestedInput
    personal_info?: personal_infoUpdateOneWithoutRegistrationsNestedInput
    registration_history?: registration_historyUpdateManyWithoutRegistrationsNestedInput
  }

  export type registrationsUncheckedUpdateWithoutRegistration_commentsInput = {
    id?: IntFieldUpdateOperationsInput | number
    registration_Id?: StringFieldUpdateOperationsInput | string
    nin?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    current_step?: StringFieldUpdateOperationsInput | string
    declaration?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    submitted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rejected_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    VerificationData?: VerificationDataUncheckedUpdateOneWithoutRegistrationNestedInput
    document_uploads?: document_uploadsUncheckedUpdateOneWithoutRegistrationsNestedInput
    employment_info?: employment_infoUncheckedUpdateOneWithoutRegistrationsNestedInput
    personal_info?: personal_infoUncheckedUpdateOneWithoutRegistrationsNestedInput
    registration_history?: registration_historyUncheckedUpdateManyWithoutRegistrationsNestedInput
  }

  export type registrationsCreateWithoutRegistration_historyInput = {
    registration_Id?: string
    nin?: string | null
    status?: string
    current_step?: string
    declaration?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    submitted_at?: Date | string | null
    approved_at?: Date | string | null
    rejected_at?: Date | string | null
    VerificationData?: VerificationDataCreateNestedOneWithoutRegistrationInput
    document_uploads?: document_uploadsCreateNestedOneWithoutRegistrationsInput
    employment_info?: employment_infoCreateNestedOneWithoutRegistrationsInput
    personal_info?: personal_infoCreateNestedOneWithoutRegistrationsInput
    registration_comments?: registration_commentsCreateNestedManyWithoutRegistrationsInput
  }

  export type registrationsUncheckedCreateWithoutRegistration_historyInput = {
    id?: number
    registration_Id?: string
    nin?: string | null
    status?: string
    current_step?: string
    declaration?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    submitted_at?: Date | string | null
    approved_at?: Date | string | null
    rejected_at?: Date | string | null
    VerificationData?: VerificationDataUncheckedCreateNestedOneWithoutRegistrationInput
    document_uploads?: document_uploadsUncheckedCreateNestedOneWithoutRegistrationsInput
    employment_info?: employment_infoUncheckedCreateNestedOneWithoutRegistrationsInput
    personal_info?: personal_infoUncheckedCreateNestedOneWithoutRegistrationsInput
    registration_comments?: registration_commentsUncheckedCreateNestedManyWithoutRegistrationsInput
  }

  export type registrationsCreateOrConnectWithoutRegistration_historyInput = {
    where: registrationsWhereUniqueInput
    create: XOR<registrationsCreateWithoutRegistration_historyInput, registrationsUncheckedCreateWithoutRegistration_historyInput>
  }

  export type registrationsUpsertWithoutRegistration_historyInput = {
    update: XOR<registrationsUpdateWithoutRegistration_historyInput, registrationsUncheckedUpdateWithoutRegistration_historyInput>
    create: XOR<registrationsCreateWithoutRegistration_historyInput, registrationsUncheckedCreateWithoutRegistration_historyInput>
    where?: registrationsWhereInput
  }

  export type registrationsUpdateToOneWithWhereWithoutRegistration_historyInput = {
    where?: registrationsWhereInput
    data: XOR<registrationsUpdateWithoutRegistration_historyInput, registrationsUncheckedUpdateWithoutRegistration_historyInput>
  }

  export type registrationsUpdateWithoutRegistration_historyInput = {
    registration_Id?: StringFieldUpdateOperationsInput | string
    nin?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    current_step?: StringFieldUpdateOperationsInput | string
    declaration?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    submitted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rejected_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    VerificationData?: VerificationDataUpdateOneWithoutRegistrationNestedInput
    document_uploads?: document_uploadsUpdateOneWithoutRegistrationsNestedInput
    employment_info?: employment_infoUpdateOneWithoutRegistrationsNestedInput
    personal_info?: personal_infoUpdateOneWithoutRegistrationsNestedInput
    registration_comments?: registration_commentsUpdateManyWithoutRegistrationsNestedInput
  }

  export type registrationsUncheckedUpdateWithoutRegistration_historyInput = {
    id?: IntFieldUpdateOperationsInput | number
    registration_Id?: StringFieldUpdateOperationsInput | string
    nin?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    current_step?: StringFieldUpdateOperationsInput | string
    declaration?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    submitted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rejected_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    VerificationData?: VerificationDataUncheckedUpdateOneWithoutRegistrationNestedInput
    document_uploads?: document_uploadsUncheckedUpdateOneWithoutRegistrationsNestedInput
    employment_info?: employment_infoUncheckedUpdateOneWithoutRegistrationsNestedInput
    personal_info?: personal_infoUncheckedUpdateOneWithoutRegistrationsNestedInput
    registration_comments?: registration_commentsUncheckedUpdateManyWithoutRegistrationsNestedInput
  }

  export type VerificationDataCreateWithoutRegistrationInput = {
    id?: string
    nin?: string | null
    vnin?: string | null
    title?: string | null
    surname?: string | null
    email?: string | null
    gender?: string | null
    state_of_origin?: string | null
    religion?: string | null
    profession?: string | null
    residence_address?: string | null
    residence_lga?: string | null
    residence_state?: string | null
    nok_surname?: string | null
    nok_lga?: string | null
    nok_state?: string | null
    nok_town?: string | null
    maiden_name?: string | null
    tracking_id?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    birthcountry?: string | null
    birthdate?: string | null
    birthlga?: string | null
    birthstate?: string | null
    central_iD?: string | null
    educationallevel?: string | null
    employmentstatus?: string | null
    firstname?: string | null
    heigth?: string | null
    lga_origin?: string | null
    maritalstatus?: string | null
    middlename?: string | null
    nok_address1?: string | null
    nok_address2?: string | null
    nok_firstname?: string | null
    nok_middlename?: string | null
    nok_postalcode?: string | null
    nspokenlang?: string | null
    ospokenlang?: string | null
    pfirstname?: string | null
    photo?: string | null
    pmiddlename?: string | null
    psurname?: string | null
    residence_AdressLine1?: string | null
    residence_Town?: string | null
    residencestatus?: string | null
    self_origin_lga?: string | null
    self_origin_place?: string | null
    self_origin_state?: string | null
    signature?: string | null
    spoken_language?: string | null
    telephoneno?: string | null
    userid?: string | null
  }

  export type VerificationDataUncheckedCreateWithoutRegistrationInput = {
    id?: string
    nin?: string | null
    vnin?: string | null
    title?: string | null
    surname?: string | null
    email?: string | null
    gender?: string | null
    state_of_origin?: string | null
    religion?: string | null
    profession?: string | null
    residence_address?: string | null
    residence_lga?: string | null
    residence_state?: string | null
    nok_surname?: string | null
    nok_lga?: string | null
    nok_state?: string | null
    nok_town?: string | null
    maiden_name?: string | null
    tracking_id?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    birthcountry?: string | null
    birthdate?: string | null
    birthlga?: string | null
    birthstate?: string | null
    central_iD?: string | null
    educationallevel?: string | null
    employmentstatus?: string | null
    firstname?: string | null
    heigth?: string | null
    lga_origin?: string | null
    maritalstatus?: string | null
    middlename?: string | null
    nok_address1?: string | null
    nok_address2?: string | null
    nok_firstname?: string | null
    nok_middlename?: string | null
    nok_postalcode?: string | null
    nspokenlang?: string | null
    ospokenlang?: string | null
    pfirstname?: string | null
    photo?: string | null
    pmiddlename?: string | null
    psurname?: string | null
    residence_AdressLine1?: string | null
    residence_Town?: string | null
    residencestatus?: string | null
    self_origin_lga?: string | null
    self_origin_place?: string | null
    self_origin_state?: string | null
    signature?: string | null
    spoken_language?: string | null
    telephoneno?: string | null
    userid?: string | null
  }

  export type VerificationDataCreateOrConnectWithoutRegistrationInput = {
    where: VerificationDataWhereUniqueInput
    create: XOR<VerificationDataCreateWithoutRegistrationInput, VerificationDataUncheckedCreateWithoutRegistrationInput>
  }

  export type document_uploadsCreateWithoutRegistrationsInput = {
    appointment_letter_path: string
    educational_certificates_path: string
    promotion_letter_path?: string | null
    other_documents_path?: string | null
    profile_image_path: string
    signature_path: string
    upload_date?: Date | string
    status?: string | null
  }

  export type document_uploadsUncheckedCreateWithoutRegistrationsInput = {
    id?: number
    appointment_letter_path: string
    educational_certificates_path: string
    promotion_letter_path?: string | null
    other_documents_path?: string | null
    profile_image_path: string
    signature_path: string
    upload_date?: Date | string
    status?: string | null
  }

  export type document_uploadsCreateOrConnectWithoutRegistrationsInput = {
    where: document_uploadsWhereUniqueInput
    create: XOR<document_uploadsCreateWithoutRegistrationsInput, document_uploadsUncheckedCreateWithoutRegistrationsInput>
  }

  export type employment_infoCreateWithoutRegistrationsInput = {
    employment_id_no: string
    service_no: string
    file_no: string
    rank_position: string
    department: string
    organization: string
    employment_type: string
    probation_period: string
    work_location: string
    date_of_first_appointment: Date | string
    gl: string
    step: string
    salary_structure: string
    cadre: string
    name_of_bank: string
    account_number: string
    pfa_name: string
    rsapin: string
    educational_background?: string | null
    certifications?: string | null
  }

  export type employment_infoUncheckedCreateWithoutRegistrationsInput = {
    id?: number
    employment_id_no: string
    service_no: string
    file_no: string
    rank_position: string
    department: string
    organization: string
    employment_type: string
    probation_period: string
    work_location: string
    date_of_first_appointment: Date | string
    gl: string
    step: string
    salary_structure: string
    cadre: string
    name_of_bank: string
    account_number: string
    pfa_name: string
    rsapin: string
    educational_background?: string | null
    certifications?: string | null
  }

  export type employment_infoCreateOrConnectWithoutRegistrationsInput = {
    where: employment_infoWhereUniqueInput
    create: XOR<employment_infoCreateWithoutRegistrationsInput, employment_infoUncheckedCreateWithoutRegistrationsInput>
  }

  export type personal_infoCreateWithoutRegistrationsInput = {
    title: string
    surname: string
    first_name: string
    other_names?: string | null
    phone_number: string
    email: string
    date_of_birth: Date | string
    sex: string
    marital_status: string
    state_of_origin: string
    lga: string
    state_of_residence: string
    address_state_of_residence: string
    next_of_kin_name: string
    next_of_kin_relationship: string
    next_of_kin_phone_number: string
    next_of_kin_address: string
  }

  export type personal_infoUncheckedCreateWithoutRegistrationsInput = {
    id?: number
    title: string
    surname: string
    first_name: string
    other_names?: string | null
    phone_number: string
    email: string
    date_of_birth: Date | string
    sex: string
    marital_status: string
    state_of_origin: string
    lga: string
    state_of_residence: string
    address_state_of_residence: string
    next_of_kin_name: string
    next_of_kin_relationship: string
    next_of_kin_phone_number: string
    next_of_kin_address: string
  }

  export type personal_infoCreateOrConnectWithoutRegistrationsInput = {
    where: personal_infoWhereUniqueInput
    create: XOR<personal_infoCreateWithoutRegistrationsInput, personal_infoUncheckedCreateWithoutRegistrationsInput>
  }

  export type registration_commentsCreateWithoutRegistrationsInput = {
    comment_text: string
    author?: string | null
    created_at?: Date | string
  }

  export type registration_commentsUncheckedCreateWithoutRegistrationsInput = {
    id?: number
    comment_text: string
    author?: string | null
    created_at?: Date | string
  }

  export type registration_commentsCreateOrConnectWithoutRegistrationsInput = {
    where: registration_commentsWhereUniqueInput
    create: XOR<registration_commentsCreateWithoutRegistrationsInput, registration_commentsUncheckedCreateWithoutRegistrationsInput>
  }

  export type registration_commentsCreateManyRegistrationsInputEnvelope = {
    data: registration_commentsCreateManyRegistrationsInput | registration_commentsCreateManyRegistrationsInput[]
    skipDuplicates?: boolean
  }

  export type registration_historyCreateWithoutRegistrationsInput = {
    action: string
    details?: string | null
    performed_by?: string | null
    performed_at?: Date | string
  }

  export type registration_historyUncheckedCreateWithoutRegistrationsInput = {
    id?: number
    action: string
    details?: string | null
    performed_by?: string | null
    performed_at?: Date | string
  }

  export type registration_historyCreateOrConnectWithoutRegistrationsInput = {
    where: registration_historyWhereUniqueInput
    create: XOR<registration_historyCreateWithoutRegistrationsInput, registration_historyUncheckedCreateWithoutRegistrationsInput>
  }

  export type registration_historyCreateManyRegistrationsInputEnvelope = {
    data: registration_historyCreateManyRegistrationsInput | registration_historyCreateManyRegistrationsInput[]
    skipDuplicates?: boolean
  }

  export type VerificationDataUpsertWithoutRegistrationInput = {
    update: XOR<VerificationDataUpdateWithoutRegistrationInput, VerificationDataUncheckedUpdateWithoutRegistrationInput>
    create: XOR<VerificationDataCreateWithoutRegistrationInput, VerificationDataUncheckedCreateWithoutRegistrationInput>
    where?: VerificationDataWhereInput
  }

  export type VerificationDataUpdateToOneWithWhereWithoutRegistrationInput = {
    where?: VerificationDataWhereInput
    data: XOR<VerificationDataUpdateWithoutRegistrationInput, VerificationDataUncheckedUpdateWithoutRegistrationInput>
  }

  export type VerificationDataUpdateWithoutRegistrationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nin?: NullableStringFieldUpdateOperationsInput | string | null
    vnin?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    surname?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    state_of_origin?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: NullableStringFieldUpdateOperationsInput | string | null
    residence_address?: NullableStringFieldUpdateOperationsInput | string | null
    residence_lga?: NullableStringFieldUpdateOperationsInput | string | null
    residence_state?: NullableStringFieldUpdateOperationsInput | string | null
    nok_surname?: NullableStringFieldUpdateOperationsInput | string | null
    nok_lga?: NullableStringFieldUpdateOperationsInput | string | null
    nok_state?: NullableStringFieldUpdateOperationsInput | string | null
    nok_town?: NullableStringFieldUpdateOperationsInput | string | null
    maiden_name?: NullableStringFieldUpdateOperationsInput | string | null
    tracking_id?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    birthcountry?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    birthlga?: NullableStringFieldUpdateOperationsInput | string | null
    birthstate?: NullableStringFieldUpdateOperationsInput | string | null
    central_iD?: NullableStringFieldUpdateOperationsInput | string | null
    educationallevel?: NullableStringFieldUpdateOperationsInput | string | null
    employmentstatus?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    heigth?: NullableStringFieldUpdateOperationsInput | string | null
    lga_origin?: NullableStringFieldUpdateOperationsInput | string | null
    maritalstatus?: NullableStringFieldUpdateOperationsInput | string | null
    middlename?: NullableStringFieldUpdateOperationsInput | string | null
    nok_address1?: NullableStringFieldUpdateOperationsInput | string | null
    nok_address2?: NullableStringFieldUpdateOperationsInput | string | null
    nok_firstname?: NullableStringFieldUpdateOperationsInput | string | null
    nok_middlename?: NullableStringFieldUpdateOperationsInput | string | null
    nok_postalcode?: NullableStringFieldUpdateOperationsInput | string | null
    nspokenlang?: NullableStringFieldUpdateOperationsInput | string | null
    ospokenlang?: NullableStringFieldUpdateOperationsInput | string | null
    pfirstname?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    pmiddlename?: NullableStringFieldUpdateOperationsInput | string | null
    psurname?: NullableStringFieldUpdateOperationsInput | string | null
    residence_AdressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    residence_Town?: NullableStringFieldUpdateOperationsInput | string | null
    residencestatus?: NullableStringFieldUpdateOperationsInput | string | null
    self_origin_lga?: NullableStringFieldUpdateOperationsInput | string | null
    self_origin_place?: NullableStringFieldUpdateOperationsInput | string | null
    self_origin_state?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    spoken_language?: NullableStringFieldUpdateOperationsInput | string | null
    telephoneno?: NullableStringFieldUpdateOperationsInput | string | null
    userid?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type VerificationDataUncheckedUpdateWithoutRegistrationInput = {
    id?: StringFieldUpdateOperationsInput | string
    nin?: NullableStringFieldUpdateOperationsInput | string | null
    vnin?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    surname?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    gender?: NullableStringFieldUpdateOperationsInput | string | null
    state_of_origin?: NullableStringFieldUpdateOperationsInput | string | null
    religion?: NullableStringFieldUpdateOperationsInput | string | null
    profession?: NullableStringFieldUpdateOperationsInput | string | null
    residence_address?: NullableStringFieldUpdateOperationsInput | string | null
    residence_lga?: NullableStringFieldUpdateOperationsInput | string | null
    residence_state?: NullableStringFieldUpdateOperationsInput | string | null
    nok_surname?: NullableStringFieldUpdateOperationsInput | string | null
    nok_lga?: NullableStringFieldUpdateOperationsInput | string | null
    nok_state?: NullableStringFieldUpdateOperationsInput | string | null
    nok_town?: NullableStringFieldUpdateOperationsInput | string | null
    maiden_name?: NullableStringFieldUpdateOperationsInput | string | null
    tracking_id?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    birthcountry?: NullableStringFieldUpdateOperationsInput | string | null
    birthdate?: NullableStringFieldUpdateOperationsInput | string | null
    birthlga?: NullableStringFieldUpdateOperationsInput | string | null
    birthstate?: NullableStringFieldUpdateOperationsInput | string | null
    central_iD?: NullableStringFieldUpdateOperationsInput | string | null
    educationallevel?: NullableStringFieldUpdateOperationsInput | string | null
    employmentstatus?: NullableStringFieldUpdateOperationsInput | string | null
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    heigth?: NullableStringFieldUpdateOperationsInput | string | null
    lga_origin?: NullableStringFieldUpdateOperationsInput | string | null
    maritalstatus?: NullableStringFieldUpdateOperationsInput | string | null
    middlename?: NullableStringFieldUpdateOperationsInput | string | null
    nok_address1?: NullableStringFieldUpdateOperationsInput | string | null
    nok_address2?: NullableStringFieldUpdateOperationsInput | string | null
    nok_firstname?: NullableStringFieldUpdateOperationsInput | string | null
    nok_middlename?: NullableStringFieldUpdateOperationsInput | string | null
    nok_postalcode?: NullableStringFieldUpdateOperationsInput | string | null
    nspokenlang?: NullableStringFieldUpdateOperationsInput | string | null
    ospokenlang?: NullableStringFieldUpdateOperationsInput | string | null
    pfirstname?: NullableStringFieldUpdateOperationsInput | string | null
    photo?: NullableStringFieldUpdateOperationsInput | string | null
    pmiddlename?: NullableStringFieldUpdateOperationsInput | string | null
    psurname?: NullableStringFieldUpdateOperationsInput | string | null
    residence_AdressLine1?: NullableStringFieldUpdateOperationsInput | string | null
    residence_Town?: NullableStringFieldUpdateOperationsInput | string | null
    residencestatus?: NullableStringFieldUpdateOperationsInput | string | null
    self_origin_lga?: NullableStringFieldUpdateOperationsInput | string | null
    self_origin_place?: NullableStringFieldUpdateOperationsInput | string | null
    self_origin_state?: NullableStringFieldUpdateOperationsInput | string | null
    signature?: NullableStringFieldUpdateOperationsInput | string | null
    spoken_language?: NullableStringFieldUpdateOperationsInput | string | null
    telephoneno?: NullableStringFieldUpdateOperationsInput | string | null
    userid?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type document_uploadsUpsertWithoutRegistrationsInput = {
    update: XOR<document_uploadsUpdateWithoutRegistrationsInput, document_uploadsUncheckedUpdateWithoutRegistrationsInput>
    create: XOR<document_uploadsCreateWithoutRegistrationsInput, document_uploadsUncheckedCreateWithoutRegistrationsInput>
    where?: document_uploadsWhereInput
  }

  export type document_uploadsUpdateToOneWithWhereWithoutRegistrationsInput = {
    where?: document_uploadsWhereInput
    data: XOR<document_uploadsUpdateWithoutRegistrationsInput, document_uploadsUncheckedUpdateWithoutRegistrationsInput>
  }

  export type document_uploadsUpdateWithoutRegistrationsInput = {
    appointment_letter_path?: StringFieldUpdateOperationsInput | string
    educational_certificates_path?: StringFieldUpdateOperationsInput | string
    promotion_letter_path?: NullableStringFieldUpdateOperationsInput | string | null
    other_documents_path?: NullableStringFieldUpdateOperationsInput | string | null
    profile_image_path?: StringFieldUpdateOperationsInput | string
    signature_path?: StringFieldUpdateOperationsInput | string
    upload_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type document_uploadsUncheckedUpdateWithoutRegistrationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    appointment_letter_path?: StringFieldUpdateOperationsInput | string
    educational_certificates_path?: StringFieldUpdateOperationsInput | string
    promotion_letter_path?: NullableStringFieldUpdateOperationsInput | string | null
    other_documents_path?: NullableStringFieldUpdateOperationsInput | string | null
    profile_image_path?: StringFieldUpdateOperationsInput | string
    signature_path?: StringFieldUpdateOperationsInput | string
    upload_date?: DateTimeFieldUpdateOperationsInput | Date | string
    status?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type employment_infoUpsertWithoutRegistrationsInput = {
    update: XOR<employment_infoUpdateWithoutRegistrationsInput, employment_infoUncheckedUpdateWithoutRegistrationsInput>
    create: XOR<employment_infoCreateWithoutRegistrationsInput, employment_infoUncheckedCreateWithoutRegistrationsInput>
    where?: employment_infoWhereInput
  }

  export type employment_infoUpdateToOneWithWhereWithoutRegistrationsInput = {
    where?: employment_infoWhereInput
    data: XOR<employment_infoUpdateWithoutRegistrationsInput, employment_infoUncheckedUpdateWithoutRegistrationsInput>
  }

  export type employment_infoUpdateWithoutRegistrationsInput = {
    employment_id_no?: StringFieldUpdateOperationsInput | string
    service_no?: StringFieldUpdateOperationsInput | string
    file_no?: StringFieldUpdateOperationsInput | string
    rank_position?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    organization?: StringFieldUpdateOperationsInput | string
    employment_type?: StringFieldUpdateOperationsInput | string
    probation_period?: StringFieldUpdateOperationsInput | string
    work_location?: StringFieldUpdateOperationsInput | string
    date_of_first_appointment?: DateTimeFieldUpdateOperationsInput | Date | string
    gl?: StringFieldUpdateOperationsInput | string
    step?: StringFieldUpdateOperationsInput | string
    salary_structure?: StringFieldUpdateOperationsInput | string
    cadre?: StringFieldUpdateOperationsInput | string
    name_of_bank?: StringFieldUpdateOperationsInput | string
    account_number?: StringFieldUpdateOperationsInput | string
    pfa_name?: StringFieldUpdateOperationsInput | string
    rsapin?: StringFieldUpdateOperationsInput | string
    educational_background?: NullableStringFieldUpdateOperationsInput | string | null
    certifications?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type employment_infoUncheckedUpdateWithoutRegistrationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    employment_id_no?: StringFieldUpdateOperationsInput | string
    service_no?: StringFieldUpdateOperationsInput | string
    file_no?: StringFieldUpdateOperationsInput | string
    rank_position?: StringFieldUpdateOperationsInput | string
    department?: StringFieldUpdateOperationsInput | string
    organization?: StringFieldUpdateOperationsInput | string
    employment_type?: StringFieldUpdateOperationsInput | string
    probation_period?: StringFieldUpdateOperationsInput | string
    work_location?: StringFieldUpdateOperationsInput | string
    date_of_first_appointment?: DateTimeFieldUpdateOperationsInput | Date | string
    gl?: StringFieldUpdateOperationsInput | string
    step?: StringFieldUpdateOperationsInput | string
    salary_structure?: StringFieldUpdateOperationsInput | string
    cadre?: StringFieldUpdateOperationsInput | string
    name_of_bank?: StringFieldUpdateOperationsInput | string
    account_number?: StringFieldUpdateOperationsInput | string
    pfa_name?: StringFieldUpdateOperationsInput | string
    rsapin?: StringFieldUpdateOperationsInput | string
    educational_background?: NullableStringFieldUpdateOperationsInput | string | null
    certifications?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type personal_infoUpsertWithoutRegistrationsInput = {
    update: XOR<personal_infoUpdateWithoutRegistrationsInput, personal_infoUncheckedUpdateWithoutRegistrationsInput>
    create: XOR<personal_infoCreateWithoutRegistrationsInput, personal_infoUncheckedCreateWithoutRegistrationsInput>
    where?: personal_infoWhereInput
  }

  export type personal_infoUpdateToOneWithWhereWithoutRegistrationsInput = {
    where?: personal_infoWhereInput
    data: XOR<personal_infoUpdateWithoutRegistrationsInput, personal_infoUncheckedUpdateWithoutRegistrationsInput>
  }

  export type personal_infoUpdateWithoutRegistrationsInput = {
    title?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    other_names?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    sex?: StringFieldUpdateOperationsInput | string
    marital_status?: StringFieldUpdateOperationsInput | string
    state_of_origin?: StringFieldUpdateOperationsInput | string
    lga?: StringFieldUpdateOperationsInput | string
    state_of_residence?: StringFieldUpdateOperationsInput | string
    address_state_of_residence?: StringFieldUpdateOperationsInput | string
    next_of_kin_name?: StringFieldUpdateOperationsInput | string
    next_of_kin_relationship?: StringFieldUpdateOperationsInput | string
    next_of_kin_phone_number?: StringFieldUpdateOperationsInput | string
    next_of_kin_address?: StringFieldUpdateOperationsInput | string
  }

  export type personal_infoUncheckedUpdateWithoutRegistrationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    surname?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    other_names?: NullableStringFieldUpdateOperationsInput | string | null
    phone_number?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    sex?: StringFieldUpdateOperationsInput | string
    marital_status?: StringFieldUpdateOperationsInput | string
    state_of_origin?: StringFieldUpdateOperationsInput | string
    lga?: StringFieldUpdateOperationsInput | string
    state_of_residence?: StringFieldUpdateOperationsInput | string
    address_state_of_residence?: StringFieldUpdateOperationsInput | string
    next_of_kin_name?: StringFieldUpdateOperationsInput | string
    next_of_kin_relationship?: StringFieldUpdateOperationsInput | string
    next_of_kin_phone_number?: StringFieldUpdateOperationsInput | string
    next_of_kin_address?: StringFieldUpdateOperationsInput | string
  }

  export type registration_commentsUpsertWithWhereUniqueWithoutRegistrationsInput = {
    where: registration_commentsWhereUniqueInput
    update: XOR<registration_commentsUpdateWithoutRegistrationsInput, registration_commentsUncheckedUpdateWithoutRegistrationsInput>
    create: XOR<registration_commentsCreateWithoutRegistrationsInput, registration_commentsUncheckedCreateWithoutRegistrationsInput>
  }

  export type registration_commentsUpdateWithWhereUniqueWithoutRegistrationsInput = {
    where: registration_commentsWhereUniqueInput
    data: XOR<registration_commentsUpdateWithoutRegistrationsInput, registration_commentsUncheckedUpdateWithoutRegistrationsInput>
  }

  export type registration_commentsUpdateManyWithWhereWithoutRegistrationsInput = {
    where: registration_commentsScalarWhereInput
    data: XOR<registration_commentsUpdateManyMutationInput, registration_commentsUncheckedUpdateManyWithoutRegistrationsInput>
  }

  export type registration_commentsScalarWhereInput = {
    AND?: registration_commentsScalarWhereInput | registration_commentsScalarWhereInput[]
    OR?: registration_commentsScalarWhereInput[]
    NOT?: registration_commentsScalarWhereInput | registration_commentsScalarWhereInput[]
    id?: IntFilter<"registration_comments"> | number
    registration_id?: StringFilter<"registration_comments"> | string
    comment_text?: StringFilter<"registration_comments"> | string
    author?: StringNullableFilter<"registration_comments"> | string | null
    created_at?: DateTimeFilter<"registration_comments"> | Date | string
  }

  export type registration_historyUpsertWithWhereUniqueWithoutRegistrationsInput = {
    where: registration_historyWhereUniqueInput
    update: XOR<registration_historyUpdateWithoutRegistrationsInput, registration_historyUncheckedUpdateWithoutRegistrationsInput>
    create: XOR<registration_historyCreateWithoutRegistrationsInput, registration_historyUncheckedCreateWithoutRegistrationsInput>
  }

  export type registration_historyUpdateWithWhereUniqueWithoutRegistrationsInput = {
    where: registration_historyWhereUniqueInput
    data: XOR<registration_historyUpdateWithoutRegistrationsInput, registration_historyUncheckedUpdateWithoutRegistrationsInput>
  }

  export type registration_historyUpdateManyWithWhereWithoutRegistrationsInput = {
    where: registration_historyScalarWhereInput
    data: XOR<registration_historyUpdateManyMutationInput, registration_historyUncheckedUpdateManyWithoutRegistrationsInput>
  }

  export type registration_historyScalarWhereInput = {
    AND?: registration_historyScalarWhereInput | registration_historyScalarWhereInput[]
    OR?: registration_historyScalarWhereInput[]
    NOT?: registration_historyScalarWhereInput | registration_historyScalarWhereInput[]
    id?: IntFilter<"registration_history"> | number
    registration_id?: StringNullableFilter<"registration_history"> | string | null
    action?: StringFilter<"registration_history"> | string
    details?: StringNullableFilter<"registration_history"> | string | null
    performed_by?: StringNullableFilter<"registration_history"> | string | null
    performed_at?: DateTimeFilter<"registration_history"> | Date | string
  }

  export type registrationsCreateWithoutVerificationDataInput = {
    registration_Id?: string
    nin?: string | null
    status?: string
    current_step?: string
    declaration?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    submitted_at?: Date | string | null
    approved_at?: Date | string | null
    rejected_at?: Date | string | null
    document_uploads?: document_uploadsCreateNestedOneWithoutRegistrationsInput
    employment_info?: employment_infoCreateNestedOneWithoutRegistrationsInput
    personal_info?: personal_infoCreateNestedOneWithoutRegistrationsInput
    registration_comments?: registration_commentsCreateNestedManyWithoutRegistrationsInput
    registration_history?: registration_historyCreateNestedManyWithoutRegistrationsInput
  }

  export type registrationsUncheckedCreateWithoutVerificationDataInput = {
    id?: number
    registration_Id?: string
    nin?: string | null
    status?: string
    current_step?: string
    declaration?: boolean | null
    created_at?: Date | string
    updated_at?: Date | string
    submitted_at?: Date | string | null
    approved_at?: Date | string | null
    rejected_at?: Date | string | null
    document_uploads?: document_uploadsUncheckedCreateNestedOneWithoutRegistrationsInput
    employment_info?: employment_infoUncheckedCreateNestedOneWithoutRegistrationsInput
    personal_info?: personal_infoUncheckedCreateNestedOneWithoutRegistrationsInput
    registration_comments?: registration_commentsUncheckedCreateNestedManyWithoutRegistrationsInput
    registration_history?: registration_historyUncheckedCreateNestedManyWithoutRegistrationsInput
  }

  export type registrationsCreateOrConnectWithoutVerificationDataInput = {
    where: registrationsWhereUniqueInput
    create: XOR<registrationsCreateWithoutVerificationDataInput, registrationsUncheckedCreateWithoutVerificationDataInput>
  }

  export type registrationsUpsertWithoutVerificationDataInput = {
    update: XOR<registrationsUpdateWithoutVerificationDataInput, registrationsUncheckedUpdateWithoutVerificationDataInput>
    create: XOR<registrationsCreateWithoutVerificationDataInput, registrationsUncheckedCreateWithoutVerificationDataInput>
    where?: registrationsWhereInput
  }

  export type registrationsUpdateToOneWithWhereWithoutVerificationDataInput = {
    where?: registrationsWhereInput
    data: XOR<registrationsUpdateWithoutVerificationDataInput, registrationsUncheckedUpdateWithoutVerificationDataInput>
  }

  export type registrationsUpdateWithoutVerificationDataInput = {
    registration_Id?: StringFieldUpdateOperationsInput | string
    nin?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    current_step?: StringFieldUpdateOperationsInput | string
    declaration?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    submitted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rejected_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    document_uploads?: document_uploadsUpdateOneWithoutRegistrationsNestedInput
    employment_info?: employment_infoUpdateOneWithoutRegistrationsNestedInput
    personal_info?: personal_infoUpdateOneWithoutRegistrationsNestedInput
    registration_comments?: registration_commentsUpdateManyWithoutRegistrationsNestedInput
    registration_history?: registration_historyUpdateManyWithoutRegistrationsNestedInput
  }

  export type registrationsUncheckedUpdateWithoutVerificationDataInput = {
    id?: IntFieldUpdateOperationsInput | number
    registration_Id?: StringFieldUpdateOperationsInput | string
    nin?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    current_step?: StringFieldUpdateOperationsInput | string
    declaration?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    submitted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    approved_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    rejected_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    document_uploads?: document_uploadsUncheckedUpdateOneWithoutRegistrationsNestedInput
    employment_info?: employment_infoUncheckedUpdateOneWithoutRegistrationsNestedInput
    personal_info?: personal_infoUncheckedUpdateOneWithoutRegistrationsNestedInput
    registration_comments?: registration_commentsUncheckedUpdateManyWithoutRegistrationsNestedInput
    registration_history?: registration_historyUncheckedUpdateManyWithoutRegistrationsNestedInput
  }

  export type admin_sessionsCreateManyAdmin_usersInput = {
    id?: number
    session_token: string
    expires_at: Date | string
    created_at?: Date | string
    ip_address?: string | null
    user_agent?: string | null
  }

  export type dashboard_notificationsCreateManyAdmin_usersInput = {
    id?: number
    title: string
    message: string
    type: string
    is_read?: boolean
    created_at?: Date | string
    expires_at?: Date | string | null
    action_url?: string | null
  }

  export type dashboard_widgetsCreateManyAdmin_usersInput = {
    id?: number
    widget_type: string
    widget_position: number
    widget_size?: string
    widget_config?: JsonNullValueInput | InputJsonValue
    is_visible?: boolean
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type admin_sessionsUpdateWithoutAdmin_usersInput = {
    session_token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type admin_sessionsUncheckedUpdateWithoutAdmin_usersInput = {
    id?: IntFieldUpdateOperationsInput | number
    session_token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type admin_sessionsUncheckedUpdateManyWithoutAdmin_usersInput = {
    id?: IntFieldUpdateOperationsInput | number
    session_token?: StringFieldUpdateOperationsInput | string
    expires_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    ip_address?: NullableStringFieldUpdateOperationsInput | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type dashboard_notificationsUpdateWithoutAdmin_usersInput = {
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    action_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type dashboard_notificationsUncheckedUpdateWithoutAdmin_usersInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    action_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type dashboard_notificationsUncheckedUpdateManyWithoutAdmin_usersInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    expires_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    action_url?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type dashboard_widgetsUpdateWithoutAdmin_usersInput = {
    widget_type?: StringFieldUpdateOperationsInput | string
    widget_position?: IntFieldUpdateOperationsInput | number
    widget_size?: StringFieldUpdateOperationsInput | string
    widget_config?: JsonNullValueInput | InputJsonValue
    is_visible?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type dashboard_widgetsUncheckedUpdateWithoutAdmin_usersInput = {
    id?: IntFieldUpdateOperationsInput | number
    widget_type?: StringFieldUpdateOperationsInput | string
    widget_position?: IntFieldUpdateOperationsInput | number
    widget_size?: StringFieldUpdateOperationsInput | string
    widget_config?: JsonNullValueInput | InputJsonValue
    is_visible?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type dashboard_widgetsUncheckedUpdateManyWithoutAdmin_usersInput = {
    id?: IntFieldUpdateOperationsInput | number
    widget_type?: StringFieldUpdateOperationsInput | string
    widget_position?: IntFieldUpdateOperationsInput | number
    widget_size?: StringFieldUpdateOperationsInput | string
    widget_config?: JsonNullValueInput | InputJsonValue
    is_visible?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type registration_commentsCreateManyRegistrationsInput = {
    id?: number
    comment_text: string
    author?: string | null
    created_at?: Date | string
  }

  export type registration_historyCreateManyRegistrationsInput = {
    id?: number
    action: string
    details?: string | null
    performed_by?: string | null
    performed_at?: Date | string
  }

  export type registration_commentsUpdateWithoutRegistrationsInput = {
    comment_text?: StringFieldUpdateOperationsInput | string
    author?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type registration_commentsUncheckedUpdateWithoutRegistrationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    comment_text?: StringFieldUpdateOperationsInput | string
    author?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type registration_commentsUncheckedUpdateManyWithoutRegistrationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    comment_text?: StringFieldUpdateOperationsInput | string
    author?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type registration_historyUpdateWithoutRegistrationsInput = {
    action?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    performed_by?: NullableStringFieldUpdateOperationsInput | string | null
    performed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type registration_historyUncheckedUpdateWithoutRegistrationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    action?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    performed_by?: NullableStringFieldUpdateOperationsInput | string | null
    performed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type registration_historyUncheckedUpdateManyWithoutRegistrationsInput = {
    id?: IntFieldUpdateOperationsInput | number
    action?: StringFieldUpdateOperationsInput | string
    details?: NullableStringFieldUpdateOperationsInput | string | null
    performed_by?: NullableStringFieldUpdateOperationsInput | string | null
    performed_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}